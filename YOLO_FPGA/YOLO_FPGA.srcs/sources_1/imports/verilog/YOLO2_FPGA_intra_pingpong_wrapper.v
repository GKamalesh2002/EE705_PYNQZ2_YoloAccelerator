// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module YOLO2_FPGA_intra_pingpong_wrapper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_DATA_BUS_AWVALID,
        m_axi_DATA_BUS_AWREADY,
        m_axi_DATA_BUS_AWADDR,
        m_axi_DATA_BUS_AWID,
        m_axi_DATA_BUS_AWLEN,
        m_axi_DATA_BUS_AWSIZE,
        m_axi_DATA_BUS_AWBURST,
        m_axi_DATA_BUS_AWLOCK,
        m_axi_DATA_BUS_AWCACHE,
        m_axi_DATA_BUS_AWPROT,
        m_axi_DATA_BUS_AWQOS,
        m_axi_DATA_BUS_AWREGION,
        m_axi_DATA_BUS_AWUSER,
        m_axi_DATA_BUS_WVALID,
        m_axi_DATA_BUS_WREADY,
        m_axi_DATA_BUS_WDATA,
        m_axi_DATA_BUS_WSTRB,
        m_axi_DATA_BUS_WLAST,
        m_axi_DATA_BUS_WID,
        m_axi_DATA_BUS_WUSER,
        m_axi_DATA_BUS_ARVALID,
        m_axi_DATA_BUS_ARREADY,
        m_axi_DATA_BUS_ARADDR,
        m_axi_DATA_BUS_ARID,
        m_axi_DATA_BUS_ARLEN,
        m_axi_DATA_BUS_ARSIZE,
        m_axi_DATA_BUS_ARBURST,
        m_axi_DATA_BUS_ARLOCK,
        m_axi_DATA_BUS_ARCACHE,
        m_axi_DATA_BUS_ARPROT,
        m_axi_DATA_BUS_ARQOS,
        m_axi_DATA_BUS_ARREGION,
        m_axi_DATA_BUS_ARUSER,
        m_axi_DATA_BUS_RVALID,
        m_axi_DATA_BUS_RREADY,
        m_axi_DATA_BUS_RDATA,
        m_axi_DATA_BUS_RLAST,
        m_axi_DATA_BUS_RID,
        m_axi_DATA_BUS_RUSER,
        m_axi_DATA_BUS_RRESP,
        m_axi_DATA_BUS_BVALID,
        m_axi_DATA_BUS_BREADY,
        m_axi_DATA_BUS_BRESP,
        m_axi_DATA_BUS_BID,
        m_axi_DATA_BUS_BUSER,
        m_axi_DATA_BUS2_AWVALID,
        m_axi_DATA_BUS2_AWREADY,
        m_axi_DATA_BUS2_AWADDR,
        m_axi_DATA_BUS2_AWID,
        m_axi_DATA_BUS2_AWLEN,
        m_axi_DATA_BUS2_AWSIZE,
        m_axi_DATA_BUS2_AWBURST,
        m_axi_DATA_BUS2_AWLOCK,
        m_axi_DATA_BUS2_AWCACHE,
        m_axi_DATA_BUS2_AWPROT,
        m_axi_DATA_BUS2_AWQOS,
        m_axi_DATA_BUS2_AWREGION,
        m_axi_DATA_BUS2_AWUSER,
        m_axi_DATA_BUS2_WVALID,
        m_axi_DATA_BUS2_WREADY,
        m_axi_DATA_BUS2_WDATA,
        m_axi_DATA_BUS2_WSTRB,
        m_axi_DATA_BUS2_WLAST,
        m_axi_DATA_BUS2_WID,
        m_axi_DATA_BUS2_WUSER,
        m_axi_DATA_BUS2_ARVALID,
        m_axi_DATA_BUS2_ARREADY,
        m_axi_DATA_BUS2_ARADDR,
        m_axi_DATA_BUS2_ARID,
        m_axi_DATA_BUS2_ARLEN,
        m_axi_DATA_BUS2_ARSIZE,
        m_axi_DATA_BUS2_ARBURST,
        m_axi_DATA_BUS2_ARLOCK,
        m_axi_DATA_BUS2_ARCACHE,
        m_axi_DATA_BUS2_ARPROT,
        m_axi_DATA_BUS2_ARQOS,
        m_axi_DATA_BUS2_ARREGION,
        m_axi_DATA_BUS2_ARUSER,
        m_axi_DATA_BUS2_RVALID,
        m_axi_DATA_BUS2_RREADY,
        m_axi_DATA_BUS2_RDATA,
        m_axi_DATA_BUS2_RLAST,
        m_axi_DATA_BUS2_RID,
        m_axi_DATA_BUS2_RUSER,
        m_axi_DATA_BUS2_RRESP,
        m_axi_DATA_BUS2_BVALID,
        m_axi_DATA_BUS2_BREADY,
        m_axi_DATA_BUS2_BRESP,
        m_axi_DATA_BUS2_BID,
        m_axi_DATA_BUS2_BUSER,
        Input_r,
        Weight,
        output_buffer_address0,
        output_buffer_ce0,
        output_buffer_we0,
        output_buffer_d0,
        output_buffer1_address0,
        output_buffer1_ce0,
        output_buffer1_we0,
        output_buffer1_d0,
        output_buffer2_address0,
        output_buffer2_ce0,
        output_buffer2_we0,
        output_buffer2_d0,
        output_buffer3_address0,
        output_buffer3_ce0,
        output_buffer3_we0,
        output_buffer3_d0,
        output_buffer4_address0,
        output_buffer4_ce0,
        output_buffer4_we0,
        output_buffer4_d0,
        output_buffer5_address0,
        output_buffer5_ce0,
        output_buffer5_we0,
        output_buffer5_d0,
        output_buffer6_address0,
        output_buffer6_ce0,
        output_buffer6_we0,
        output_buffer6_d0,
        output_buffer7_address0,
        output_buffer7_ce0,
        output_buffer7_we0,
        output_buffer7_d0,
        output_buffer8_address0,
        output_buffer8_ce0,
        output_buffer8_we0,
        output_buffer8_d0,
        output_buffer9_address0,
        output_buffer9_ce0,
        output_buffer9_we0,
        output_buffer9_d0,
        output_buffer10_address0,
        output_buffer10_ce0,
        output_buffer10_we0,
        output_buffer10_d0,
        output_buffer11_address0,
        output_buffer11_ce0,
        output_buffer11_we0,
        output_buffer11_d0,
        output_buffer12_address0,
        output_buffer12_ce0,
        output_buffer12_we0,
        output_buffer12_d0,
        output_buffer13_address0,
        output_buffer13_ce0,
        output_buffer13_we0,
        output_buffer13_d0,
        output_buffer14_address0,
        output_buffer14_ce0,
        output_buffer14_we0,
        output_buffer14_d0,
        output_buffer15_address0,
        output_buffer15_ce0,
        output_buffer15_we0,
        output_buffer15_d0,
        output_buffer16_address0,
        output_buffer16_ce0,
        output_buffer16_we0,
        output_buffer16_d0,
        output_buffer17_address0,
        output_buffer17_ce0,
        output_buffer17_we0,
        output_buffer17_d0,
        output_buffer18_address0,
        output_buffer18_ce0,
        output_buffer18_we0,
        output_buffer18_d0,
        output_buffer19_address0,
        output_buffer19_ce0,
        output_buffer19_we0,
        output_buffer19_d0,
        output_buffer20_address0,
        output_buffer20_ce0,
        output_buffer20_we0,
        output_buffer20_d0,
        output_buffer21_address0,
        output_buffer21_ce0,
        output_buffer21_we0,
        output_buffer21_d0,
        output_buffer22_address0,
        output_buffer22_ce0,
        output_buffer22_we0,
        output_buffer22_d0,
        output_buffer23_address0,
        output_buffer23_ce0,
        output_buffer23_we0,
        output_buffer23_d0,
        output_buffer24_address0,
        output_buffer24_ce0,
        output_buffer24_we0,
        output_buffer24_d0,
        output_buffer25_address0,
        output_buffer25_ce0,
        output_buffer25_we0,
        output_buffer25_d0,
        output_buffer26_address0,
        output_buffer26_ce0,
        output_buffer26_we0,
        output_buffer26_d0,
        output_buffer27_address0,
        output_buffer27_ce0,
        output_buffer27_we0,
        output_buffer27_d0,
        output_buffer28_address0,
        output_buffer28_ce0,
        output_buffer28_we0,
        output_buffer28_d0,
        output_buffer29_address0,
        output_buffer29_ce0,
        output_buffer29_we0,
        output_buffer29_d0,
        output_buffer30_address0,
        output_buffer30_ce0,
        output_buffer30_we0,
        output_buffer30_d0,
        output_buffer31_address0,
        output_buffer31_ce0,
        output_buffer31_we0,
        output_buffer31_d0,
        InFM_num,
        Input_w,
        Input_h,
        Kernel_size,
        Kernel_stride,
        TMP_R,
        TMP_C,
        TMP_M,
        TM_MIN,
        TR_MIN,
        TC_MIN,
        TN,
        TRow,
        TCol,
        Padding,
        IHxIW,
        KxK,
        nLoops,
        IsNL,
        LayerType,
        TM,
        p_read,
        p_read1,
        pingpongx_offset,
        input_flag,
        process_flag,
        InterSubBeta,
        WeightAddInputSubInter,
        InterSubOutput,
        beta_buffer_address0,
        beta_buffer_ce0,
        beta_buffer_q0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_pp0_stage0 = 24'd64;
parameter    ap_ST_fsm_state17 = 24'd128;
parameter    ap_ST_fsm_state18 = 24'd256;
parameter    ap_ST_fsm_state19 = 24'd512;
parameter    ap_ST_fsm_state20 = 24'd1024;
parameter    ap_ST_fsm_state21 = 24'd2048;
parameter    ap_ST_fsm_state22 = 24'd4096;
parameter    ap_ST_fsm_pp1_stage0 = 24'd8192;
parameter    ap_ST_fsm_state33 = 24'd16384;
parameter    ap_ST_fsm_state34 = 24'd32768;
parameter    ap_ST_fsm_state35 = 24'd65536;
parameter    ap_ST_fsm_state36 = 24'd131072;
parameter    ap_ST_fsm_state37 = 24'd262144;
parameter    ap_ST_fsm_state38 = 24'd524288;
parameter    ap_ST_fsm_state39 = 24'd1048576;
parameter    ap_ST_fsm_state40 = 24'd2097152;
parameter    ap_ST_fsm_state41 = 24'd4194304;
parameter    ap_ST_fsm_state42 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_DATA_BUS_AWVALID;
input   m_axi_DATA_BUS_AWREADY;
output  [63:0] m_axi_DATA_BUS_AWADDR;
output  [0:0] m_axi_DATA_BUS_AWID;
output  [31:0] m_axi_DATA_BUS_AWLEN;
output  [2:0] m_axi_DATA_BUS_AWSIZE;
output  [1:0] m_axi_DATA_BUS_AWBURST;
output  [1:0] m_axi_DATA_BUS_AWLOCK;
output  [3:0] m_axi_DATA_BUS_AWCACHE;
output  [2:0] m_axi_DATA_BUS_AWPROT;
output  [3:0] m_axi_DATA_BUS_AWQOS;
output  [3:0] m_axi_DATA_BUS_AWREGION;
output  [0:0] m_axi_DATA_BUS_AWUSER;
output   m_axi_DATA_BUS_WVALID;
input   m_axi_DATA_BUS_WREADY;
output  [31:0] m_axi_DATA_BUS_WDATA;
output  [3:0] m_axi_DATA_BUS_WSTRB;
output   m_axi_DATA_BUS_WLAST;
output  [0:0] m_axi_DATA_BUS_WID;
output  [0:0] m_axi_DATA_BUS_WUSER;
output   m_axi_DATA_BUS_ARVALID;
input   m_axi_DATA_BUS_ARREADY;
output  [63:0] m_axi_DATA_BUS_ARADDR;
output  [0:0] m_axi_DATA_BUS_ARID;
output  [31:0] m_axi_DATA_BUS_ARLEN;
output  [2:0] m_axi_DATA_BUS_ARSIZE;
output  [1:0] m_axi_DATA_BUS_ARBURST;
output  [1:0] m_axi_DATA_BUS_ARLOCK;
output  [3:0] m_axi_DATA_BUS_ARCACHE;
output  [2:0] m_axi_DATA_BUS_ARPROT;
output  [3:0] m_axi_DATA_BUS_ARQOS;
output  [3:0] m_axi_DATA_BUS_ARREGION;
output  [0:0] m_axi_DATA_BUS_ARUSER;
input   m_axi_DATA_BUS_RVALID;
output   m_axi_DATA_BUS_RREADY;
input  [31:0] m_axi_DATA_BUS_RDATA;
input   m_axi_DATA_BUS_RLAST;
input  [0:0] m_axi_DATA_BUS_RID;
input  [0:0] m_axi_DATA_BUS_RUSER;
input  [1:0] m_axi_DATA_BUS_RRESP;
input   m_axi_DATA_BUS_BVALID;
output   m_axi_DATA_BUS_BREADY;
input  [1:0] m_axi_DATA_BUS_BRESP;
input  [0:0] m_axi_DATA_BUS_BID;
input  [0:0] m_axi_DATA_BUS_BUSER;
output   m_axi_DATA_BUS2_AWVALID;
input   m_axi_DATA_BUS2_AWREADY;
output  [63:0] m_axi_DATA_BUS2_AWADDR;
output  [0:0] m_axi_DATA_BUS2_AWID;
output  [31:0] m_axi_DATA_BUS2_AWLEN;
output  [2:0] m_axi_DATA_BUS2_AWSIZE;
output  [1:0] m_axi_DATA_BUS2_AWBURST;
output  [1:0] m_axi_DATA_BUS2_AWLOCK;
output  [3:0] m_axi_DATA_BUS2_AWCACHE;
output  [2:0] m_axi_DATA_BUS2_AWPROT;
output  [3:0] m_axi_DATA_BUS2_AWQOS;
output  [3:0] m_axi_DATA_BUS2_AWREGION;
output  [0:0] m_axi_DATA_BUS2_AWUSER;
output   m_axi_DATA_BUS2_WVALID;
input   m_axi_DATA_BUS2_WREADY;
output  [31:0] m_axi_DATA_BUS2_WDATA;
output  [3:0] m_axi_DATA_BUS2_WSTRB;
output   m_axi_DATA_BUS2_WLAST;
output  [0:0] m_axi_DATA_BUS2_WID;
output  [0:0] m_axi_DATA_BUS2_WUSER;
output   m_axi_DATA_BUS2_ARVALID;
input   m_axi_DATA_BUS2_ARREADY;
output  [63:0] m_axi_DATA_BUS2_ARADDR;
output  [0:0] m_axi_DATA_BUS2_ARID;
output  [31:0] m_axi_DATA_BUS2_ARLEN;
output  [2:0] m_axi_DATA_BUS2_ARSIZE;
output  [1:0] m_axi_DATA_BUS2_ARBURST;
output  [1:0] m_axi_DATA_BUS2_ARLOCK;
output  [3:0] m_axi_DATA_BUS2_ARCACHE;
output  [2:0] m_axi_DATA_BUS2_ARPROT;
output  [3:0] m_axi_DATA_BUS2_ARQOS;
output  [3:0] m_axi_DATA_BUS2_ARREGION;
output  [0:0] m_axi_DATA_BUS2_ARUSER;
input   m_axi_DATA_BUS2_RVALID;
output   m_axi_DATA_BUS2_RREADY;
input  [31:0] m_axi_DATA_BUS2_RDATA;
input   m_axi_DATA_BUS2_RLAST;
input  [0:0] m_axi_DATA_BUS2_RID;
input  [0:0] m_axi_DATA_BUS2_RUSER;
input  [1:0] m_axi_DATA_BUS2_RRESP;
input   m_axi_DATA_BUS2_BVALID;
output   m_axi_DATA_BUS2_BREADY;
input  [1:0] m_axi_DATA_BUS2_BRESP;
input  [0:0] m_axi_DATA_BUS2_BID;
input  [0:0] m_axi_DATA_BUS2_BUSER;
input  [63:0] Input_r;
input  [63:0] Weight;
output  [9:0] output_buffer_address0;
output   output_buffer_ce0;
output   output_buffer_we0;
output  [15:0] output_buffer_d0;
output  [9:0] output_buffer1_address0;
output   output_buffer1_ce0;
output   output_buffer1_we0;
output  [15:0] output_buffer1_d0;
output  [9:0] output_buffer2_address0;
output   output_buffer2_ce0;
output   output_buffer2_we0;
output  [15:0] output_buffer2_d0;
output  [9:0] output_buffer3_address0;
output   output_buffer3_ce0;
output   output_buffer3_we0;
output  [15:0] output_buffer3_d0;
output  [9:0] output_buffer4_address0;
output   output_buffer4_ce0;
output   output_buffer4_we0;
output  [15:0] output_buffer4_d0;
output  [9:0] output_buffer5_address0;
output   output_buffer5_ce0;
output   output_buffer5_we0;
output  [15:0] output_buffer5_d0;
output  [9:0] output_buffer6_address0;
output   output_buffer6_ce0;
output   output_buffer6_we0;
output  [15:0] output_buffer6_d0;
output  [9:0] output_buffer7_address0;
output   output_buffer7_ce0;
output   output_buffer7_we0;
output  [15:0] output_buffer7_d0;
output  [9:0] output_buffer8_address0;
output   output_buffer8_ce0;
output   output_buffer8_we0;
output  [15:0] output_buffer8_d0;
output  [9:0] output_buffer9_address0;
output   output_buffer9_ce0;
output   output_buffer9_we0;
output  [15:0] output_buffer9_d0;
output  [9:0] output_buffer10_address0;
output   output_buffer10_ce0;
output   output_buffer10_we0;
output  [15:0] output_buffer10_d0;
output  [9:0] output_buffer11_address0;
output   output_buffer11_ce0;
output   output_buffer11_we0;
output  [15:0] output_buffer11_d0;
output  [9:0] output_buffer12_address0;
output   output_buffer12_ce0;
output   output_buffer12_we0;
output  [15:0] output_buffer12_d0;
output  [9:0] output_buffer13_address0;
output   output_buffer13_ce0;
output   output_buffer13_we0;
output  [15:0] output_buffer13_d0;
output  [9:0] output_buffer14_address0;
output   output_buffer14_ce0;
output   output_buffer14_we0;
output  [15:0] output_buffer14_d0;
output  [9:0] output_buffer15_address0;
output   output_buffer15_ce0;
output   output_buffer15_we0;
output  [15:0] output_buffer15_d0;
output  [9:0] output_buffer16_address0;
output   output_buffer16_ce0;
output   output_buffer16_we0;
output  [15:0] output_buffer16_d0;
output  [9:0] output_buffer17_address0;
output   output_buffer17_ce0;
output   output_buffer17_we0;
output  [15:0] output_buffer17_d0;
output  [9:0] output_buffer18_address0;
output   output_buffer18_ce0;
output   output_buffer18_we0;
output  [15:0] output_buffer18_d0;
output  [9:0] output_buffer19_address0;
output   output_buffer19_ce0;
output   output_buffer19_we0;
output  [15:0] output_buffer19_d0;
output  [9:0] output_buffer20_address0;
output   output_buffer20_ce0;
output   output_buffer20_we0;
output  [15:0] output_buffer20_d0;
output  [9:0] output_buffer21_address0;
output   output_buffer21_ce0;
output   output_buffer21_we0;
output  [15:0] output_buffer21_d0;
output  [9:0] output_buffer22_address0;
output   output_buffer22_ce0;
output   output_buffer22_we0;
output  [15:0] output_buffer22_d0;
output  [9:0] output_buffer23_address0;
output   output_buffer23_ce0;
output   output_buffer23_we0;
output  [15:0] output_buffer23_d0;
output  [9:0] output_buffer24_address0;
output   output_buffer24_ce0;
output   output_buffer24_we0;
output  [15:0] output_buffer24_d0;
output  [9:0] output_buffer25_address0;
output   output_buffer25_ce0;
output   output_buffer25_we0;
output  [15:0] output_buffer25_d0;
output  [9:0] output_buffer26_address0;
output   output_buffer26_ce0;
output   output_buffer26_we0;
output  [15:0] output_buffer26_d0;
output  [9:0] output_buffer27_address0;
output   output_buffer27_ce0;
output   output_buffer27_we0;
output  [15:0] output_buffer27_d0;
output  [9:0] output_buffer28_address0;
output   output_buffer28_ce0;
output   output_buffer28_we0;
output  [15:0] output_buffer28_d0;
output  [9:0] output_buffer29_address0;
output   output_buffer29_ce0;
output   output_buffer29_we0;
output  [15:0] output_buffer29_d0;
output  [9:0] output_buffer30_address0;
output   output_buffer30_ce0;
output   output_buffer30_we0;
output  [15:0] output_buffer30_d0;
output  [9:0] output_buffer31_address0;
output   output_buffer31_ce0;
output   output_buffer31_we0;
output  [15:0] output_buffer31_d0;
input  [31:0] InFM_num;
input  [31:0] Input_w;
input  [8:0] Input_h;
input  [1:0] Kernel_size;
input  [1:0] Kernel_stride;
input  [8:0] TMP_R;
input  [8:0] TMP_C;
input  [31:0] TMP_M;
input  [31:0] TM_MIN;
input  [31:0] TR_MIN;
input  [31:0] TC_MIN;
input  [31:0] TN;
input  [5:0] TRow;
input  [5:0] TCol;
input  [0:0] Padding;
input  [17:0] IHxIW;
input  [3:0] KxK;
input  [31:0] nLoops;
input  [0:0] IsNL;
input  [31:0] LayerType;
input  [31:0] TM;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [0:0] pingpongx_offset;
input  [0:0] input_flag;
input  [0:0] process_flag;
input  [31:0] InterSubBeta;
input  [31:0] WeightAddInputSubInter;
input  [31:0] InterSubOutput;
output  [9:0] beta_buffer_address0;
output   beta_buffer_ce0;
input  [15:0] beta_buffer_q0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_DATA_BUS_ARVALID;
reg m_axi_DATA_BUS_RREADY;
reg m_axi_DATA_BUS2_ARVALID;
reg m_axi_DATA_BUS2_RREADY;
reg[9:0] output_buffer_address0;
reg output_buffer_ce0;
reg output_buffer_we0;
reg[15:0] output_buffer_d0;
reg[9:0] output_buffer1_address0;
reg output_buffer1_ce0;
reg output_buffer1_we0;
reg[15:0] output_buffer1_d0;
reg[9:0] output_buffer2_address0;
reg output_buffer2_ce0;
reg output_buffer2_we0;
reg[15:0] output_buffer2_d0;
reg[9:0] output_buffer3_address0;
reg output_buffer3_ce0;
reg output_buffer3_we0;
reg[15:0] output_buffer3_d0;
reg output_buffer4_ce0;
reg output_buffer4_we0;
reg output_buffer5_ce0;
reg output_buffer5_we0;
reg output_buffer6_ce0;
reg output_buffer6_we0;
reg output_buffer7_ce0;
reg output_buffer7_we0;
reg output_buffer8_ce0;
reg output_buffer8_we0;
reg output_buffer9_ce0;
reg output_buffer9_we0;
reg output_buffer10_ce0;
reg output_buffer10_we0;
reg output_buffer11_ce0;
reg output_buffer11_we0;
reg output_buffer12_ce0;
reg output_buffer12_we0;
reg output_buffer13_ce0;
reg output_buffer13_we0;
reg output_buffer14_ce0;
reg output_buffer14_we0;
reg output_buffer15_ce0;
reg output_buffer15_we0;
reg output_buffer16_ce0;
reg output_buffer16_we0;
reg output_buffer17_ce0;
reg output_buffer17_we0;
reg output_buffer18_ce0;
reg output_buffer18_we0;
reg output_buffer19_ce0;
reg output_buffer19_we0;
reg output_buffer20_ce0;
reg output_buffer20_we0;
reg output_buffer21_ce0;
reg output_buffer21_we0;
reg output_buffer22_ce0;
reg output_buffer22_we0;
reg output_buffer23_ce0;
reg output_buffer23_we0;
reg output_buffer24_ce0;
reg output_buffer24_we0;
reg output_buffer25_ce0;
reg output_buffer25_we0;
reg output_buffer26_ce0;
reg output_buffer26_we0;
reg output_buffer27_ce0;
reg output_buffer27_we0;
reg output_buffer28_ce0;
reg output_buffer28_we0;
reg output_buffer29_ce0;
reg output_buffer29_we0;
reg output_buffer30_ce0;
reg output_buffer30_we0;
reg output_buffer31_ce0;
reg output_buffer31_we0;
reg beta_buffer_ce0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] tmp_x;
reg   [31:0] tmp_tx_min;
reg   [31:0] NOP_0;
reg   [11:0] input_buffer1_0_address0;
reg    input_buffer1_0_ce0;
reg    input_buffer1_0_we0;
wire   [15:0] input_buffer1_0_q0;
reg   [11:0] input_buffer1_1_address0;
reg    input_buffer1_1_ce0;
reg    input_buffer1_1_we0;
wire   [15:0] input_buffer1_1_q0;
reg   [3:0] weight_buffer1_0_0_address0;
reg    weight_buffer1_0_0_ce0;
reg    weight_buffer1_0_0_we0;
wire   [15:0] weight_buffer1_0_0_q0;
reg   [3:0] weight_buffer1_0_1_address0;
reg    weight_buffer1_0_1_ce0;
reg    weight_buffer1_0_1_we0;
wire   [15:0] weight_buffer1_0_1_q0;
reg   [3:0] weight_buffer1_1_0_address0;
reg    weight_buffer1_1_0_ce0;
reg    weight_buffer1_1_0_we0;
wire   [15:0] weight_buffer1_1_0_q0;
reg   [3:0] weight_buffer1_1_1_address0;
reg    weight_buffer1_1_1_ce0;
reg    weight_buffer1_1_1_we0;
wire   [15:0] weight_buffer1_1_1_q0;
reg   [3:0] weight_buffer1_2_0_address0;
reg    weight_buffer1_2_0_ce0;
reg    weight_buffer1_2_0_we0;
wire   [15:0] weight_buffer1_2_0_q0;
reg   [3:0] weight_buffer1_2_1_address0;
reg    weight_buffer1_2_1_ce0;
reg    weight_buffer1_2_1_we0;
wire   [15:0] weight_buffer1_2_1_q0;
reg   [3:0] weight_buffer1_3_0_address0;
reg    weight_buffer1_3_0_ce0;
reg    weight_buffer1_3_0_we0;
wire   [15:0] weight_buffer1_3_0_q0;
reg   [3:0] weight_buffer1_3_1_address0;
reg    weight_buffer1_3_1_ce0;
reg    weight_buffer1_3_1_we0;
wire   [15:0] weight_buffer1_3_1_q0;
reg   [3:0] weight_buffer1_4_0_address0;
reg    weight_buffer1_4_0_ce0;
reg    weight_buffer1_4_0_we0;
wire   [15:0] weight_buffer1_4_0_q0;
reg   [3:0] weight_buffer1_4_1_address0;
reg    weight_buffer1_4_1_ce0;
reg    weight_buffer1_4_1_we0;
wire   [15:0] weight_buffer1_4_1_q0;
reg   [3:0] weight_buffer1_5_0_address0;
reg    weight_buffer1_5_0_ce0;
reg    weight_buffer1_5_0_we0;
wire   [15:0] weight_buffer1_5_0_q0;
reg   [3:0] weight_buffer1_5_1_address0;
reg    weight_buffer1_5_1_ce0;
reg    weight_buffer1_5_1_we0;
wire   [15:0] weight_buffer1_5_1_q0;
reg   [3:0] weight_buffer1_6_0_address0;
reg    weight_buffer1_6_0_ce0;
reg    weight_buffer1_6_0_we0;
wire   [15:0] weight_buffer1_6_0_q0;
reg   [3:0] weight_buffer1_6_1_address0;
reg    weight_buffer1_6_1_ce0;
reg    weight_buffer1_6_1_we0;
wire   [15:0] weight_buffer1_6_1_q0;
reg   [3:0] weight_buffer1_7_0_address0;
reg    weight_buffer1_7_0_ce0;
reg    weight_buffer1_7_0_we0;
wire   [15:0] weight_buffer1_7_0_q0;
reg   [3:0] weight_buffer1_7_1_address0;
reg    weight_buffer1_7_1_ce0;
reg    weight_buffer1_7_1_we0;
wire   [15:0] weight_buffer1_7_1_q0;
reg   [3:0] weight_buffer1_8_0_address0;
reg    weight_buffer1_8_0_ce0;
reg    weight_buffer1_8_0_we0;
wire   [15:0] weight_buffer1_8_0_q0;
reg   [3:0] weight_buffer1_8_1_address0;
reg    weight_buffer1_8_1_ce0;
reg    weight_buffer1_8_1_we0;
wire   [15:0] weight_buffer1_8_1_q0;
reg   [3:0] weight_buffer1_9_0_address0;
reg    weight_buffer1_9_0_ce0;
reg    weight_buffer1_9_0_we0;
wire   [15:0] weight_buffer1_9_0_q0;
reg   [3:0] weight_buffer1_9_1_address0;
reg    weight_buffer1_9_1_ce0;
reg    weight_buffer1_9_1_we0;
wire   [15:0] weight_buffer1_9_1_q0;
reg   [3:0] weight_buffer1_10_0_address0;
reg    weight_buffer1_10_0_ce0;
reg    weight_buffer1_10_0_we0;
wire   [15:0] weight_buffer1_10_0_q0;
reg   [3:0] weight_buffer1_10_1_address0;
reg    weight_buffer1_10_1_ce0;
reg    weight_buffer1_10_1_we0;
wire   [15:0] weight_buffer1_10_1_q0;
reg   [3:0] weight_buffer1_11_0_address0;
reg    weight_buffer1_11_0_ce0;
reg    weight_buffer1_11_0_we0;
wire   [15:0] weight_buffer1_11_0_q0;
reg   [3:0] weight_buffer1_11_1_address0;
reg    weight_buffer1_11_1_ce0;
reg    weight_buffer1_11_1_we0;
wire   [15:0] weight_buffer1_11_1_q0;
reg   [3:0] weight_buffer1_12_0_address0;
reg    weight_buffer1_12_0_ce0;
reg    weight_buffer1_12_0_we0;
wire   [15:0] weight_buffer1_12_0_q0;
reg   [3:0] weight_buffer1_12_1_address0;
reg    weight_buffer1_12_1_ce0;
reg    weight_buffer1_12_1_we0;
wire   [15:0] weight_buffer1_12_1_q0;
reg   [3:0] weight_buffer1_13_0_address0;
reg    weight_buffer1_13_0_ce0;
reg    weight_buffer1_13_0_we0;
wire   [15:0] weight_buffer1_13_0_q0;
reg   [3:0] weight_buffer1_13_1_address0;
reg    weight_buffer1_13_1_ce0;
reg    weight_buffer1_13_1_we0;
wire   [15:0] weight_buffer1_13_1_q0;
reg   [3:0] weight_buffer1_14_0_address0;
reg    weight_buffer1_14_0_ce0;
reg    weight_buffer1_14_0_we0;
wire   [15:0] weight_buffer1_14_0_q0;
reg   [3:0] weight_buffer1_14_1_address0;
reg    weight_buffer1_14_1_ce0;
reg    weight_buffer1_14_1_we0;
wire   [15:0] weight_buffer1_14_1_q0;
reg   [3:0] weight_buffer1_15_0_address0;
reg    weight_buffer1_15_0_ce0;
reg    weight_buffer1_15_0_we0;
wire   [15:0] weight_buffer1_15_0_q0;
reg   [3:0] weight_buffer1_15_1_address0;
reg    weight_buffer1_15_1_ce0;
reg    weight_buffer1_15_1_we0;
wire   [15:0] weight_buffer1_15_1_q0;
reg   [3:0] weight_buffer1_16_0_address0;
reg    weight_buffer1_16_0_ce0;
reg    weight_buffer1_16_0_we0;
wire   [15:0] weight_buffer1_16_0_q0;
reg   [3:0] weight_buffer1_16_1_address0;
reg    weight_buffer1_16_1_ce0;
reg    weight_buffer1_16_1_we0;
wire   [15:0] weight_buffer1_16_1_q0;
reg   [3:0] weight_buffer1_17_0_address0;
reg    weight_buffer1_17_0_ce0;
reg    weight_buffer1_17_0_we0;
wire   [15:0] weight_buffer1_17_0_q0;
reg   [3:0] weight_buffer1_17_1_address0;
reg    weight_buffer1_17_1_ce0;
reg    weight_buffer1_17_1_we0;
wire   [15:0] weight_buffer1_17_1_q0;
reg   [3:0] weight_buffer1_18_0_address0;
reg    weight_buffer1_18_0_ce0;
reg    weight_buffer1_18_0_we0;
wire   [15:0] weight_buffer1_18_0_q0;
reg   [3:0] weight_buffer1_18_1_address0;
reg    weight_buffer1_18_1_ce0;
reg    weight_buffer1_18_1_we0;
wire   [15:0] weight_buffer1_18_1_q0;
reg   [3:0] weight_buffer1_19_0_address0;
reg    weight_buffer1_19_0_ce0;
reg    weight_buffer1_19_0_we0;
wire   [15:0] weight_buffer1_19_0_q0;
reg   [3:0] weight_buffer1_19_1_address0;
reg    weight_buffer1_19_1_ce0;
reg    weight_buffer1_19_1_we0;
wire   [15:0] weight_buffer1_19_1_q0;
reg   [3:0] weight_buffer1_20_0_address0;
reg    weight_buffer1_20_0_ce0;
reg    weight_buffer1_20_0_we0;
wire   [15:0] weight_buffer1_20_0_q0;
reg   [3:0] weight_buffer1_20_1_address0;
reg    weight_buffer1_20_1_ce0;
reg    weight_buffer1_20_1_we0;
wire   [15:0] weight_buffer1_20_1_q0;
reg   [3:0] weight_buffer1_21_0_address0;
reg    weight_buffer1_21_0_ce0;
reg    weight_buffer1_21_0_we0;
wire   [15:0] weight_buffer1_21_0_q0;
reg   [3:0] weight_buffer1_21_1_address0;
reg    weight_buffer1_21_1_ce0;
reg    weight_buffer1_21_1_we0;
wire   [15:0] weight_buffer1_21_1_q0;
reg   [3:0] weight_buffer1_22_0_address0;
reg    weight_buffer1_22_0_ce0;
reg    weight_buffer1_22_0_we0;
wire   [15:0] weight_buffer1_22_0_q0;
reg   [3:0] weight_buffer1_22_1_address0;
reg    weight_buffer1_22_1_ce0;
reg    weight_buffer1_22_1_we0;
wire   [15:0] weight_buffer1_22_1_q0;
reg   [3:0] weight_buffer1_23_0_address0;
reg    weight_buffer1_23_0_ce0;
reg    weight_buffer1_23_0_we0;
wire   [15:0] weight_buffer1_23_0_q0;
reg   [3:0] weight_buffer1_23_1_address0;
reg    weight_buffer1_23_1_ce0;
reg    weight_buffer1_23_1_we0;
wire   [15:0] weight_buffer1_23_1_q0;
reg   [3:0] weight_buffer1_24_0_address0;
reg    weight_buffer1_24_0_ce0;
reg    weight_buffer1_24_0_we0;
wire   [15:0] weight_buffer1_24_0_q0;
reg   [3:0] weight_buffer1_24_1_address0;
reg    weight_buffer1_24_1_ce0;
reg    weight_buffer1_24_1_we0;
wire   [15:0] weight_buffer1_24_1_q0;
reg   [3:0] weight_buffer1_25_0_address0;
reg    weight_buffer1_25_0_ce0;
reg    weight_buffer1_25_0_we0;
wire   [15:0] weight_buffer1_25_0_q0;
reg   [3:0] weight_buffer1_25_1_address0;
reg    weight_buffer1_25_1_ce0;
reg    weight_buffer1_25_1_we0;
wire   [15:0] weight_buffer1_25_1_q0;
reg   [3:0] weight_buffer1_26_0_address0;
reg    weight_buffer1_26_0_ce0;
reg    weight_buffer1_26_0_we0;
wire   [15:0] weight_buffer1_26_0_q0;
reg   [3:0] weight_buffer1_26_1_address0;
reg    weight_buffer1_26_1_ce0;
reg    weight_buffer1_26_1_we0;
wire   [15:0] weight_buffer1_26_1_q0;
reg   [3:0] weight_buffer1_27_0_address0;
reg    weight_buffer1_27_0_ce0;
reg    weight_buffer1_27_0_we0;
wire   [15:0] weight_buffer1_27_0_q0;
reg   [3:0] weight_buffer1_27_1_address0;
reg    weight_buffer1_27_1_ce0;
reg    weight_buffer1_27_1_we0;
wire   [15:0] weight_buffer1_27_1_q0;
reg   [3:0] weight_buffer1_28_0_address0;
reg    weight_buffer1_28_0_ce0;
reg    weight_buffer1_28_0_we0;
wire   [15:0] weight_buffer1_28_0_q0;
reg   [3:0] weight_buffer1_28_1_address0;
reg    weight_buffer1_28_1_ce0;
reg    weight_buffer1_28_1_we0;
wire   [15:0] weight_buffer1_28_1_q0;
reg   [3:0] weight_buffer1_29_0_address0;
reg    weight_buffer1_29_0_ce0;
reg    weight_buffer1_29_0_we0;
wire   [15:0] weight_buffer1_29_0_q0;
reg   [3:0] weight_buffer1_29_1_address0;
reg    weight_buffer1_29_1_ce0;
reg    weight_buffer1_29_1_we0;
wire   [15:0] weight_buffer1_29_1_q0;
reg   [3:0] weight_buffer1_30_0_address0;
reg    weight_buffer1_30_0_ce0;
reg    weight_buffer1_30_0_we0;
wire   [15:0] weight_buffer1_30_0_q0;
reg   [3:0] weight_buffer1_30_1_address0;
reg    weight_buffer1_30_1_ce0;
reg    weight_buffer1_30_1_we0;
wire   [15:0] weight_buffer1_30_1_q0;
reg   [3:0] weight_buffer1_31_0_address0;
reg    weight_buffer1_31_0_ce0;
reg    weight_buffer1_31_0_we0;
wire   [15:0] weight_buffer1_31_0_q0;
reg   [3:0] weight_buffer1_31_1_address0;
reg    weight_buffer1_31_1_ce0;
reg    weight_buffer1_31_1_we0;
wire   [15:0] weight_buffer1_31_1_q0;
reg   [11:0] input_buffer0_0_address0;
reg    input_buffer0_0_ce0;
reg    input_buffer0_0_we0;
wire   [15:0] input_buffer0_0_q0;
reg   [11:0] input_buffer0_1_address0;
reg    input_buffer0_1_ce0;
reg    input_buffer0_1_we0;
wire   [15:0] input_buffer0_1_q0;
reg   [3:0] weight_buffer0_0_0_address0;
reg    weight_buffer0_0_0_ce0;
reg    weight_buffer0_0_0_we0;
wire   [15:0] weight_buffer0_0_0_q0;
reg   [3:0] weight_buffer0_0_1_address0;
reg    weight_buffer0_0_1_ce0;
reg    weight_buffer0_0_1_we0;
wire   [15:0] weight_buffer0_0_1_q0;
reg   [3:0] weight_buffer0_1_0_address0;
reg    weight_buffer0_1_0_ce0;
reg    weight_buffer0_1_0_we0;
wire   [15:0] weight_buffer0_1_0_q0;
reg   [3:0] weight_buffer0_1_1_address0;
reg    weight_buffer0_1_1_ce0;
reg    weight_buffer0_1_1_we0;
wire   [15:0] weight_buffer0_1_1_q0;
reg   [3:0] weight_buffer0_2_0_address0;
reg    weight_buffer0_2_0_ce0;
reg    weight_buffer0_2_0_we0;
wire   [15:0] weight_buffer0_2_0_q0;
reg   [3:0] weight_buffer0_2_1_address0;
reg    weight_buffer0_2_1_ce0;
reg    weight_buffer0_2_1_we0;
wire   [15:0] weight_buffer0_2_1_q0;
reg   [3:0] weight_buffer0_3_0_address0;
reg    weight_buffer0_3_0_ce0;
reg    weight_buffer0_3_0_we0;
wire   [15:0] weight_buffer0_3_0_q0;
reg   [3:0] weight_buffer0_3_1_address0;
reg    weight_buffer0_3_1_ce0;
reg    weight_buffer0_3_1_we0;
wire   [15:0] weight_buffer0_3_1_q0;
reg   [3:0] weight_buffer0_4_0_address0;
reg    weight_buffer0_4_0_ce0;
reg    weight_buffer0_4_0_we0;
wire   [15:0] weight_buffer0_4_0_q0;
reg   [3:0] weight_buffer0_4_1_address0;
reg    weight_buffer0_4_1_ce0;
reg    weight_buffer0_4_1_we0;
wire   [15:0] weight_buffer0_4_1_q0;
reg   [3:0] weight_buffer0_5_0_address0;
reg    weight_buffer0_5_0_ce0;
reg    weight_buffer0_5_0_we0;
wire   [15:0] weight_buffer0_5_0_q0;
reg   [3:0] weight_buffer0_5_1_address0;
reg    weight_buffer0_5_1_ce0;
reg    weight_buffer0_5_1_we0;
wire   [15:0] weight_buffer0_5_1_q0;
reg   [3:0] weight_buffer0_6_0_address0;
reg    weight_buffer0_6_0_ce0;
reg    weight_buffer0_6_0_we0;
wire   [15:0] weight_buffer0_6_0_q0;
reg   [3:0] weight_buffer0_6_1_address0;
reg    weight_buffer0_6_1_ce0;
reg    weight_buffer0_6_1_we0;
wire   [15:0] weight_buffer0_6_1_q0;
reg   [3:0] weight_buffer0_7_0_address0;
reg    weight_buffer0_7_0_ce0;
reg    weight_buffer0_7_0_we0;
wire   [15:0] weight_buffer0_7_0_q0;
reg   [3:0] weight_buffer0_7_1_address0;
reg    weight_buffer0_7_1_ce0;
reg    weight_buffer0_7_1_we0;
wire   [15:0] weight_buffer0_7_1_q0;
reg   [3:0] weight_buffer0_8_0_address0;
reg    weight_buffer0_8_0_ce0;
reg    weight_buffer0_8_0_we0;
wire   [15:0] weight_buffer0_8_0_q0;
reg   [3:0] weight_buffer0_8_1_address0;
reg    weight_buffer0_8_1_ce0;
reg    weight_buffer0_8_1_we0;
wire   [15:0] weight_buffer0_8_1_q0;
reg   [3:0] weight_buffer0_9_0_address0;
reg    weight_buffer0_9_0_ce0;
reg    weight_buffer0_9_0_we0;
wire   [15:0] weight_buffer0_9_0_q0;
reg   [3:0] weight_buffer0_9_1_address0;
reg    weight_buffer0_9_1_ce0;
reg    weight_buffer0_9_1_we0;
wire   [15:0] weight_buffer0_9_1_q0;
reg   [3:0] weight_buffer0_10_0_address0;
reg    weight_buffer0_10_0_ce0;
reg    weight_buffer0_10_0_we0;
wire   [15:0] weight_buffer0_10_0_q0;
reg   [3:0] weight_buffer0_10_1_address0;
reg    weight_buffer0_10_1_ce0;
reg    weight_buffer0_10_1_we0;
wire   [15:0] weight_buffer0_10_1_q0;
reg   [3:0] weight_buffer0_11_0_address0;
reg    weight_buffer0_11_0_ce0;
reg    weight_buffer0_11_0_we0;
wire   [15:0] weight_buffer0_11_0_q0;
reg   [3:0] weight_buffer0_11_1_address0;
reg    weight_buffer0_11_1_ce0;
reg    weight_buffer0_11_1_we0;
wire   [15:0] weight_buffer0_11_1_q0;
reg   [3:0] weight_buffer0_12_0_address0;
reg    weight_buffer0_12_0_ce0;
reg    weight_buffer0_12_0_we0;
wire   [15:0] weight_buffer0_12_0_q0;
reg   [3:0] weight_buffer0_12_1_address0;
reg    weight_buffer0_12_1_ce0;
reg    weight_buffer0_12_1_we0;
wire   [15:0] weight_buffer0_12_1_q0;
reg   [3:0] weight_buffer0_13_0_address0;
reg    weight_buffer0_13_0_ce0;
reg    weight_buffer0_13_0_we0;
wire   [15:0] weight_buffer0_13_0_q0;
reg   [3:0] weight_buffer0_13_1_address0;
reg    weight_buffer0_13_1_ce0;
reg    weight_buffer0_13_1_we0;
wire   [15:0] weight_buffer0_13_1_q0;
reg   [3:0] weight_buffer0_14_0_address0;
reg    weight_buffer0_14_0_ce0;
reg    weight_buffer0_14_0_we0;
wire   [15:0] weight_buffer0_14_0_q0;
reg   [3:0] weight_buffer0_14_1_address0;
reg    weight_buffer0_14_1_ce0;
reg    weight_buffer0_14_1_we0;
wire   [15:0] weight_buffer0_14_1_q0;
reg   [3:0] weight_buffer0_15_0_address0;
reg    weight_buffer0_15_0_ce0;
reg    weight_buffer0_15_0_we0;
wire   [15:0] weight_buffer0_15_0_q0;
reg   [3:0] weight_buffer0_15_1_address0;
reg    weight_buffer0_15_1_ce0;
reg    weight_buffer0_15_1_we0;
wire   [15:0] weight_buffer0_15_1_q0;
reg   [3:0] weight_buffer0_16_0_address0;
reg    weight_buffer0_16_0_ce0;
reg    weight_buffer0_16_0_we0;
wire   [15:0] weight_buffer0_16_0_q0;
reg   [3:0] weight_buffer0_16_1_address0;
reg    weight_buffer0_16_1_ce0;
reg    weight_buffer0_16_1_we0;
wire   [15:0] weight_buffer0_16_1_q0;
reg   [3:0] weight_buffer0_17_0_address0;
reg    weight_buffer0_17_0_ce0;
reg    weight_buffer0_17_0_we0;
wire   [15:0] weight_buffer0_17_0_q0;
reg   [3:0] weight_buffer0_17_1_address0;
reg    weight_buffer0_17_1_ce0;
reg    weight_buffer0_17_1_we0;
wire   [15:0] weight_buffer0_17_1_q0;
reg   [3:0] weight_buffer0_18_0_address0;
reg    weight_buffer0_18_0_ce0;
reg    weight_buffer0_18_0_we0;
wire   [15:0] weight_buffer0_18_0_q0;
reg   [3:0] weight_buffer0_18_1_address0;
reg    weight_buffer0_18_1_ce0;
reg    weight_buffer0_18_1_we0;
wire   [15:0] weight_buffer0_18_1_q0;
reg   [3:0] weight_buffer0_19_0_address0;
reg    weight_buffer0_19_0_ce0;
reg    weight_buffer0_19_0_we0;
wire   [15:0] weight_buffer0_19_0_q0;
reg   [3:0] weight_buffer0_19_1_address0;
reg    weight_buffer0_19_1_ce0;
reg    weight_buffer0_19_1_we0;
wire   [15:0] weight_buffer0_19_1_q0;
reg   [3:0] weight_buffer0_20_0_address0;
reg    weight_buffer0_20_0_ce0;
reg    weight_buffer0_20_0_we0;
wire   [15:0] weight_buffer0_20_0_q0;
reg   [3:0] weight_buffer0_20_1_address0;
reg    weight_buffer0_20_1_ce0;
reg    weight_buffer0_20_1_we0;
wire   [15:0] weight_buffer0_20_1_q0;
reg   [3:0] weight_buffer0_21_0_address0;
reg    weight_buffer0_21_0_ce0;
reg    weight_buffer0_21_0_we0;
wire   [15:0] weight_buffer0_21_0_q0;
reg   [3:0] weight_buffer0_21_1_address0;
reg    weight_buffer0_21_1_ce0;
reg    weight_buffer0_21_1_we0;
wire   [15:0] weight_buffer0_21_1_q0;
reg   [3:0] weight_buffer0_22_0_address0;
reg    weight_buffer0_22_0_ce0;
reg    weight_buffer0_22_0_we0;
wire   [15:0] weight_buffer0_22_0_q0;
reg   [3:0] weight_buffer0_22_1_address0;
reg    weight_buffer0_22_1_ce0;
reg    weight_buffer0_22_1_we0;
wire   [15:0] weight_buffer0_22_1_q0;
reg   [3:0] weight_buffer0_23_0_address0;
reg    weight_buffer0_23_0_ce0;
reg    weight_buffer0_23_0_we0;
wire   [15:0] weight_buffer0_23_0_q0;
reg   [3:0] weight_buffer0_23_1_address0;
reg    weight_buffer0_23_1_ce0;
reg    weight_buffer0_23_1_we0;
wire   [15:0] weight_buffer0_23_1_q0;
reg   [3:0] weight_buffer0_24_0_address0;
reg    weight_buffer0_24_0_ce0;
reg    weight_buffer0_24_0_we0;
wire   [15:0] weight_buffer0_24_0_q0;
reg   [3:0] weight_buffer0_24_1_address0;
reg    weight_buffer0_24_1_ce0;
reg    weight_buffer0_24_1_we0;
wire   [15:0] weight_buffer0_24_1_q0;
reg   [3:0] weight_buffer0_25_0_address0;
reg    weight_buffer0_25_0_ce0;
reg    weight_buffer0_25_0_we0;
wire   [15:0] weight_buffer0_25_0_q0;
reg   [3:0] weight_buffer0_25_1_address0;
reg    weight_buffer0_25_1_ce0;
reg    weight_buffer0_25_1_we0;
wire   [15:0] weight_buffer0_25_1_q0;
reg   [3:0] weight_buffer0_26_0_address0;
reg    weight_buffer0_26_0_ce0;
reg    weight_buffer0_26_0_we0;
wire   [15:0] weight_buffer0_26_0_q0;
reg   [3:0] weight_buffer0_26_1_address0;
reg    weight_buffer0_26_1_ce0;
reg    weight_buffer0_26_1_we0;
wire   [15:0] weight_buffer0_26_1_q0;
reg   [3:0] weight_buffer0_27_0_address0;
reg    weight_buffer0_27_0_ce0;
reg    weight_buffer0_27_0_we0;
wire   [15:0] weight_buffer0_27_0_q0;
reg   [3:0] weight_buffer0_27_1_address0;
reg    weight_buffer0_27_1_ce0;
reg    weight_buffer0_27_1_we0;
wire   [15:0] weight_buffer0_27_1_q0;
reg   [3:0] weight_buffer0_28_0_address0;
reg    weight_buffer0_28_0_ce0;
reg    weight_buffer0_28_0_we0;
wire   [15:0] weight_buffer0_28_0_q0;
reg   [3:0] weight_buffer0_28_1_address0;
reg    weight_buffer0_28_1_ce0;
reg    weight_buffer0_28_1_we0;
wire   [15:0] weight_buffer0_28_1_q0;
reg   [3:0] weight_buffer0_29_0_address0;
reg    weight_buffer0_29_0_ce0;
reg    weight_buffer0_29_0_we0;
wire   [15:0] weight_buffer0_29_0_q0;
reg   [3:0] weight_buffer0_29_1_address0;
reg    weight_buffer0_29_1_ce0;
reg    weight_buffer0_29_1_we0;
wire   [15:0] weight_buffer0_29_1_q0;
reg   [3:0] weight_buffer0_30_0_address0;
reg    weight_buffer0_30_0_ce0;
reg    weight_buffer0_30_0_we0;
wire   [15:0] weight_buffer0_30_0_q0;
reg   [3:0] weight_buffer0_30_1_address0;
reg    weight_buffer0_30_1_ce0;
reg    weight_buffer0_30_1_we0;
wire   [15:0] weight_buffer0_30_1_q0;
reg   [3:0] weight_buffer0_31_0_address0;
reg    weight_buffer0_31_0_ce0;
reg    weight_buffer0_31_0_we0;
wire   [15:0] weight_buffer0_31_0_q0;
reg   [3:0] weight_buffer0_31_1_address0;
reg    weight_buffer0_31_1_ce0;
reg    weight_buffer0_31_1_we0;
wire   [15:0] weight_buffer0_31_1_q0;
reg   [64:0] indvar_flatten55_reg_958;
reg   [34:0] indvar_flatten23_reg_969;
reg   [3:0] indvar_flatten_reg_980;
reg   [30:0] y_1_reg_991;
reg   [1:0] ky_1_reg_1002;
reg   [1:0] kx_1_reg_1013;
reg   [31:0] x_1_reg_1024;
reg   [64:0] indvar_flatten119_reg_1035;
reg   [34:0] indvar_flatten87_reg_1046;
reg   [3:0] indvar_flatten63_reg_1057;
reg   [30:0] y_reg_1068;
reg   [1:0] ky_reg_1079;
reg   [1:0] kx_reg_1090;
reg   [31:0] x_reg_1101;
wire   [0:0] input_flag_read_read_fu_686_p2;
wire   [5:0] empty_fu_1934_p1;
reg   [5:0] empty_reg_2953;
wire   [5:0] empty_81_fu_1938_p1;
reg   [5:0] empty_81_reg_2958;
wire   [5:0] empty_82_fu_1942_p1;
reg   [5:0] empty_82_reg_2963;
reg   [31:0] tmp_x_load_reg_2968;
reg   [31:0] tmp_tx_min_load_reg_2978;
reg   [31:0] NOP_0_load_reg_2988;
wire   [0:0] grp_fu_1912_p2;
reg   [0:0] and_ln523_1_reg_2993;
wire   [31:0] LayerType_read_read_fu_716_p2;
wire   [0:0] pingpongx_offset_read_read_fu_692_p2;
reg   [0:0] and_ln523_reg_2997;
wire   [31:0] add_fu_1960_p2;
reg   [31:0] add_reg_3001;
wire   [33:0] tmp_5_fu_1969_p3;
reg   [33:0] tmp_5_reg_3007;
wire    ap_CS_fsm_state2;
wire   [34:0] zext_ln526_3_fu_1990_p1;
reg   [34:0] zext_ln526_3_reg_3022;
wire    ap_CS_fsm_state6;
wire   [64:0] grp_fu_1984_p2;
reg   [64:0] mul_ln526_1_reg_3027;
wire   [64:0] add_ln526_3_fu_1993_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln526_3_fu_1999_p2;
reg   [0:0] icmp_ln526_3_reg_3037;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter1_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter2_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter3_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter4_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter5_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter6_reg;
reg   [0:0] icmp_ln526_3_reg_3037_pp0_iter7_reg;
wire   [0:0] icmp_ln527_1_fu_2004_p2;
reg   [0:0] icmp_ln527_1_reg_3041;
reg   [0:0] icmp_ln527_1_reg_3041_pp0_iter1_reg;
reg   [0:0] icmp_ln527_1_reg_3041_pp0_iter2_reg;
reg   [0:0] icmp_ln527_1_reg_3041_pp0_iter3_reg;
wire   [34:0] select_ln527_11_fu_2015_p3;
wire   [0:0] xor_ln526_1_fu_2023_p2;
reg   [0:0] xor_ln526_1_reg_3060;
reg   [0:0] xor_ln526_1_reg_3060_pp0_iter2_reg;
wire   [0:0] icmp_ln528_1_fu_2028_p2;
reg   [0:0] icmp_ln528_1_reg_3066;
wire   [0:0] and_ln526_5_fu_2034_p2;
reg   [0:0] and_ln526_5_reg_3071;
reg   [0:0] and_ln526_5_reg_3071_pp0_iter2_reg;
reg   [0:0] and_ln526_5_reg_3071_pp0_iter3_reg;
wire   [0:0] or_ln527_2_fu_2040_p2;
reg   [0:0] or_ln527_2_reg_3080;
wire   [3:0] select_ln528_3_fu_2051_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] empty_84_fu_2059_p1;
reg   [4:0] empty_84_reg_3090;
wire   [0:0] empty_85_fu_2063_p1;
reg   [0:0] empty_85_reg_3095;
wire   [30:0] select_ln526_7_fu_2073_p3;
reg   [30:0] select_ln526_7_reg_3101;
reg    ap_enable_reg_pp0_iter2;
wire  signed [9:0] trunc_ln536_1_fu_2080_p1;
reg  signed [9:0] trunc_ln536_1_reg_3106;
wire   [4:0] empty_86_fu_2084_p1;
reg   [4:0] empty_86_reg_3111;
wire   [4:0] select_ln526_8_fu_2088_p3;
reg   [4:0] select_ln526_8_reg_3116;
wire   [0:0] or_ln527_3_fu_2118_p2;
reg   [0:0] or_ln527_3_reg_3122;
wire   [0:0] and_ln527_3_fu_2123_p2;
reg   [0:0] and_ln527_3_reg_3127;
wire   [0:0] empty_87_fu_2153_p1;
reg   [0:0] empty_87_reg_3133;
wire   [1:0] select_ln528_1_fu_2157_p3;
wire   [0:0] trunc_ln533_5_fu_2165_p1;
reg   [0:0] trunc_ln533_5_reg_3144;
reg   [0:0] trunc_ln533_5_reg_3144_pp0_iter3_reg;
reg   [0:0] trunc_ln533_5_reg_3144_pp0_iter4_reg;
wire   [1:0] kx_3_fu_2169_p2;
wire   [1:0] add_ln536_1_fu_2241_p3;
reg   [1:0] add_ln536_1_reg_3160;
reg   [1:0] add_ln536_1_reg_3160_pp0_iter4_reg;
reg   [1:0] add_ln536_1_reg_3160_pp0_iter5_reg;
reg   [1:0] add_ln536_1_reg_3160_pp0_iter6_reg;
reg   [1:0] add_ln536_1_reg_3160_pp0_iter7_reg;
reg   [1:0] add_ln536_1_reg_3160_pp0_iter8_reg;
wire   [9:0] select_ln527_6_fu_2287_p3;
reg   [9:0] select_ln527_6_reg_3164;
wire   [6:0] select_ln527_7_fu_2298_p3;
reg   [6:0] select_ln527_7_reg_3169;
wire   [31:0] select_ln527_9_fu_2305_p3;
reg    ap_enable_reg_pp0_iter4;
wire  signed [9:0] grp_fu_2759_p3;
reg  signed [9:0] add_ln536_3_reg_3184;
reg    ap_enable_reg_pp0_iter6;
reg  signed [9:0] add_ln536_3_reg_3184_pp0_iter7_reg;
reg  signed [9:0] add_ln536_3_reg_3184_pp0_iter8_reg;
wire   [11:0] grp_fu_2765_p3;
reg   [11:0] add_ln536_4_reg_3189;
reg   [15:0] input_buffer1_0_load_reg_3199;
wire   [33:0] tmp_fu_2336_p3;
reg   [33:0] tmp_reg_3207;
wire    ap_CS_fsm_state18;
wire   [34:0] zext_ln526_fu_2357_p1;
reg   [34:0] zext_ln526_reg_3222;
wire    ap_CS_fsm_state22;
wire   [64:0] grp_fu_2351_p2;
reg   [64:0] mul_ln526_reg_3227;
wire   [64:0] add_ln526_2_fu_2360_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state24_pp1_stage0_iter1;
wire    ap_block_state25_pp1_stage0_iter2;
wire    ap_block_state26_pp1_stage0_iter3;
wire    ap_block_state27_pp1_stage0_iter4;
wire    ap_block_state28_pp1_stage0_iter5;
wire    ap_block_state29_pp1_stage0_iter6;
wire    ap_block_state30_pp1_stage0_iter7;
wire    ap_block_state31_pp1_stage0_iter8;
wire    ap_block_state32_pp1_stage0_iter9;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln526_2_fu_2366_p2;
reg   [0:0] icmp_ln526_2_reg_3237;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter1_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter2_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter3_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter4_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter5_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter6_reg;
reg   [0:0] icmp_ln526_2_reg_3237_pp1_iter7_reg;
wire   [0:0] icmp_ln527_fu_2371_p2;
reg   [0:0] icmp_ln527_reg_3241;
reg   [0:0] icmp_ln527_reg_3241_pp1_iter1_reg;
reg   [0:0] icmp_ln527_reg_3241_pp1_iter2_reg;
reg   [0:0] icmp_ln527_reg_3241_pp1_iter3_reg;
wire   [34:0] select_ln527_10_fu_2382_p3;
wire   [0:0] xor_ln526_fu_2390_p2;
reg   [0:0] xor_ln526_reg_3260;
reg   [0:0] xor_ln526_reg_3260_pp1_iter2_reg;
wire   [0:0] icmp_ln528_fu_2395_p2;
reg   [0:0] icmp_ln528_reg_3266;
wire   [0:0] and_ln526_2_fu_2401_p2;
reg   [0:0] and_ln526_2_reg_3271;
reg   [0:0] and_ln526_2_reg_3271_pp1_iter2_reg;
reg   [0:0] and_ln526_2_reg_3271_pp1_iter3_reg;
wire   [0:0] or_ln527_fu_2407_p2;
reg   [0:0] or_ln527_reg_3280;
wire   [3:0] select_ln528_2_fu_2418_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [4:0] empty_88_fu_2426_p1;
reg   [4:0] empty_88_reg_3290;
wire   [0:0] empty_89_fu_2430_p1;
reg   [0:0] empty_89_reg_3295;
wire   [30:0] select_ln526_1_fu_2440_p3;
reg   [30:0] select_ln526_1_reg_3301;
reg    ap_enable_reg_pp1_iter2;
wire  signed [9:0] trunc_ln536_fu_2447_p1;
reg  signed [9:0] trunc_ln536_reg_3306;
wire   [4:0] empty_90_fu_2451_p1;
reg   [4:0] empty_90_reg_3311;
wire   [4:0] select_ln526_2_fu_2455_p3;
reg   [4:0] select_ln526_2_reg_3316;
wire   [0:0] or_ln527_1_fu_2485_p2;
reg   [0:0] or_ln527_1_reg_3322;
wire   [0:0] and_ln527_1_fu_2490_p2;
reg   [0:0] and_ln527_1_reg_3327;
wire   [0:0] empty_91_fu_2520_p1;
reg   [0:0] empty_91_reg_3333;
wire   [1:0] select_ln528_fu_2524_p3;
wire   [0:0] trunc_ln533_2_fu_2532_p1;
reg   [0:0] trunc_ln533_2_reg_3344;
reg   [0:0] trunc_ln533_2_reg_3344_pp1_iter3_reg;
reg   [0:0] trunc_ln533_2_reg_3344_pp1_iter4_reg;
wire   [1:0] kx_2_fu_2536_p2;
wire   [1:0] add_ln_fu_2608_p3;
reg   [1:0] add_ln_reg_3360;
reg   [1:0] add_ln_reg_3360_pp1_iter4_reg;
reg   [1:0] add_ln_reg_3360_pp1_iter5_reg;
reg   [1:0] add_ln_reg_3360_pp1_iter6_reg;
reg   [1:0] add_ln_reg_3360_pp1_iter7_reg;
reg   [1:0] add_ln_reg_3360_pp1_iter8_reg;
wire   [9:0] select_ln527_1_fu_2654_p3;
reg   [9:0] select_ln527_1_reg_3364;
wire   [6:0] select_ln527_2_fu_2665_p3;
reg   [6:0] select_ln527_2_reg_3369;
wire   [31:0] select_ln527_4_fu_2672_p3;
reg    ap_enable_reg_pp1_iter4;
wire  signed [9:0] grp_fu_2773_p3;
reg  signed [9:0] add_ln536_reg_3384;
reg    ap_enable_reg_pp1_iter6;
reg  signed [9:0] add_ln536_reg_3384_pp1_iter7_reg;
reg  signed [9:0] add_ln536_reg_3384_pp1_iter8_reg;
wire   [11:0] grp_fu_2779_p3;
reg   [11:0] add_ln536_2_reg_3389;
reg   [15:0] input_buffer0_0_load_reg_3399;
wire   [30:0] n_1_fu_2705_p2;
reg   [30:0] n_1_reg_3422;
wire    ap_CS_fsm_state37;
wire   [0:0] cmp4_fu_2721_p2;
reg   [0:0] cmp4_reg_3430;
wire   [0:0] icmp_ln572_1_fu_2716_p2;
wire   [0:0] grp_fu_1924_p2;
reg   [0:0] icmp_ln585_reg_3445;
wire   [0:0] ap_phi_mux_pingpong_phi_fu_1139_p4;
wire   [0:0] grp_fu_1930_p2;
reg   [0:0] icmp_ln585_1_reg_3450;
reg   [0:0] icmp_ln578_reg_3455;
reg   [0:0] icmp_ln578_1_reg_3460;
wire   [31:0] TMP_N_1_fu_2742_p2;
reg   [31:0] TMP_N_1_reg_3465;
wire    ap_CS_fsm_state39;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_condition_pp0_exit_iter4_state11;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter5;
reg    ap_condition_pp1_exit_iter4_state27;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
wire    grp_compute3_fu_1212_ap_start;
wire    grp_compute3_fu_1212_ap_done;
wire    grp_compute3_fu_1212_ap_idle;
wire    grp_compute3_fu_1212_ap_ready;
wire   [11:0] grp_compute3_fu_1212_input_buffer_address0;
wire    grp_compute3_fu_1212_input_buffer_ce0;
reg   [15:0] grp_compute3_fu_1212_input_buffer_q0;
wire   [11:0] grp_compute3_fu_1212_input_buffer1_address0;
wire    grp_compute3_fu_1212_input_buffer1_ce0;
reg   [15:0] grp_compute3_fu_1212_input_buffer1_q0;
wire   [9:0] grp_compute3_fu_1212_output_buffer_address0;
wire    grp_compute3_fu_1212_output_buffer_ce0;
wire    grp_compute3_fu_1212_output_buffer_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer2_address0;
wire    grp_compute3_fu_1212_output_buffer2_ce0;
wire    grp_compute3_fu_1212_output_buffer2_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer2_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer3_address0;
wire    grp_compute3_fu_1212_output_buffer3_ce0;
wire    grp_compute3_fu_1212_output_buffer3_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer3_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer4_address0;
wire    grp_compute3_fu_1212_output_buffer4_ce0;
wire    grp_compute3_fu_1212_output_buffer4_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer4_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer5_address0;
wire    grp_compute3_fu_1212_output_buffer5_ce0;
wire    grp_compute3_fu_1212_output_buffer5_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer5_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer6_address0;
wire    grp_compute3_fu_1212_output_buffer6_ce0;
wire    grp_compute3_fu_1212_output_buffer6_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer6_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer7_address0;
wire    grp_compute3_fu_1212_output_buffer7_ce0;
wire    grp_compute3_fu_1212_output_buffer7_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer7_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer8_address0;
wire    grp_compute3_fu_1212_output_buffer8_ce0;
wire    grp_compute3_fu_1212_output_buffer8_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer8_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer9_address0;
wire    grp_compute3_fu_1212_output_buffer9_ce0;
wire    grp_compute3_fu_1212_output_buffer9_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer9_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer10_address0;
wire    grp_compute3_fu_1212_output_buffer10_ce0;
wire    grp_compute3_fu_1212_output_buffer10_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer10_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer11_address0;
wire    grp_compute3_fu_1212_output_buffer11_ce0;
wire    grp_compute3_fu_1212_output_buffer11_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer11_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer12_address0;
wire    grp_compute3_fu_1212_output_buffer12_ce0;
wire    grp_compute3_fu_1212_output_buffer12_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer12_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer13_address0;
wire    grp_compute3_fu_1212_output_buffer13_ce0;
wire    grp_compute3_fu_1212_output_buffer13_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer13_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer14_address0;
wire    grp_compute3_fu_1212_output_buffer14_ce0;
wire    grp_compute3_fu_1212_output_buffer14_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer14_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer15_address0;
wire    grp_compute3_fu_1212_output_buffer15_ce0;
wire    grp_compute3_fu_1212_output_buffer15_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer15_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer16_address0;
wire    grp_compute3_fu_1212_output_buffer16_ce0;
wire    grp_compute3_fu_1212_output_buffer16_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer16_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer17_address0;
wire    grp_compute3_fu_1212_output_buffer17_ce0;
wire    grp_compute3_fu_1212_output_buffer17_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer17_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer18_address0;
wire    grp_compute3_fu_1212_output_buffer18_ce0;
wire    grp_compute3_fu_1212_output_buffer18_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer18_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer19_address0;
wire    grp_compute3_fu_1212_output_buffer19_ce0;
wire    grp_compute3_fu_1212_output_buffer19_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer19_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer20_address0;
wire    grp_compute3_fu_1212_output_buffer20_ce0;
wire    grp_compute3_fu_1212_output_buffer20_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer20_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer21_address0;
wire    grp_compute3_fu_1212_output_buffer21_ce0;
wire    grp_compute3_fu_1212_output_buffer21_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer21_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer22_address0;
wire    grp_compute3_fu_1212_output_buffer22_ce0;
wire    grp_compute3_fu_1212_output_buffer22_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer22_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer23_address0;
wire    grp_compute3_fu_1212_output_buffer23_ce0;
wire    grp_compute3_fu_1212_output_buffer23_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer23_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer24_address0;
wire    grp_compute3_fu_1212_output_buffer24_ce0;
wire    grp_compute3_fu_1212_output_buffer24_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer24_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer25_address0;
wire    grp_compute3_fu_1212_output_buffer25_ce0;
wire    grp_compute3_fu_1212_output_buffer25_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer25_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer26_address0;
wire    grp_compute3_fu_1212_output_buffer26_ce0;
wire    grp_compute3_fu_1212_output_buffer26_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer26_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer27_address0;
wire    grp_compute3_fu_1212_output_buffer27_ce0;
wire    grp_compute3_fu_1212_output_buffer27_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer27_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer28_address0;
wire    grp_compute3_fu_1212_output_buffer28_ce0;
wire    grp_compute3_fu_1212_output_buffer28_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer28_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer29_address0;
wire    grp_compute3_fu_1212_output_buffer29_ce0;
wire    grp_compute3_fu_1212_output_buffer29_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer29_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer30_address0;
wire    grp_compute3_fu_1212_output_buffer30_ce0;
wire    grp_compute3_fu_1212_output_buffer30_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer30_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer31_address0;
wire    grp_compute3_fu_1212_output_buffer31_ce0;
wire    grp_compute3_fu_1212_output_buffer31_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer31_d0;
wire   [9:0] grp_compute3_fu_1212_output_buffer32_address0;
wire    grp_compute3_fu_1212_output_buffer32_ce0;
wire    grp_compute3_fu_1212_output_buffer32_we0;
wire   [15:0] grp_compute3_fu_1212_output_buffer32_d0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer_address0;
wire    grp_compute3_fu_1212_weight_buffer_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer1_address0;
wire    grp_compute3_fu_1212_weight_buffer1_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer1_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer33_address0;
wire    grp_compute3_fu_1212_weight_buffer33_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer33_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer332_address0;
wire    grp_compute3_fu_1212_weight_buffer332_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer332_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer34_address0;
wire    grp_compute3_fu_1212_weight_buffer34_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer34_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer343_address0;
wire    grp_compute3_fu_1212_weight_buffer343_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer343_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer35_address0;
wire    grp_compute3_fu_1212_weight_buffer35_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer35_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer354_address0;
wire    grp_compute3_fu_1212_weight_buffer354_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer354_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer36_address0;
wire    grp_compute3_fu_1212_weight_buffer36_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer36_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer365_address0;
wire    grp_compute3_fu_1212_weight_buffer365_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer365_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer37_address0;
wire    grp_compute3_fu_1212_weight_buffer37_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer37_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer376_address0;
wire    grp_compute3_fu_1212_weight_buffer376_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer376_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer38_address0;
wire    grp_compute3_fu_1212_weight_buffer38_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer38_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer387_address0;
wire    grp_compute3_fu_1212_weight_buffer387_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer387_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer39_address0;
wire    grp_compute3_fu_1212_weight_buffer39_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer39_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer398_address0;
wire    grp_compute3_fu_1212_weight_buffer398_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer398_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer40_address0;
wire    grp_compute3_fu_1212_weight_buffer40_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer40_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer409_address0;
wire    grp_compute3_fu_1212_weight_buffer409_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer409_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer41_address0;
wire    grp_compute3_fu_1212_weight_buffer41_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer41_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4110_address0;
wire    grp_compute3_fu_1212_weight_buffer4110_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4110_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer42_address0;
wire    grp_compute3_fu_1212_weight_buffer42_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer42_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4211_address0;
wire    grp_compute3_fu_1212_weight_buffer4211_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4211_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer43_address0;
wire    grp_compute3_fu_1212_weight_buffer43_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer43_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4312_address0;
wire    grp_compute3_fu_1212_weight_buffer4312_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4312_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer44_address0;
wire    grp_compute3_fu_1212_weight_buffer44_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer44_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4413_address0;
wire    grp_compute3_fu_1212_weight_buffer4413_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4413_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer45_address0;
wire    grp_compute3_fu_1212_weight_buffer45_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer45_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4514_address0;
wire    grp_compute3_fu_1212_weight_buffer4514_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4514_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer46_address0;
wire    grp_compute3_fu_1212_weight_buffer46_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer46_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4615_address0;
wire    grp_compute3_fu_1212_weight_buffer4615_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4615_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer47_address0;
wire    grp_compute3_fu_1212_weight_buffer47_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer47_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4716_address0;
wire    grp_compute3_fu_1212_weight_buffer4716_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4716_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer48_address0;
wire    grp_compute3_fu_1212_weight_buffer48_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer48_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4817_address0;
wire    grp_compute3_fu_1212_weight_buffer4817_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4817_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer49_address0;
wire    grp_compute3_fu_1212_weight_buffer49_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer49_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer4918_address0;
wire    grp_compute3_fu_1212_weight_buffer4918_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer4918_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer50_address0;
wire    grp_compute3_fu_1212_weight_buffer50_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer50_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5019_address0;
wire    grp_compute3_fu_1212_weight_buffer5019_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5019_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer51_address0;
wire    grp_compute3_fu_1212_weight_buffer51_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer51_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5120_address0;
wire    grp_compute3_fu_1212_weight_buffer5120_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5120_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer52_address0;
wire    grp_compute3_fu_1212_weight_buffer52_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer52_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5221_address0;
wire    grp_compute3_fu_1212_weight_buffer5221_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5221_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer53_address0;
wire    grp_compute3_fu_1212_weight_buffer53_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer53_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5322_address0;
wire    grp_compute3_fu_1212_weight_buffer5322_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5322_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer54_address0;
wire    grp_compute3_fu_1212_weight_buffer54_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer54_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5423_address0;
wire    grp_compute3_fu_1212_weight_buffer5423_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5423_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer55_address0;
wire    grp_compute3_fu_1212_weight_buffer55_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer55_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5524_address0;
wire    grp_compute3_fu_1212_weight_buffer5524_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5524_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer56_address0;
wire    grp_compute3_fu_1212_weight_buffer56_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer56_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5625_address0;
wire    grp_compute3_fu_1212_weight_buffer5625_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5625_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer57_address0;
wire    grp_compute3_fu_1212_weight_buffer57_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer57_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5726_address0;
wire    grp_compute3_fu_1212_weight_buffer5726_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5726_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer58_address0;
wire    grp_compute3_fu_1212_weight_buffer58_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer58_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5827_address0;
wire    grp_compute3_fu_1212_weight_buffer5827_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5827_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer59_address0;
wire    grp_compute3_fu_1212_weight_buffer59_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer59_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer5928_address0;
wire    grp_compute3_fu_1212_weight_buffer5928_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer5928_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer60_address0;
wire    grp_compute3_fu_1212_weight_buffer60_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer60_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer6029_address0;
wire    grp_compute3_fu_1212_weight_buffer6029_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer6029_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer61_address0;
wire    grp_compute3_fu_1212_weight_buffer61_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer61_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer6130_address0;
wire    grp_compute3_fu_1212_weight_buffer6130_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer6130_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer62_address0;
wire    grp_compute3_fu_1212_weight_buffer62_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer62_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer6231_address0;
wire    grp_compute3_fu_1212_weight_buffer6231_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer6231_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer63_address0;
wire    grp_compute3_fu_1212_weight_buffer63_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer63_q0;
wire   [3:0] grp_compute3_fu_1212_weight_buffer6332_address0;
wire    grp_compute3_fu_1212_weight_buffer6332_ce0;
reg   [15:0] grp_compute3_fu_1212_weight_buffer6332_q0;
reg   [31:0] grp_compute3_fu_1212_p_read;
reg   [0:0] grp_compute3_fu_1212_enable;
reg   [0:0] grp_compute3_fu_1212_reluenable;
wire   [9:0] grp_compute3_fu_1212_beta_buffer_address0;
wire    grp_compute3_fu_1212_beta_buffer_ce0;
wire    grp_copy_input_weight_fu_1620_ap_start;
wire    grp_copy_input_weight_fu_1620_ap_done;
wire    grp_copy_input_weight_fu_1620_ap_idle;
wire    grp_copy_input_weight_fu_1620_ap_ready;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWVALID;
wire   [63:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWADDR;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWLEN;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWSIZE;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWBURST;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWLOCK;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWCACHE;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWPROT;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWQOS;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWREGION;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WVALID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WDATA;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WSTRB;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WLAST;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WID;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARVALID;
wire   [63:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARADDR;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLEN;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARSIZE;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARBURST;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLOCK;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARCACHE;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARPROT;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARQOS;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARREGION;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_RREADY;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_BREADY;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWVALID;
wire   [63:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWADDR;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWLEN;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWSIZE;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWBURST;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWLOCK;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWCACHE;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWPROT;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWQOS;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWREGION;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WVALID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WDATA;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WSTRB;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WLAST;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WID;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARVALID;
wire   [63:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARADDR;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARID;
wire   [31:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLEN;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARSIZE;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARBURST;
wire   [1:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLOCK;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARCACHE;
wire   [2:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARPROT;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARQOS;
wire   [3:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARREGION;
wire   [0:0] grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARUSER;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_RREADY;
wire    grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_BREADY;
reg   [31:0] grp_copy_input_weight_fu_1620_n;
reg   [31:0] grp_copy_input_weight_fu_1620_TN;
reg   [0:0] grp_copy_input_weight_fu_1620_Padding_offset;
wire   [11:0] grp_copy_input_weight_fu_1620_input_buffer_address0;
wire    grp_copy_input_weight_fu_1620_input_buffer_ce0;
wire    grp_copy_input_weight_fu_1620_input_buffer_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_input_buffer_d0;
wire   [11:0] grp_copy_input_weight_fu_1620_input_buffer1_address0;
wire    grp_copy_input_weight_fu_1620_input_buffer1_ce0;
wire    grp_copy_input_weight_fu_1620_input_buffer1_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_input_buffer1_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer22_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer22_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer22_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer22_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer3_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer3_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer33_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer33_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer33_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer33_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer4_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer4_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer4_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer4_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer44_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer44_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer44_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer44_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer5_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer5_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer5_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer5_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer55_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer55_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer55_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer55_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer6_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer6_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer6_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer6_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer66_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer66_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer66_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer66_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer7_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer7_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer7_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer7_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer77_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer77_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer77_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer77_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer8_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer8_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer8_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer8_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer88_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer88_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer88_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer88_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer9_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer9_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer9_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer9_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer99_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer99_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer99_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer99_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer10_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer10_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer10_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer10_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1010_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1010_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1010_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1010_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer11_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer11_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer11_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer11_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1111_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1111_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1111_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1111_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer12_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer12_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer12_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer12_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1212_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1212_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1212_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1212_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer13_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer13_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer13_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer13_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1313_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1313_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1313_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1313_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer14_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer14_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer14_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer14_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1414_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1414_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1414_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1414_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer15_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer15_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer15_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer15_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1515_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1515_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1515_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1515_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer16_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer16_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer16_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer16_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1616_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1616_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1616_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1616_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer17_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer17_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer17_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer17_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1717_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1717_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1717_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1717_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer18_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer18_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer18_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer18_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1818_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1818_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1818_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1818_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer19_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer19_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer19_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer19_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer1919_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1919_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer1919_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer1919_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer20_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer20_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer20_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer20_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2020_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2020_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2020_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2020_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer21_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer21_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer21_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer21_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2121_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2121_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2121_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2121_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2222_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2222_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2222_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2222_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2223_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2223_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2223_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2223_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer23_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer23_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer23_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer23_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2324_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2324_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2324_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2324_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer24_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer24_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer24_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer24_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2425_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2425_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2425_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2425_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer25_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer25_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer25_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer25_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2526_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2526_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2526_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2526_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer26_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer26_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer26_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer26_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2627_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2627_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2627_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2627_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer27_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer27_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer27_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer27_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2728_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2728_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2728_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2728_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer28_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer28_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer28_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer28_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2829_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2829_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2829_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2829_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer29_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer29_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer29_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer29_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer2930_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2930_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer2930_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer2930_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer30_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer30_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer30_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer30_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer3031_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3031_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3031_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer3031_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer31_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer31_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer31_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer31_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer3132_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3132_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3132_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer3132_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer32_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer32_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer32_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer32_d0;
wire   [3:0] grp_copy_input_weight_fu_1620_weight_buffer3233_address0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3233_ce0;
wire    grp_copy_input_weight_fu_1620_weight_buffer3233_we0;
wire   [15:0] grp_copy_input_weight_fu_1620_weight_buffer3233_d0;
reg   [31:0] grp_copy_input_weight_fu_1620_p_read;
reg   [0:0] grp_copy_input_weight_fu_1620_enable;
reg   [0:0] grp_copy_input_weight_fu_1620_weight_load_enable_offset;
wire   [31:0] grp_copy_input_weight_fu_1620_ap_return;
wire    grp_pool_yolo24_fu_1874_ap_start;
wire    grp_pool_yolo24_fu_1874_ap_done;
wire    grp_pool_yolo24_fu_1874_ap_idle;
wire    grp_pool_yolo24_fu_1874_ap_ready;
wire   [11:0] grp_pool_yolo24_fu_1874_Input_r_address0;
wire    grp_pool_yolo24_fu_1874_Input_r_ce0;
reg   [15:0] grp_pool_yolo24_fu_1874_Input_r_q0;
wire   [11:0] grp_pool_yolo24_fu_1874_Input1_address0;
wire    grp_pool_yolo24_fu_1874_Input1_ce0;
reg   [15:0] grp_pool_yolo24_fu_1874_Input1_q0;
wire   [9:0] grp_pool_yolo24_fu_1874_Output_r_address0;
wire    grp_pool_yolo24_fu_1874_Output_r_ce0;
wire    grp_pool_yolo24_fu_1874_Output_r_we0;
wire   [15:0] grp_pool_yolo24_fu_1874_Output_r_d0;
wire   [9:0] grp_pool_yolo24_fu_1874_Output2_address0;
wire    grp_pool_yolo24_fu_1874_Output2_ce0;
wire    grp_pool_yolo24_fu_1874_Output2_we0;
wire   [15:0] grp_pool_yolo24_fu_1874_Output2_d0;
reg   [30:0] ap_phi_mux_y_1_phi_fu_995_p4;
wire    ap_block_pp0_stage0;
reg   [30:0] ap_phi_mux_y_phi_fu_1072_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] TMP_N_reg_1112;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln572_fu_2700_p2;
wire    ap_CS_fsm_state41;
reg   [30:0] n_reg_1124;
reg   [0:0] pingpong_reg_1135;
reg   [0:0] pingpong_1_reg_1147;
reg    ap_block_state39_on_subcall_done;
reg   [31:0] phi_ln642_reg_1162;
wire    ap_CS_fsm_state35;
reg    ap_block_state35_on_subcall_done;
wire    ap_CS_fsm_state34;
reg    ap_block_state34_on_subcall_done;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state17;
reg   [31:0] phi_ln642_1_reg_1187;
reg    grp_compute3_fu_1212_ap_start_reg;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
reg    grp_copy_input_weight_fu_1620_ap_start_reg;
reg    grp_pool_yolo24_fu_1874_ap_start_reg;
wire   [63:0] zext_ln536_7_fu_2322_p1;
wire   [63:0] zext_ln536_4_fu_2326_p1;
wire   [63:0] zext_ln536_3_fu_2689_p1;
wire   [63:0] zext_ln536_fu_2693_p1;
reg   [31:0] TMP_N_next1_0_1_fu_654;
reg   [31:0] TMP_N_next0_0_1_fu_658;
wire   [0:0] grp_fu_1906_p2;
wire   [31:0] zext_ln572_fu_2711_p1;
wire   [30:0] trunc_ln526_1_fu_1966_p1;
wire   [30:0] grp_fu_1984_p0;
wire   [33:0] grp_fu_1984_p1;
wire   [34:0] add_ln527_3_fu_2009_p2;
wire   [3:0] add_ln528_3_fu_2045_p2;
wire   [30:0] add_ln526_1_fu_2067_p2;
wire   [0:0] icmp_ln529_1_fu_2095_p2;
wire   [0:0] xor_ln527_1_fu_2113_p2;
wire   [0:0] and_ln526_4_fu_2101_p2;
wire   [1:0] select_ln527_5_fu_2106_p3;
wire   [0:0] or_ln519_1_fu_2135_p2;
wire   [0:0] or_ln519_3_fu_2140_p2;
wire   [1:0] ky_4_fu_2129_p2;
wire   [1:0] select_ln519_3_fu_2145_p3;
wire   [5:0] Yoffset_1_mid_fu_2181_p3;
wire   [5:0] Yoffset_1_fu_2175_p3;
wire   [0:0] and_ln526_3_fu_2188_p2;
wire   [5:0] Yoffset_1_mid2_fu_2199_p3;
wire   [5:0] select_ln526_11_fu_2192_p3;
wire   [0:0] and_ln527_2_fu_2206_p2;
wire   [5:0] Yoffset_1_mid1_fu_2218_p3;
wire   [5:0] select_ln527_8_fu_2211_p3;
wire   [5:0] select_ln519_5_fu_2230_p3;
wire   [0:0] select_ln519_4_fu_2224_p3;
wire   [9:0] trunc_ln526_3_fu_2255_p1;
wire   [6:0] trunc_ln533_3_fu_2266_p1;
wire   [31:0] select_ln526_6_fu_2248_p3;
wire   [31:0] add_ln527_1_fu_2277_p2;
wire   [9:0] trunc_ln527_1_fu_2283_p1;
wire   [9:0] select_ln526_9_fu_2259_p3;
wire   [6:0] trunc_ln533_4_fu_2294_p1;
wire   [6:0] select_ln526_10_fu_2270_p3;
wire   [7:0] Xoffset_1_fu_2312_p3;
wire   [30:0] trunc_ln526_fu_2333_p1;
wire   [30:0] grp_fu_2351_p0;
wire   [33:0] grp_fu_2351_p1;
wire   [34:0] add_ln527_2_fu_2376_p2;
wire   [3:0] add_ln528_2_fu_2412_p2;
wire   [30:0] add_ln526_fu_2434_p2;
wire   [0:0] icmp_ln529_fu_2462_p2;
wire   [0:0] xor_ln527_fu_2480_p2;
wire   [0:0] and_ln526_1_fu_2468_p2;
wire   [1:0] select_ln527_fu_2473_p3;
wire   [0:0] or_ln519_fu_2502_p2;
wire   [0:0] or_ln519_2_fu_2507_p2;
wire   [1:0] ky_5_fu_2496_p2;
wire   [1:0] select_ln519_fu_2512_p3;
wire   [5:0] Yoffset_mid_fu_2548_p3;
wire   [5:0] Yoffset_fu_2542_p3;
wire   [0:0] and_ln526_fu_2555_p2;
wire   [5:0] Yoffset_mid2_fu_2566_p3;
wire   [5:0] select_ln526_5_fu_2559_p3;
wire   [0:0] and_ln527_fu_2573_p2;
wire   [5:0] Yoffset_mid1_fu_2585_p3;
wire   [5:0] select_ln527_3_fu_2578_p3;
wire   [5:0] select_ln519_2_fu_2597_p3;
wire   [0:0] select_ln519_1_fu_2591_p3;
wire   [9:0] trunc_ln526_2_fu_2622_p1;
wire   [6:0] trunc_ln533_fu_2633_p1;
wire   [31:0] select_ln526_fu_2615_p3;
wire   [31:0] add_ln527_fu_2644_p2;
wire   [9:0] trunc_ln527_fu_2650_p1;
wire   [9:0] select_ln526_3_fu_2626_p3;
wire   [6:0] trunc_ln533_1_fu_2661_p1;
wire   [6:0] select_ln526_4_fu_2637_p3;
wire   [7:0] Xoffset_fu_2679_p3;
wire    ap_CS_fsm_state42;
wire   [5:0] grp_fu_2759_p1;
wire   [5:0] grp_fu_2765_p0;
wire   [6:0] grp_fu_2765_p1;
wire   [7:0] grp_fu_2765_p2;
wire   [5:0] grp_fu_2773_p1;
wire   [5:0] grp_fu_2779_p0;
wire   [6:0] grp_fu_2779_p1;
wire   [7:0] grp_fu_2779_p2;
reg    grp_fu_1984_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_fu_2351_ce;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [64:0] grp_fu_1984_p00;
wire   [64:0] grp_fu_1984_p10;
wire   [64:0] grp_fu_2351_p00;
wire   [64:0] grp_fu_2351_p10;
wire   [11:0] grp_fu_2765_p00;
wire   [11:0] grp_fu_2765_p20;
wire   [11:0] grp_fu_2779_p00;
wire   [11:0] grp_fu_2779_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 tmp_x = 32'd0;
#0 tmp_tx_min = 32'd0;
#0 NOP_0 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 grp_compute3_fu_1212_ap_start_reg = 1'b0;
#0 grp_copy_input_weight_fu_1620_ap_start_reg = 1'b0;
#0 grp_pool_yolo24_fu_1874_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

YOLO2_FPGA_intra_pingpong_wrapper_input_buffer1_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2809 ),
    .AddressWidth( 12 ))
input_buffer1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_buffer1_0_address0),
    .ce0(input_buffer1_0_ce0),
    .we0(input_buffer1_0_we0),
    .d0(grp_copy_input_weight_fu_1620_input_buffer_d0),
    .q0(input_buffer1_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_input_buffer1_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2809 ),
    .AddressWidth( 12 ))
input_buffer1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_buffer1_1_address0),
    .ce0(input_buffer1_1_ce0),
    .we0(input_buffer1_1_we0),
    .d0(grp_copy_input_weight_fu_1620_input_buffer1_d0),
    .q0(input_buffer1_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_0_0_address0),
    .ce0(weight_buffer1_0_0_ce0),
    .we0(weight_buffer1_0_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer_d0),
    .q0(weight_buffer1_0_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_0_1_address0),
    .ce0(weight_buffer1_0_1_ce0),
    .we0(weight_buffer1_0_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1_d0),
    .q0(weight_buffer1_0_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_1_0_address0),
    .ce0(weight_buffer1_1_0_ce0),
    .we0(weight_buffer1_1_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2_d0),
    .q0(weight_buffer1_1_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_1_1_address0),
    .ce0(weight_buffer1_1_1_ce0),
    .we0(weight_buffer1_1_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer22_d0),
    .q0(weight_buffer1_1_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_2_0_address0),
    .ce0(weight_buffer1_2_0_ce0),
    .we0(weight_buffer1_2_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3_d0),
    .q0(weight_buffer1_2_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_2_1_address0),
    .ce0(weight_buffer1_2_1_ce0),
    .we0(weight_buffer1_2_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer33_d0),
    .q0(weight_buffer1_2_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_3_0_address0),
    .ce0(weight_buffer1_3_0_ce0),
    .we0(weight_buffer1_3_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer4_d0),
    .q0(weight_buffer1_3_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_3_1_address0),
    .ce0(weight_buffer1_3_1_ce0),
    .we0(weight_buffer1_3_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer44_d0),
    .q0(weight_buffer1_3_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_4_0_address0),
    .ce0(weight_buffer1_4_0_ce0),
    .we0(weight_buffer1_4_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer5_d0),
    .q0(weight_buffer1_4_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_4_1_address0),
    .ce0(weight_buffer1_4_1_ce0),
    .we0(weight_buffer1_4_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer55_d0),
    .q0(weight_buffer1_4_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_5_0_address0),
    .ce0(weight_buffer1_5_0_ce0),
    .we0(weight_buffer1_5_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer6_d0),
    .q0(weight_buffer1_5_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_5_1_address0),
    .ce0(weight_buffer1_5_1_ce0),
    .we0(weight_buffer1_5_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer66_d0),
    .q0(weight_buffer1_5_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_6_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_6_0_address0),
    .ce0(weight_buffer1_6_0_ce0),
    .we0(weight_buffer1_6_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer7_d0),
    .q0(weight_buffer1_6_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_6_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_6_1_address0),
    .ce0(weight_buffer1_6_1_ce0),
    .we0(weight_buffer1_6_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer77_d0),
    .q0(weight_buffer1_6_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_7_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_7_0_address0),
    .ce0(weight_buffer1_7_0_ce0),
    .we0(weight_buffer1_7_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer8_d0),
    .q0(weight_buffer1_7_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_7_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_7_1_address0),
    .ce0(weight_buffer1_7_1_ce0),
    .we0(weight_buffer1_7_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer88_d0),
    .q0(weight_buffer1_7_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_8_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_8_0_address0),
    .ce0(weight_buffer1_8_0_ce0),
    .we0(weight_buffer1_8_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer9_d0),
    .q0(weight_buffer1_8_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_8_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_8_1_address0),
    .ce0(weight_buffer1_8_1_ce0),
    .we0(weight_buffer1_8_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer99_d0),
    .q0(weight_buffer1_8_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_9_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_9_0_address0),
    .ce0(weight_buffer1_9_0_ce0),
    .we0(weight_buffer1_9_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer10_d0),
    .q0(weight_buffer1_9_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_9_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_9_1_address0),
    .ce0(weight_buffer1_9_1_ce0),
    .we0(weight_buffer1_9_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1010_d0),
    .q0(weight_buffer1_9_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_10_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_10_0_address0),
    .ce0(weight_buffer1_10_0_ce0),
    .we0(weight_buffer1_10_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer11_d0),
    .q0(weight_buffer1_10_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_10_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_10_1_address0),
    .ce0(weight_buffer1_10_1_ce0),
    .we0(weight_buffer1_10_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1111_d0),
    .q0(weight_buffer1_10_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_11_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_11_0_address0),
    .ce0(weight_buffer1_11_0_ce0),
    .we0(weight_buffer1_11_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer12_d0),
    .q0(weight_buffer1_11_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_11_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_11_1_address0),
    .ce0(weight_buffer1_11_1_ce0),
    .we0(weight_buffer1_11_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1212_d0),
    .q0(weight_buffer1_11_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_12_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_12_0_address0),
    .ce0(weight_buffer1_12_0_ce0),
    .we0(weight_buffer1_12_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer13_d0),
    .q0(weight_buffer1_12_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_12_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_12_1_address0),
    .ce0(weight_buffer1_12_1_ce0),
    .we0(weight_buffer1_12_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1313_d0),
    .q0(weight_buffer1_12_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_13_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_13_0_address0),
    .ce0(weight_buffer1_13_0_ce0),
    .we0(weight_buffer1_13_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer14_d0),
    .q0(weight_buffer1_13_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_13_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_13_1_address0),
    .ce0(weight_buffer1_13_1_ce0),
    .we0(weight_buffer1_13_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1414_d0),
    .q0(weight_buffer1_13_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_14_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_14_0_address0),
    .ce0(weight_buffer1_14_0_ce0),
    .we0(weight_buffer1_14_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer15_d0),
    .q0(weight_buffer1_14_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_14_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_14_1_address0),
    .ce0(weight_buffer1_14_1_ce0),
    .we0(weight_buffer1_14_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1515_d0),
    .q0(weight_buffer1_14_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_15_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_15_0_address0),
    .ce0(weight_buffer1_15_0_ce0),
    .we0(weight_buffer1_15_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer16_d0),
    .q0(weight_buffer1_15_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_15_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_15_1_address0),
    .ce0(weight_buffer1_15_1_ce0),
    .we0(weight_buffer1_15_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1616_d0),
    .q0(weight_buffer1_15_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_16_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_16_0_address0),
    .ce0(weight_buffer1_16_0_ce0),
    .we0(weight_buffer1_16_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer17_d0),
    .q0(weight_buffer1_16_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_16_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_16_1_address0),
    .ce0(weight_buffer1_16_1_ce0),
    .we0(weight_buffer1_16_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1717_d0),
    .q0(weight_buffer1_16_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_17_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_17_0_address0),
    .ce0(weight_buffer1_17_0_ce0),
    .we0(weight_buffer1_17_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer18_d0),
    .q0(weight_buffer1_17_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_17_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_17_1_address0),
    .ce0(weight_buffer1_17_1_ce0),
    .we0(weight_buffer1_17_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1818_d0),
    .q0(weight_buffer1_17_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_18_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_18_0_address0),
    .ce0(weight_buffer1_18_0_ce0),
    .we0(weight_buffer1_18_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer19_d0),
    .q0(weight_buffer1_18_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_18_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_18_1_address0),
    .ce0(weight_buffer1_18_1_ce0),
    .we0(weight_buffer1_18_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1919_d0),
    .q0(weight_buffer1_18_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_19_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_19_0_address0),
    .ce0(weight_buffer1_19_0_ce0),
    .we0(weight_buffer1_19_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer20_d0),
    .q0(weight_buffer1_19_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_19_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_19_1_address0),
    .ce0(weight_buffer1_19_1_ce0),
    .we0(weight_buffer1_19_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2020_d0),
    .q0(weight_buffer1_19_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_20_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_20_0_address0),
    .ce0(weight_buffer1_20_0_ce0),
    .we0(weight_buffer1_20_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer21_d0),
    .q0(weight_buffer1_20_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_20_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_20_1_address0),
    .ce0(weight_buffer1_20_1_ce0),
    .we0(weight_buffer1_20_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2121_d0),
    .q0(weight_buffer1_20_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_21_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_21_0_address0),
    .ce0(weight_buffer1_21_0_ce0),
    .we0(weight_buffer1_21_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2222_d0),
    .q0(weight_buffer1_21_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_21_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_21_1_address0),
    .ce0(weight_buffer1_21_1_ce0),
    .we0(weight_buffer1_21_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2223_d0),
    .q0(weight_buffer1_21_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_22_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_22_0_address0),
    .ce0(weight_buffer1_22_0_ce0),
    .we0(weight_buffer1_22_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer23_d0),
    .q0(weight_buffer1_22_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_22_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_22_1_address0),
    .ce0(weight_buffer1_22_1_ce0),
    .we0(weight_buffer1_22_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2324_d0),
    .q0(weight_buffer1_22_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_23_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_23_0_address0),
    .ce0(weight_buffer1_23_0_ce0),
    .we0(weight_buffer1_23_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer24_d0),
    .q0(weight_buffer1_23_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_23_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_23_1_address0),
    .ce0(weight_buffer1_23_1_ce0),
    .we0(weight_buffer1_23_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2425_d0),
    .q0(weight_buffer1_23_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_24_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_24_0_address0),
    .ce0(weight_buffer1_24_0_ce0),
    .we0(weight_buffer1_24_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer25_d0),
    .q0(weight_buffer1_24_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_24_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_24_1_address0),
    .ce0(weight_buffer1_24_1_ce0),
    .we0(weight_buffer1_24_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2526_d0),
    .q0(weight_buffer1_24_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_25_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_25_0_address0),
    .ce0(weight_buffer1_25_0_ce0),
    .we0(weight_buffer1_25_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer26_d0),
    .q0(weight_buffer1_25_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_25_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_25_1_address0),
    .ce0(weight_buffer1_25_1_ce0),
    .we0(weight_buffer1_25_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2627_d0),
    .q0(weight_buffer1_25_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_26_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_26_0_address0),
    .ce0(weight_buffer1_26_0_ce0),
    .we0(weight_buffer1_26_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer27_d0),
    .q0(weight_buffer1_26_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_26_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_26_1_address0),
    .ce0(weight_buffer1_26_1_ce0),
    .we0(weight_buffer1_26_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2728_d0),
    .q0(weight_buffer1_26_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_27_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_27_0_address0),
    .ce0(weight_buffer1_27_0_ce0),
    .we0(weight_buffer1_27_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer28_d0),
    .q0(weight_buffer1_27_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_27_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_27_1_address0),
    .ce0(weight_buffer1_27_1_ce0),
    .we0(weight_buffer1_27_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2829_d0),
    .q0(weight_buffer1_27_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_28_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_28_0_address0),
    .ce0(weight_buffer1_28_0_ce0),
    .we0(weight_buffer1_28_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer29_d0),
    .q0(weight_buffer1_28_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_28_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_28_1_address0),
    .ce0(weight_buffer1_28_1_ce0),
    .we0(weight_buffer1_28_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2930_d0),
    .q0(weight_buffer1_28_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_29_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_29_0_address0),
    .ce0(weight_buffer1_29_0_ce0),
    .we0(weight_buffer1_29_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer30_d0),
    .q0(weight_buffer1_29_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_29_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_29_1_address0),
    .ce0(weight_buffer1_29_1_ce0),
    .we0(weight_buffer1_29_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3031_d0),
    .q0(weight_buffer1_29_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_30_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_30_0_address0),
    .ce0(weight_buffer1_30_0_ce0),
    .we0(weight_buffer1_30_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer31_d0),
    .q0(weight_buffer1_30_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_30_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_30_1_address0),
    .ce0(weight_buffer1_30_1_ce0),
    .we0(weight_buffer1_30_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3132_d0),
    .q0(weight_buffer1_30_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_31_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_31_0_address0),
    .ce0(weight_buffer1_31_0_ce0),
    .we0(weight_buffer1_31_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer32_d0),
    .q0(weight_buffer1_31_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer1_31_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer1_31_1_address0),
    .ce0(weight_buffer1_31_1_ce0),
    .we0(weight_buffer1_31_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3233_d0),
    .q0(weight_buffer1_31_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_input_buffer1_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2809 ),
    .AddressWidth( 12 ))
input_buffer0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_buffer0_0_address0),
    .ce0(input_buffer0_0_ce0),
    .we0(input_buffer0_0_we0),
    .d0(grp_copy_input_weight_fu_1620_input_buffer_d0),
    .q0(input_buffer0_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_input_buffer1_0 #(
    .DataWidth( 16 ),
    .AddressRange( 2809 ),
    .AddressWidth( 12 ))
input_buffer0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_buffer0_1_address0),
    .ce0(input_buffer0_1_ce0),
    .we0(input_buffer0_1_we0),
    .d0(grp_copy_input_weight_fu_1620_input_buffer1_d0),
    .q0(input_buffer0_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_0_0_address0),
    .ce0(weight_buffer0_0_0_ce0),
    .we0(weight_buffer0_0_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer_d0),
    .q0(weight_buffer0_0_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_0_1_address0),
    .ce0(weight_buffer0_0_1_ce0),
    .we0(weight_buffer0_0_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1_d0),
    .q0(weight_buffer0_0_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_1_0_address0),
    .ce0(weight_buffer0_1_0_ce0),
    .we0(weight_buffer0_1_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2_d0),
    .q0(weight_buffer0_1_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_1_1_address0),
    .ce0(weight_buffer0_1_1_ce0),
    .we0(weight_buffer0_1_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer22_d0),
    .q0(weight_buffer0_1_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_2_0_address0),
    .ce0(weight_buffer0_2_0_ce0),
    .we0(weight_buffer0_2_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3_d0),
    .q0(weight_buffer0_2_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_2_1_address0),
    .ce0(weight_buffer0_2_1_ce0),
    .we0(weight_buffer0_2_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer33_d0),
    .q0(weight_buffer0_2_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_3_0_address0),
    .ce0(weight_buffer0_3_0_ce0),
    .we0(weight_buffer0_3_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer4_d0),
    .q0(weight_buffer0_3_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_3_1_address0),
    .ce0(weight_buffer0_3_1_ce0),
    .we0(weight_buffer0_3_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer44_d0),
    .q0(weight_buffer0_3_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_4_0_address0),
    .ce0(weight_buffer0_4_0_ce0),
    .we0(weight_buffer0_4_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer5_d0),
    .q0(weight_buffer0_4_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_4_1_address0),
    .ce0(weight_buffer0_4_1_ce0),
    .we0(weight_buffer0_4_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer55_d0),
    .q0(weight_buffer0_4_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_5_0_address0),
    .ce0(weight_buffer0_5_0_ce0),
    .we0(weight_buffer0_5_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer6_d0),
    .q0(weight_buffer0_5_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_5_1_address0),
    .ce0(weight_buffer0_5_1_ce0),
    .we0(weight_buffer0_5_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer66_d0),
    .q0(weight_buffer0_5_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_6_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_6_0_address0),
    .ce0(weight_buffer0_6_0_ce0),
    .we0(weight_buffer0_6_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer7_d0),
    .q0(weight_buffer0_6_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_6_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_6_1_address0),
    .ce0(weight_buffer0_6_1_ce0),
    .we0(weight_buffer0_6_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer77_d0),
    .q0(weight_buffer0_6_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_7_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_7_0_address0),
    .ce0(weight_buffer0_7_0_ce0),
    .we0(weight_buffer0_7_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer8_d0),
    .q0(weight_buffer0_7_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_7_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_7_1_address0),
    .ce0(weight_buffer0_7_1_ce0),
    .we0(weight_buffer0_7_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer88_d0),
    .q0(weight_buffer0_7_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_8_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_8_0_address0),
    .ce0(weight_buffer0_8_0_ce0),
    .we0(weight_buffer0_8_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer9_d0),
    .q0(weight_buffer0_8_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_8_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_8_1_address0),
    .ce0(weight_buffer0_8_1_ce0),
    .we0(weight_buffer0_8_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer99_d0),
    .q0(weight_buffer0_8_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_9_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_9_0_address0),
    .ce0(weight_buffer0_9_0_ce0),
    .we0(weight_buffer0_9_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer10_d0),
    .q0(weight_buffer0_9_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_9_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_9_1_address0),
    .ce0(weight_buffer0_9_1_ce0),
    .we0(weight_buffer0_9_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1010_d0),
    .q0(weight_buffer0_9_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_10_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_10_0_address0),
    .ce0(weight_buffer0_10_0_ce0),
    .we0(weight_buffer0_10_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer11_d0),
    .q0(weight_buffer0_10_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_10_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_10_1_address0),
    .ce0(weight_buffer0_10_1_ce0),
    .we0(weight_buffer0_10_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1111_d0),
    .q0(weight_buffer0_10_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_11_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_11_0_address0),
    .ce0(weight_buffer0_11_0_ce0),
    .we0(weight_buffer0_11_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer12_d0),
    .q0(weight_buffer0_11_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_11_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_11_1_address0),
    .ce0(weight_buffer0_11_1_ce0),
    .we0(weight_buffer0_11_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1212_d0),
    .q0(weight_buffer0_11_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_12_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_12_0_address0),
    .ce0(weight_buffer0_12_0_ce0),
    .we0(weight_buffer0_12_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer13_d0),
    .q0(weight_buffer0_12_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_12_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_12_1_address0),
    .ce0(weight_buffer0_12_1_ce0),
    .we0(weight_buffer0_12_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1313_d0),
    .q0(weight_buffer0_12_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_13_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_13_0_address0),
    .ce0(weight_buffer0_13_0_ce0),
    .we0(weight_buffer0_13_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer14_d0),
    .q0(weight_buffer0_13_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_13_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_13_1_address0),
    .ce0(weight_buffer0_13_1_ce0),
    .we0(weight_buffer0_13_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1414_d0),
    .q0(weight_buffer0_13_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_14_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_14_0_address0),
    .ce0(weight_buffer0_14_0_ce0),
    .we0(weight_buffer0_14_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer15_d0),
    .q0(weight_buffer0_14_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_14_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_14_1_address0),
    .ce0(weight_buffer0_14_1_ce0),
    .we0(weight_buffer0_14_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1515_d0),
    .q0(weight_buffer0_14_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_15_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_15_0_address0),
    .ce0(weight_buffer0_15_0_ce0),
    .we0(weight_buffer0_15_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer16_d0),
    .q0(weight_buffer0_15_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_15_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_15_1_address0),
    .ce0(weight_buffer0_15_1_ce0),
    .we0(weight_buffer0_15_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1616_d0),
    .q0(weight_buffer0_15_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_16_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_16_0_address0),
    .ce0(weight_buffer0_16_0_ce0),
    .we0(weight_buffer0_16_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer17_d0),
    .q0(weight_buffer0_16_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_16_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_16_1_address0),
    .ce0(weight_buffer0_16_1_ce0),
    .we0(weight_buffer0_16_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1717_d0),
    .q0(weight_buffer0_16_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_17_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_17_0_address0),
    .ce0(weight_buffer0_17_0_ce0),
    .we0(weight_buffer0_17_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer18_d0),
    .q0(weight_buffer0_17_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_17_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_17_1_address0),
    .ce0(weight_buffer0_17_1_ce0),
    .we0(weight_buffer0_17_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1818_d0),
    .q0(weight_buffer0_17_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_18_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_18_0_address0),
    .ce0(weight_buffer0_18_0_ce0),
    .we0(weight_buffer0_18_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer19_d0),
    .q0(weight_buffer0_18_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_18_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_18_1_address0),
    .ce0(weight_buffer0_18_1_ce0),
    .we0(weight_buffer0_18_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer1919_d0),
    .q0(weight_buffer0_18_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_19_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_19_0_address0),
    .ce0(weight_buffer0_19_0_ce0),
    .we0(weight_buffer0_19_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer20_d0),
    .q0(weight_buffer0_19_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_19_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_19_1_address0),
    .ce0(weight_buffer0_19_1_ce0),
    .we0(weight_buffer0_19_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2020_d0),
    .q0(weight_buffer0_19_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_20_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_20_0_address0),
    .ce0(weight_buffer0_20_0_ce0),
    .we0(weight_buffer0_20_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer21_d0),
    .q0(weight_buffer0_20_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_20_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_20_1_address0),
    .ce0(weight_buffer0_20_1_ce0),
    .we0(weight_buffer0_20_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2121_d0),
    .q0(weight_buffer0_20_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_21_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_21_0_address0),
    .ce0(weight_buffer0_21_0_ce0),
    .we0(weight_buffer0_21_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2222_d0),
    .q0(weight_buffer0_21_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_21_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_21_1_address0),
    .ce0(weight_buffer0_21_1_ce0),
    .we0(weight_buffer0_21_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2223_d0),
    .q0(weight_buffer0_21_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_22_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_22_0_address0),
    .ce0(weight_buffer0_22_0_ce0),
    .we0(weight_buffer0_22_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer23_d0),
    .q0(weight_buffer0_22_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_22_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_22_1_address0),
    .ce0(weight_buffer0_22_1_ce0),
    .we0(weight_buffer0_22_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2324_d0),
    .q0(weight_buffer0_22_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_23_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_23_0_address0),
    .ce0(weight_buffer0_23_0_ce0),
    .we0(weight_buffer0_23_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer24_d0),
    .q0(weight_buffer0_23_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_23_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_23_1_address0),
    .ce0(weight_buffer0_23_1_ce0),
    .we0(weight_buffer0_23_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2425_d0),
    .q0(weight_buffer0_23_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_24_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_24_0_address0),
    .ce0(weight_buffer0_24_0_ce0),
    .we0(weight_buffer0_24_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer25_d0),
    .q0(weight_buffer0_24_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_24_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_24_1_address0),
    .ce0(weight_buffer0_24_1_ce0),
    .we0(weight_buffer0_24_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2526_d0),
    .q0(weight_buffer0_24_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_25_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_25_0_address0),
    .ce0(weight_buffer0_25_0_ce0),
    .we0(weight_buffer0_25_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer26_d0),
    .q0(weight_buffer0_25_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_25_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_25_1_address0),
    .ce0(weight_buffer0_25_1_ce0),
    .we0(weight_buffer0_25_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2627_d0),
    .q0(weight_buffer0_25_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_26_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_26_0_address0),
    .ce0(weight_buffer0_26_0_ce0),
    .we0(weight_buffer0_26_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer27_d0),
    .q0(weight_buffer0_26_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_26_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_26_1_address0),
    .ce0(weight_buffer0_26_1_ce0),
    .we0(weight_buffer0_26_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2728_d0),
    .q0(weight_buffer0_26_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_27_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_27_0_address0),
    .ce0(weight_buffer0_27_0_ce0),
    .we0(weight_buffer0_27_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer28_d0),
    .q0(weight_buffer0_27_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_27_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_27_1_address0),
    .ce0(weight_buffer0_27_1_ce0),
    .we0(weight_buffer0_27_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2829_d0),
    .q0(weight_buffer0_27_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_28_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_28_0_address0),
    .ce0(weight_buffer0_28_0_ce0),
    .we0(weight_buffer0_28_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer29_d0),
    .q0(weight_buffer0_28_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_28_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_28_1_address0),
    .ce0(weight_buffer0_28_1_ce0),
    .we0(weight_buffer0_28_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer2930_d0),
    .q0(weight_buffer0_28_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_29_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_29_0_address0),
    .ce0(weight_buffer0_29_0_ce0),
    .we0(weight_buffer0_29_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer30_d0),
    .q0(weight_buffer0_29_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_29_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_29_1_address0),
    .ce0(weight_buffer0_29_1_ce0),
    .we0(weight_buffer0_29_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3031_d0),
    .q0(weight_buffer0_29_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_30_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_30_0_address0),
    .ce0(weight_buffer0_30_0_ce0),
    .we0(weight_buffer0_30_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer31_d0),
    .q0(weight_buffer0_30_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_30_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_30_1_address0),
    .ce0(weight_buffer0_30_1_ce0),
    .we0(weight_buffer0_30_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3132_d0),
    .q0(weight_buffer0_30_1_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_31_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_31_0_address0),
    .ce0(weight_buffer0_31_0_ce0),
    .we0(weight_buffer0_31_0_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer32_d0),
    .q0(weight_buffer0_31_0_q0)
);

YOLO2_FPGA_intra_pingpong_wrapper_weight_buffer1_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
weight_buffer0_31_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_buffer0_31_1_address0),
    .ce0(weight_buffer0_31_1_ce0),
    .we0(weight_buffer0_31_1_we0),
    .d0(grp_copy_input_weight_fu_1620_weight_buffer3233_d0),
    .q0(weight_buffer0_31_1_q0)
);

YOLO2_FPGA_compute3 grp_compute3_fu_1212(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute3_fu_1212_ap_start),
    .ap_done(grp_compute3_fu_1212_ap_done),
    .ap_idle(grp_compute3_fu_1212_ap_idle),
    .ap_ready(grp_compute3_fu_1212_ap_ready),
    .input_buffer_address0(grp_compute3_fu_1212_input_buffer_address0),
    .input_buffer_ce0(grp_compute3_fu_1212_input_buffer_ce0),
    .input_buffer_q0(grp_compute3_fu_1212_input_buffer_q0),
    .input_buffer1_address0(grp_compute3_fu_1212_input_buffer1_address0),
    .input_buffer1_ce0(grp_compute3_fu_1212_input_buffer1_ce0),
    .input_buffer1_q0(grp_compute3_fu_1212_input_buffer1_q0),
    .output_buffer_address0(grp_compute3_fu_1212_output_buffer_address0),
    .output_buffer_ce0(grp_compute3_fu_1212_output_buffer_ce0),
    .output_buffer_we0(grp_compute3_fu_1212_output_buffer_we0),
    .output_buffer_d0(grp_compute3_fu_1212_output_buffer_d0),
    .output_buffer2_address0(grp_compute3_fu_1212_output_buffer2_address0),
    .output_buffer2_ce0(grp_compute3_fu_1212_output_buffer2_ce0),
    .output_buffer2_we0(grp_compute3_fu_1212_output_buffer2_we0),
    .output_buffer2_d0(grp_compute3_fu_1212_output_buffer2_d0),
    .output_buffer3_address0(grp_compute3_fu_1212_output_buffer3_address0),
    .output_buffer3_ce0(grp_compute3_fu_1212_output_buffer3_ce0),
    .output_buffer3_we0(grp_compute3_fu_1212_output_buffer3_we0),
    .output_buffer3_d0(grp_compute3_fu_1212_output_buffer3_d0),
    .output_buffer4_address0(grp_compute3_fu_1212_output_buffer4_address0),
    .output_buffer4_ce0(grp_compute3_fu_1212_output_buffer4_ce0),
    .output_buffer4_we0(grp_compute3_fu_1212_output_buffer4_we0),
    .output_buffer4_d0(grp_compute3_fu_1212_output_buffer4_d0),
    .output_buffer5_address0(grp_compute3_fu_1212_output_buffer5_address0),
    .output_buffer5_ce0(grp_compute3_fu_1212_output_buffer5_ce0),
    .output_buffer5_we0(grp_compute3_fu_1212_output_buffer5_we0),
    .output_buffer5_d0(grp_compute3_fu_1212_output_buffer5_d0),
    .output_buffer6_address0(grp_compute3_fu_1212_output_buffer6_address0),
    .output_buffer6_ce0(grp_compute3_fu_1212_output_buffer6_ce0),
    .output_buffer6_we0(grp_compute3_fu_1212_output_buffer6_we0),
    .output_buffer6_d0(grp_compute3_fu_1212_output_buffer6_d0),
    .output_buffer7_address0(grp_compute3_fu_1212_output_buffer7_address0),
    .output_buffer7_ce0(grp_compute3_fu_1212_output_buffer7_ce0),
    .output_buffer7_we0(grp_compute3_fu_1212_output_buffer7_we0),
    .output_buffer7_d0(grp_compute3_fu_1212_output_buffer7_d0),
    .output_buffer8_address0(grp_compute3_fu_1212_output_buffer8_address0),
    .output_buffer8_ce0(grp_compute3_fu_1212_output_buffer8_ce0),
    .output_buffer8_we0(grp_compute3_fu_1212_output_buffer8_we0),
    .output_buffer8_d0(grp_compute3_fu_1212_output_buffer8_d0),
    .output_buffer9_address0(grp_compute3_fu_1212_output_buffer9_address0),
    .output_buffer9_ce0(grp_compute3_fu_1212_output_buffer9_ce0),
    .output_buffer9_we0(grp_compute3_fu_1212_output_buffer9_we0),
    .output_buffer9_d0(grp_compute3_fu_1212_output_buffer9_d0),
    .output_buffer10_address0(grp_compute3_fu_1212_output_buffer10_address0),
    .output_buffer10_ce0(grp_compute3_fu_1212_output_buffer10_ce0),
    .output_buffer10_we0(grp_compute3_fu_1212_output_buffer10_we0),
    .output_buffer10_d0(grp_compute3_fu_1212_output_buffer10_d0),
    .output_buffer11_address0(grp_compute3_fu_1212_output_buffer11_address0),
    .output_buffer11_ce0(grp_compute3_fu_1212_output_buffer11_ce0),
    .output_buffer11_we0(grp_compute3_fu_1212_output_buffer11_we0),
    .output_buffer11_d0(grp_compute3_fu_1212_output_buffer11_d0),
    .output_buffer12_address0(grp_compute3_fu_1212_output_buffer12_address0),
    .output_buffer12_ce0(grp_compute3_fu_1212_output_buffer12_ce0),
    .output_buffer12_we0(grp_compute3_fu_1212_output_buffer12_we0),
    .output_buffer12_d0(grp_compute3_fu_1212_output_buffer12_d0),
    .output_buffer13_address0(grp_compute3_fu_1212_output_buffer13_address0),
    .output_buffer13_ce0(grp_compute3_fu_1212_output_buffer13_ce0),
    .output_buffer13_we0(grp_compute3_fu_1212_output_buffer13_we0),
    .output_buffer13_d0(grp_compute3_fu_1212_output_buffer13_d0),
    .output_buffer14_address0(grp_compute3_fu_1212_output_buffer14_address0),
    .output_buffer14_ce0(grp_compute3_fu_1212_output_buffer14_ce0),
    .output_buffer14_we0(grp_compute3_fu_1212_output_buffer14_we0),
    .output_buffer14_d0(grp_compute3_fu_1212_output_buffer14_d0),
    .output_buffer15_address0(grp_compute3_fu_1212_output_buffer15_address0),
    .output_buffer15_ce0(grp_compute3_fu_1212_output_buffer15_ce0),
    .output_buffer15_we0(grp_compute3_fu_1212_output_buffer15_we0),
    .output_buffer15_d0(grp_compute3_fu_1212_output_buffer15_d0),
    .output_buffer16_address0(grp_compute3_fu_1212_output_buffer16_address0),
    .output_buffer16_ce0(grp_compute3_fu_1212_output_buffer16_ce0),
    .output_buffer16_we0(grp_compute3_fu_1212_output_buffer16_we0),
    .output_buffer16_d0(grp_compute3_fu_1212_output_buffer16_d0),
    .output_buffer17_address0(grp_compute3_fu_1212_output_buffer17_address0),
    .output_buffer17_ce0(grp_compute3_fu_1212_output_buffer17_ce0),
    .output_buffer17_we0(grp_compute3_fu_1212_output_buffer17_we0),
    .output_buffer17_d0(grp_compute3_fu_1212_output_buffer17_d0),
    .output_buffer18_address0(grp_compute3_fu_1212_output_buffer18_address0),
    .output_buffer18_ce0(grp_compute3_fu_1212_output_buffer18_ce0),
    .output_buffer18_we0(grp_compute3_fu_1212_output_buffer18_we0),
    .output_buffer18_d0(grp_compute3_fu_1212_output_buffer18_d0),
    .output_buffer19_address0(grp_compute3_fu_1212_output_buffer19_address0),
    .output_buffer19_ce0(grp_compute3_fu_1212_output_buffer19_ce0),
    .output_buffer19_we0(grp_compute3_fu_1212_output_buffer19_we0),
    .output_buffer19_d0(grp_compute3_fu_1212_output_buffer19_d0),
    .output_buffer20_address0(grp_compute3_fu_1212_output_buffer20_address0),
    .output_buffer20_ce0(grp_compute3_fu_1212_output_buffer20_ce0),
    .output_buffer20_we0(grp_compute3_fu_1212_output_buffer20_we0),
    .output_buffer20_d0(grp_compute3_fu_1212_output_buffer20_d0),
    .output_buffer21_address0(grp_compute3_fu_1212_output_buffer21_address0),
    .output_buffer21_ce0(grp_compute3_fu_1212_output_buffer21_ce0),
    .output_buffer21_we0(grp_compute3_fu_1212_output_buffer21_we0),
    .output_buffer21_d0(grp_compute3_fu_1212_output_buffer21_d0),
    .output_buffer22_address0(grp_compute3_fu_1212_output_buffer22_address0),
    .output_buffer22_ce0(grp_compute3_fu_1212_output_buffer22_ce0),
    .output_buffer22_we0(grp_compute3_fu_1212_output_buffer22_we0),
    .output_buffer22_d0(grp_compute3_fu_1212_output_buffer22_d0),
    .output_buffer23_address0(grp_compute3_fu_1212_output_buffer23_address0),
    .output_buffer23_ce0(grp_compute3_fu_1212_output_buffer23_ce0),
    .output_buffer23_we0(grp_compute3_fu_1212_output_buffer23_we0),
    .output_buffer23_d0(grp_compute3_fu_1212_output_buffer23_d0),
    .output_buffer24_address0(grp_compute3_fu_1212_output_buffer24_address0),
    .output_buffer24_ce0(grp_compute3_fu_1212_output_buffer24_ce0),
    .output_buffer24_we0(grp_compute3_fu_1212_output_buffer24_we0),
    .output_buffer24_d0(grp_compute3_fu_1212_output_buffer24_d0),
    .output_buffer25_address0(grp_compute3_fu_1212_output_buffer25_address0),
    .output_buffer25_ce0(grp_compute3_fu_1212_output_buffer25_ce0),
    .output_buffer25_we0(grp_compute3_fu_1212_output_buffer25_we0),
    .output_buffer25_d0(grp_compute3_fu_1212_output_buffer25_d0),
    .output_buffer26_address0(grp_compute3_fu_1212_output_buffer26_address0),
    .output_buffer26_ce0(grp_compute3_fu_1212_output_buffer26_ce0),
    .output_buffer26_we0(grp_compute3_fu_1212_output_buffer26_we0),
    .output_buffer26_d0(grp_compute3_fu_1212_output_buffer26_d0),
    .output_buffer27_address0(grp_compute3_fu_1212_output_buffer27_address0),
    .output_buffer27_ce0(grp_compute3_fu_1212_output_buffer27_ce0),
    .output_buffer27_we0(grp_compute3_fu_1212_output_buffer27_we0),
    .output_buffer27_d0(grp_compute3_fu_1212_output_buffer27_d0),
    .output_buffer28_address0(grp_compute3_fu_1212_output_buffer28_address0),
    .output_buffer28_ce0(grp_compute3_fu_1212_output_buffer28_ce0),
    .output_buffer28_we0(grp_compute3_fu_1212_output_buffer28_we0),
    .output_buffer28_d0(grp_compute3_fu_1212_output_buffer28_d0),
    .output_buffer29_address0(grp_compute3_fu_1212_output_buffer29_address0),
    .output_buffer29_ce0(grp_compute3_fu_1212_output_buffer29_ce0),
    .output_buffer29_we0(grp_compute3_fu_1212_output_buffer29_we0),
    .output_buffer29_d0(grp_compute3_fu_1212_output_buffer29_d0),
    .output_buffer30_address0(grp_compute3_fu_1212_output_buffer30_address0),
    .output_buffer30_ce0(grp_compute3_fu_1212_output_buffer30_ce0),
    .output_buffer30_we0(grp_compute3_fu_1212_output_buffer30_we0),
    .output_buffer30_d0(grp_compute3_fu_1212_output_buffer30_d0),
    .output_buffer31_address0(grp_compute3_fu_1212_output_buffer31_address0),
    .output_buffer31_ce0(grp_compute3_fu_1212_output_buffer31_ce0),
    .output_buffer31_we0(grp_compute3_fu_1212_output_buffer31_we0),
    .output_buffer31_d0(grp_compute3_fu_1212_output_buffer31_d0),
    .output_buffer32_address0(grp_compute3_fu_1212_output_buffer32_address0),
    .output_buffer32_ce0(grp_compute3_fu_1212_output_buffer32_ce0),
    .output_buffer32_we0(grp_compute3_fu_1212_output_buffer32_we0),
    .output_buffer32_d0(grp_compute3_fu_1212_output_buffer32_d0),
    .weight_buffer_address0(grp_compute3_fu_1212_weight_buffer_address0),
    .weight_buffer_ce0(grp_compute3_fu_1212_weight_buffer_ce0),
    .weight_buffer_q0(grp_compute3_fu_1212_weight_buffer_q0),
    .weight_buffer1_address0(grp_compute3_fu_1212_weight_buffer1_address0),
    .weight_buffer1_ce0(grp_compute3_fu_1212_weight_buffer1_ce0),
    .weight_buffer1_q0(grp_compute3_fu_1212_weight_buffer1_q0),
    .weight_buffer33_address0(grp_compute3_fu_1212_weight_buffer33_address0),
    .weight_buffer33_ce0(grp_compute3_fu_1212_weight_buffer33_ce0),
    .weight_buffer33_q0(grp_compute3_fu_1212_weight_buffer33_q0),
    .weight_buffer332_address0(grp_compute3_fu_1212_weight_buffer332_address0),
    .weight_buffer332_ce0(grp_compute3_fu_1212_weight_buffer332_ce0),
    .weight_buffer332_q0(grp_compute3_fu_1212_weight_buffer332_q0),
    .weight_buffer34_address0(grp_compute3_fu_1212_weight_buffer34_address0),
    .weight_buffer34_ce0(grp_compute3_fu_1212_weight_buffer34_ce0),
    .weight_buffer34_q0(grp_compute3_fu_1212_weight_buffer34_q0),
    .weight_buffer343_address0(grp_compute3_fu_1212_weight_buffer343_address0),
    .weight_buffer343_ce0(grp_compute3_fu_1212_weight_buffer343_ce0),
    .weight_buffer343_q0(grp_compute3_fu_1212_weight_buffer343_q0),
    .weight_buffer35_address0(grp_compute3_fu_1212_weight_buffer35_address0),
    .weight_buffer35_ce0(grp_compute3_fu_1212_weight_buffer35_ce0),
    .weight_buffer35_q0(grp_compute3_fu_1212_weight_buffer35_q0),
    .weight_buffer354_address0(grp_compute3_fu_1212_weight_buffer354_address0),
    .weight_buffer354_ce0(grp_compute3_fu_1212_weight_buffer354_ce0),
    .weight_buffer354_q0(grp_compute3_fu_1212_weight_buffer354_q0),
    .weight_buffer36_address0(grp_compute3_fu_1212_weight_buffer36_address0),
    .weight_buffer36_ce0(grp_compute3_fu_1212_weight_buffer36_ce0),
    .weight_buffer36_q0(grp_compute3_fu_1212_weight_buffer36_q0),
    .weight_buffer365_address0(grp_compute3_fu_1212_weight_buffer365_address0),
    .weight_buffer365_ce0(grp_compute3_fu_1212_weight_buffer365_ce0),
    .weight_buffer365_q0(grp_compute3_fu_1212_weight_buffer365_q0),
    .weight_buffer37_address0(grp_compute3_fu_1212_weight_buffer37_address0),
    .weight_buffer37_ce0(grp_compute3_fu_1212_weight_buffer37_ce0),
    .weight_buffer37_q0(grp_compute3_fu_1212_weight_buffer37_q0),
    .weight_buffer376_address0(grp_compute3_fu_1212_weight_buffer376_address0),
    .weight_buffer376_ce0(grp_compute3_fu_1212_weight_buffer376_ce0),
    .weight_buffer376_q0(grp_compute3_fu_1212_weight_buffer376_q0),
    .weight_buffer38_address0(grp_compute3_fu_1212_weight_buffer38_address0),
    .weight_buffer38_ce0(grp_compute3_fu_1212_weight_buffer38_ce0),
    .weight_buffer38_q0(grp_compute3_fu_1212_weight_buffer38_q0),
    .weight_buffer387_address0(grp_compute3_fu_1212_weight_buffer387_address0),
    .weight_buffer387_ce0(grp_compute3_fu_1212_weight_buffer387_ce0),
    .weight_buffer387_q0(grp_compute3_fu_1212_weight_buffer387_q0),
    .weight_buffer39_address0(grp_compute3_fu_1212_weight_buffer39_address0),
    .weight_buffer39_ce0(grp_compute3_fu_1212_weight_buffer39_ce0),
    .weight_buffer39_q0(grp_compute3_fu_1212_weight_buffer39_q0),
    .weight_buffer398_address0(grp_compute3_fu_1212_weight_buffer398_address0),
    .weight_buffer398_ce0(grp_compute3_fu_1212_weight_buffer398_ce0),
    .weight_buffer398_q0(grp_compute3_fu_1212_weight_buffer398_q0),
    .weight_buffer40_address0(grp_compute3_fu_1212_weight_buffer40_address0),
    .weight_buffer40_ce0(grp_compute3_fu_1212_weight_buffer40_ce0),
    .weight_buffer40_q0(grp_compute3_fu_1212_weight_buffer40_q0),
    .weight_buffer409_address0(grp_compute3_fu_1212_weight_buffer409_address0),
    .weight_buffer409_ce0(grp_compute3_fu_1212_weight_buffer409_ce0),
    .weight_buffer409_q0(grp_compute3_fu_1212_weight_buffer409_q0),
    .weight_buffer41_address0(grp_compute3_fu_1212_weight_buffer41_address0),
    .weight_buffer41_ce0(grp_compute3_fu_1212_weight_buffer41_ce0),
    .weight_buffer41_q0(grp_compute3_fu_1212_weight_buffer41_q0),
    .weight_buffer4110_address0(grp_compute3_fu_1212_weight_buffer4110_address0),
    .weight_buffer4110_ce0(grp_compute3_fu_1212_weight_buffer4110_ce0),
    .weight_buffer4110_q0(grp_compute3_fu_1212_weight_buffer4110_q0),
    .weight_buffer42_address0(grp_compute3_fu_1212_weight_buffer42_address0),
    .weight_buffer42_ce0(grp_compute3_fu_1212_weight_buffer42_ce0),
    .weight_buffer42_q0(grp_compute3_fu_1212_weight_buffer42_q0),
    .weight_buffer4211_address0(grp_compute3_fu_1212_weight_buffer4211_address0),
    .weight_buffer4211_ce0(grp_compute3_fu_1212_weight_buffer4211_ce0),
    .weight_buffer4211_q0(grp_compute3_fu_1212_weight_buffer4211_q0),
    .weight_buffer43_address0(grp_compute3_fu_1212_weight_buffer43_address0),
    .weight_buffer43_ce0(grp_compute3_fu_1212_weight_buffer43_ce0),
    .weight_buffer43_q0(grp_compute3_fu_1212_weight_buffer43_q0),
    .weight_buffer4312_address0(grp_compute3_fu_1212_weight_buffer4312_address0),
    .weight_buffer4312_ce0(grp_compute3_fu_1212_weight_buffer4312_ce0),
    .weight_buffer4312_q0(grp_compute3_fu_1212_weight_buffer4312_q0),
    .weight_buffer44_address0(grp_compute3_fu_1212_weight_buffer44_address0),
    .weight_buffer44_ce0(grp_compute3_fu_1212_weight_buffer44_ce0),
    .weight_buffer44_q0(grp_compute3_fu_1212_weight_buffer44_q0),
    .weight_buffer4413_address0(grp_compute3_fu_1212_weight_buffer4413_address0),
    .weight_buffer4413_ce0(grp_compute3_fu_1212_weight_buffer4413_ce0),
    .weight_buffer4413_q0(grp_compute3_fu_1212_weight_buffer4413_q0),
    .weight_buffer45_address0(grp_compute3_fu_1212_weight_buffer45_address0),
    .weight_buffer45_ce0(grp_compute3_fu_1212_weight_buffer45_ce0),
    .weight_buffer45_q0(grp_compute3_fu_1212_weight_buffer45_q0),
    .weight_buffer4514_address0(grp_compute3_fu_1212_weight_buffer4514_address0),
    .weight_buffer4514_ce0(grp_compute3_fu_1212_weight_buffer4514_ce0),
    .weight_buffer4514_q0(grp_compute3_fu_1212_weight_buffer4514_q0),
    .weight_buffer46_address0(grp_compute3_fu_1212_weight_buffer46_address0),
    .weight_buffer46_ce0(grp_compute3_fu_1212_weight_buffer46_ce0),
    .weight_buffer46_q0(grp_compute3_fu_1212_weight_buffer46_q0),
    .weight_buffer4615_address0(grp_compute3_fu_1212_weight_buffer4615_address0),
    .weight_buffer4615_ce0(grp_compute3_fu_1212_weight_buffer4615_ce0),
    .weight_buffer4615_q0(grp_compute3_fu_1212_weight_buffer4615_q0),
    .weight_buffer47_address0(grp_compute3_fu_1212_weight_buffer47_address0),
    .weight_buffer47_ce0(grp_compute3_fu_1212_weight_buffer47_ce0),
    .weight_buffer47_q0(grp_compute3_fu_1212_weight_buffer47_q0),
    .weight_buffer4716_address0(grp_compute3_fu_1212_weight_buffer4716_address0),
    .weight_buffer4716_ce0(grp_compute3_fu_1212_weight_buffer4716_ce0),
    .weight_buffer4716_q0(grp_compute3_fu_1212_weight_buffer4716_q0),
    .weight_buffer48_address0(grp_compute3_fu_1212_weight_buffer48_address0),
    .weight_buffer48_ce0(grp_compute3_fu_1212_weight_buffer48_ce0),
    .weight_buffer48_q0(grp_compute3_fu_1212_weight_buffer48_q0),
    .weight_buffer4817_address0(grp_compute3_fu_1212_weight_buffer4817_address0),
    .weight_buffer4817_ce0(grp_compute3_fu_1212_weight_buffer4817_ce0),
    .weight_buffer4817_q0(grp_compute3_fu_1212_weight_buffer4817_q0),
    .weight_buffer49_address0(grp_compute3_fu_1212_weight_buffer49_address0),
    .weight_buffer49_ce0(grp_compute3_fu_1212_weight_buffer49_ce0),
    .weight_buffer49_q0(grp_compute3_fu_1212_weight_buffer49_q0),
    .weight_buffer4918_address0(grp_compute3_fu_1212_weight_buffer4918_address0),
    .weight_buffer4918_ce0(grp_compute3_fu_1212_weight_buffer4918_ce0),
    .weight_buffer4918_q0(grp_compute3_fu_1212_weight_buffer4918_q0),
    .weight_buffer50_address0(grp_compute3_fu_1212_weight_buffer50_address0),
    .weight_buffer50_ce0(grp_compute3_fu_1212_weight_buffer50_ce0),
    .weight_buffer50_q0(grp_compute3_fu_1212_weight_buffer50_q0),
    .weight_buffer5019_address0(grp_compute3_fu_1212_weight_buffer5019_address0),
    .weight_buffer5019_ce0(grp_compute3_fu_1212_weight_buffer5019_ce0),
    .weight_buffer5019_q0(grp_compute3_fu_1212_weight_buffer5019_q0),
    .weight_buffer51_address0(grp_compute3_fu_1212_weight_buffer51_address0),
    .weight_buffer51_ce0(grp_compute3_fu_1212_weight_buffer51_ce0),
    .weight_buffer51_q0(grp_compute3_fu_1212_weight_buffer51_q0),
    .weight_buffer5120_address0(grp_compute3_fu_1212_weight_buffer5120_address0),
    .weight_buffer5120_ce0(grp_compute3_fu_1212_weight_buffer5120_ce0),
    .weight_buffer5120_q0(grp_compute3_fu_1212_weight_buffer5120_q0),
    .weight_buffer52_address0(grp_compute3_fu_1212_weight_buffer52_address0),
    .weight_buffer52_ce0(grp_compute3_fu_1212_weight_buffer52_ce0),
    .weight_buffer52_q0(grp_compute3_fu_1212_weight_buffer52_q0),
    .weight_buffer5221_address0(grp_compute3_fu_1212_weight_buffer5221_address0),
    .weight_buffer5221_ce0(grp_compute3_fu_1212_weight_buffer5221_ce0),
    .weight_buffer5221_q0(grp_compute3_fu_1212_weight_buffer5221_q0),
    .weight_buffer53_address0(grp_compute3_fu_1212_weight_buffer53_address0),
    .weight_buffer53_ce0(grp_compute3_fu_1212_weight_buffer53_ce0),
    .weight_buffer53_q0(grp_compute3_fu_1212_weight_buffer53_q0),
    .weight_buffer5322_address0(grp_compute3_fu_1212_weight_buffer5322_address0),
    .weight_buffer5322_ce0(grp_compute3_fu_1212_weight_buffer5322_ce0),
    .weight_buffer5322_q0(grp_compute3_fu_1212_weight_buffer5322_q0),
    .weight_buffer54_address0(grp_compute3_fu_1212_weight_buffer54_address0),
    .weight_buffer54_ce0(grp_compute3_fu_1212_weight_buffer54_ce0),
    .weight_buffer54_q0(grp_compute3_fu_1212_weight_buffer54_q0),
    .weight_buffer5423_address0(grp_compute3_fu_1212_weight_buffer5423_address0),
    .weight_buffer5423_ce0(grp_compute3_fu_1212_weight_buffer5423_ce0),
    .weight_buffer5423_q0(grp_compute3_fu_1212_weight_buffer5423_q0),
    .weight_buffer55_address0(grp_compute3_fu_1212_weight_buffer55_address0),
    .weight_buffer55_ce0(grp_compute3_fu_1212_weight_buffer55_ce0),
    .weight_buffer55_q0(grp_compute3_fu_1212_weight_buffer55_q0),
    .weight_buffer5524_address0(grp_compute3_fu_1212_weight_buffer5524_address0),
    .weight_buffer5524_ce0(grp_compute3_fu_1212_weight_buffer5524_ce0),
    .weight_buffer5524_q0(grp_compute3_fu_1212_weight_buffer5524_q0),
    .weight_buffer56_address0(grp_compute3_fu_1212_weight_buffer56_address0),
    .weight_buffer56_ce0(grp_compute3_fu_1212_weight_buffer56_ce0),
    .weight_buffer56_q0(grp_compute3_fu_1212_weight_buffer56_q0),
    .weight_buffer5625_address0(grp_compute3_fu_1212_weight_buffer5625_address0),
    .weight_buffer5625_ce0(grp_compute3_fu_1212_weight_buffer5625_ce0),
    .weight_buffer5625_q0(grp_compute3_fu_1212_weight_buffer5625_q0),
    .weight_buffer57_address0(grp_compute3_fu_1212_weight_buffer57_address0),
    .weight_buffer57_ce0(grp_compute3_fu_1212_weight_buffer57_ce0),
    .weight_buffer57_q0(grp_compute3_fu_1212_weight_buffer57_q0),
    .weight_buffer5726_address0(grp_compute3_fu_1212_weight_buffer5726_address0),
    .weight_buffer5726_ce0(grp_compute3_fu_1212_weight_buffer5726_ce0),
    .weight_buffer5726_q0(grp_compute3_fu_1212_weight_buffer5726_q0),
    .weight_buffer58_address0(grp_compute3_fu_1212_weight_buffer58_address0),
    .weight_buffer58_ce0(grp_compute3_fu_1212_weight_buffer58_ce0),
    .weight_buffer58_q0(grp_compute3_fu_1212_weight_buffer58_q0),
    .weight_buffer5827_address0(grp_compute3_fu_1212_weight_buffer5827_address0),
    .weight_buffer5827_ce0(grp_compute3_fu_1212_weight_buffer5827_ce0),
    .weight_buffer5827_q0(grp_compute3_fu_1212_weight_buffer5827_q0),
    .weight_buffer59_address0(grp_compute3_fu_1212_weight_buffer59_address0),
    .weight_buffer59_ce0(grp_compute3_fu_1212_weight_buffer59_ce0),
    .weight_buffer59_q0(grp_compute3_fu_1212_weight_buffer59_q0),
    .weight_buffer5928_address0(grp_compute3_fu_1212_weight_buffer5928_address0),
    .weight_buffer5928_ce0(grp_compute3_fu_1212_weight_buffer5928_ce0),
    .weight_buffer5928_q0(grp_compute3_fu_1212_weight_buffer5928_q0),
    .weight_buffer60_address0(grp_compute3_fu_1212_weight_buffer60_address0),
    .weight_buffer60_ce0(grp_compute3_fu_1212_weight_buffer60_ce0),
    .weight_buffer60_q0(grp_compute3_fu_1212_weight_buffer60_q0),
    .weight_buffer6029_address0(grp_compute3_fu_1212_weight_buffer6029_address0),
    .weight_buffer6029_ce0(grp_compute3_fu_1212_weight_buffer6029_ce0),
    .weight_buffer6029_q0(grp_compute3_fu_1212_weight_buffer6029_q0),
    .weight_buffer61_address0(grp_compute3_fu_1212_weight_buffer61_address0),
    .weight_buffer61_ce0(grp_compute3_fu_1212_weight_buffer61_ce0),
    .weight_buffer61_q0(grp_compute3_fu_1212_weight_buffer61_q0),
    .weight_buffer6130_address0(grp_compute3_fu_1212_weight_buffer6130_address0),
    .weight_buffer6130_ce0(grp_compute3_fu_1212_weight_buffer6130_ce0),
    .weight_buffer6130_q0(grp_compute3_fu_1212_weight_buffer6130_q0),
    .weight_buffer62_address0(grp_compute3_fu_1212_weight_buffer62_address0),
    .weight_buffer62_ce0(grp_compute3_fu_1212_weight_buffer62_ce0),
    .weight_buffer62_q0(grp_compute3_fu_1212_weight_buffer62_q0),
    .weight_buffer6231_address0(grp_compute3_fu_1212_weight_buffer6231_address0),
    .weight_buffer6231_ce0(grp_compute3_fu_1212_weight_buffer6231_ce0),
    .weight_buffer6231_q0(grp_compute3_fu_1212_weight_buffer6231_q0),
    .weight_buffer63_address0(grp_compute3_fu_1212_weight_buffer63_address0),
    .weight_buffer63_ce0(grp_compute3_fu_1212_weight_buffer63_ce0),
    .weight_buffer63_q0(grp_compute3_fu_1212_weight_buffer63_q0),
    .weight_buffer6332_address0(grp_compute3_fu_1212_weight_buffer6332_address0),
    .weight_buffer6332_ce0(grp_compute3_fu_1212_weight_buffer6332_ce0),
    .weight_buffer6332_q0(grp_compute3_fu_1212_weight_buffer6332_q0),
    .p_read(grp_compute3_fu_1212_p_read),
    .Kernel_size(Kernel_size),
    .TMP_M(TMP_M),
    .TM_MIN(TM_MIN),
    .TR_MIN(empty_81_reg_2958),
    .TC_MIN(empty_reg_2953),
    .enable(grp_compute3_fu_1212_enable),
    .IsNL(IsNL),
    .reluenable(grp_compute3_fu_1212_reluenable),
    .InterSubBeta(InterSubBeta),
    .WeightAddInputSubInter(WeightAddInputSubInter),
    .InterSubOutput(InterSubOutput),
    .beta_buffer_address0(grp_compute3_fu_1212_beta_buffer_address0),
    .beta_buffer_ce0(grp_compute3_fu_1212_beta_buffer_ce0),
    .beta_buffer_q0(beta_buffer_q0)
);

YOLO2_FPGA_copy_input_weight grp_copy_input_weight_fu_1620(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_input_weight_fu_1620_ap_start),
    .ap_done(grp_copy_input_weight_fu_1620_ap_done),
    .ap_idle(grp_copy_input_weight_fu_1620_ap_idle),
    .ap_ready(grp_copy_input_weight_fu_1620_ap_ready),
    .m_axi_DATA_BUS_AWVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWVALID),
    .m_axi_DATA_BUS_AWREADY(1'b0),
    .m_axi_DATA_BUS_AWADDR(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWADDR),
    .m_axi_DATA_BUS_AWID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWID),
    .m_axi_DATA_BUS_AWLEN(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWLEN),
    .m_axi_DATA_BUS_AWSIZE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWSIZE),
    .m_axi_DATA_BUS_AWBURST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWBURST),
    .m_axi_DATA_BUS_AWLOCK(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWLOCK),
    .m_axi_DATA_BUS_AWCACHE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWCACHE),
    .m_axi_DATA_BUS_AWPROT(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWPROT),
    .m_axi_DATA_BUS_AWQOS(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWQOS),
    .m_axi_DATA_BUS_AWREGION(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWREGION),
    .m_axi_DATA_BUS_AWUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_AWUSER),
    .m_axi_DATA_BUS_WVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WVALID),
    .m_axi_DATA_BUS_WREADY(1'b0),
    .m_axi_DATA_BUS_WDATA(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WDATA),
    .m_axi_DATA_BUS_WSTRB(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WSTRB),
    .m_axi_DATA_BUS_WLAST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WLAST),
    .m_axi_DATA_BUS_WID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WID),
    .m_axi_DATA_BUS_WUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_WUSER),
    .m_axi_DATA_BUS_ARVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARVALID),
    .m_axi_DATA_BUS_ARREADY(m_axi_DATA_BUS_ARREADY),
    .m_axi_DATA_BUS_ARADDR(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARADDR),
    .m_axi_DATA_BUS_ARID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARID),
    .m_axi_DATA_BUS_ARLEN(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLEN),
    .m_axi_DATA_BUS_ARSIZE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARSIZE),
    .m_axi_DATA_BUS_ARBURST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARBURST),
    .m_axi_DATA_BUS_ARLOCK(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLOCK),
    .m_axi_DATA_BUS_ARCACHE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARCACHE),
    .m_axi_DATA_BUS_ARPROT(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARPROT),
    .m_axi_DATA_BUS_ARQOS(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARQOS),
    .m_axi_DATA_BUS_ARREGION(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARREGION),
    .m_axi_DATA_BUS_ARUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARUSER),
    .m_axi_DATA_BUS_RVALID(m_axi_DATA_BUS_RVALID),
    .m_axi_DATA_BUS_RREADY(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_RREADY),
    .m_axi_DATA_BUS_RDATA(m_axi_DATA_BUS_RDATA),
    .m_axi_DATA_BUS_RLAST(m_axi_DATA_BUS_RLAST),
    .m_axi_DATA_BUS_RID(m_axi_DATA_BUS_RID),
    .m_axi_DATA_BUS_RUSER(m_axi_DATA_BUS_RUSER),
    .m_axi_DATA_BUS_RRESP(m_axi_DATA_BUS_RRESP),
    .m_axi_DATA_BUS_BVALID(1'b0),
    .m_axi_DATA_BUS_BREADY(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_BREADY),
    .m_axi_DATA_BUS_BRESP(2'd0),
    .m_axi_DATA_BUS_BID(1'd0),
    .m_axi_DATA_BUS_BUSER(1'd0),
    .m_axi_DATA_BUS2_AWVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWVALID),
    .m_axi_DATA_BUS2_AWREADY(1'b0),
    .m_axi_DATA_BUS2_AWADDR(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWADDR),
    .m_axi_DATA_BUS2_AWID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWID),
    .m_axi_DATA_BUS2_AWLEN(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWLEN),
    .m_axi_DATA_BUS2_AWSIZE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWSIZE),
    .m_axi_DATA_BUS2_AWBURST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWBURST),
    .m_axi_DATA_BUS2_AWLOCK(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWLOCK),
    .m_axi_DATA_BUS2_AWCACHE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWCACHE),
    .m_axi_DATA_BUS2_AWPROT(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWPROT),
    .m_axi_DATA_BUS2_AWQOS(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWQOS),
    .m_axi_DATA_BUS2_AWREGION(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWREGION),
    .m_axi_DATA_BUS2_AWUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_AWUSER),
    .m_axi_DATA_BUS2_WVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WVALID),
    .m_axi_DATA_BUS2_WREADY(1'b0),
    .m_axi_DATA_BUS2_WDATA(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WDATA),
    .m_axi_DATA_BUS2_WSTRB(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WSTRB),
    .m_axi_DATA_BUS2_WLAST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WLAST),
    .m_axi_DATA_BUS2_WID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WID),
    .m_axi_DATA_BUS2_WUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_WUSER),
    .m_axi_DATA_BUS2_ARVALID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARVALID),
    .m_axi_DATA_BUS2_ARREADY(m_axi_DATA_BUS2_ARREADY),
    .m_axi_DATA_BUS2_ARADDR(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARADDR),
    .m_axi_DATA_BUS2_ARID(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARID),
    .m_axi_DATA_BUS2_ARLEN(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLEN),
    .m_axi_DATA_BUS2_ARSIZE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARSIZE),
    .m_axi_DATA_BUS2_ARBURST(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARBURST),
    .m_axi_DATA_BUS2_ARLOCK(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLOCK),
    .m_axi_DATA_BUS2_ARCACHE(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARCACHE),
    .m_axi_DATA_BUS2_ARPROT(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARPROT),
    .m_axi_DATA_BUS2_ARQOS(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARQOS),
    .m_axi_DATA_BUS2_ARREGION(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARREGION),
    .m_axi_DATA_BUS2_ARUSER(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARUSER),
    .m_axi_DATA_BUS2_RVALID(m_axi_DATA_BUS2_RVALID),
    .m_axi_DATA_BUS2_RREADY(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_RREADY),
    .m_axi_DATA_BUS2_RDATA(m_axi_DATA_BUS2_RDATA),
    .m_axi_DATA_BUS2_RLAST(m_axi_DATA_BUS2_RLAST),
    .m_axi_DATA_BUS2_RID(m_axi_DATA_BUS2_RID),
    .m_axi_DATA_BUS2_RUSER(m_axi_DATA_BUS2_RUSER),
    .m_axi_DATA_BUS2_RRESP(m_axi_DATA_BUS2_RRESP),
    .m_axi_DATA_BUS2_BVALID(1'b0),
    .m_axi_DATA_BUS2_BREADY(grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_BREADY),
    .m_axi_DATA_BUS2_BRESP(2'd0),
    .m_axi_DATA_BUS2_BID(1'd0),
    .m_axi_DATA_BUS2_BUSER(1'd0),
    .input_r(Input_r),
    .Weight(Weight),
    .InFM_num(InFM_num),
    .Input_w(Input_w),
    .Input_h(Input_h),
    .Kernel_size(Kernel_size),
    .Kernel_stride(Kernel_stride),
    .r(TMP_R),
    .c(TMP_C),
    .m(TMP_M),
    .n(grp_copy_input_weight_fu_1620_n),
    .TM_MIN(empty_82_reg_2963),
    .TN(grp_copy_input_weight_fu_1620_TN),
    .TRow(TRow),
    .TCol(TCol),
    .Padding_offset(grp_copy_input_weight_fu_1620_Padding_offset),
    .input_buffer_address0(grp_copy_input_weight_fu_1620_input_buffer_address0),
    .input_buffer_ce0(grp_copy_input_weight_fu_1620_input_buffer_ce0),
    .input_buffer_we0(grp_copy_input_weight_fu_1620_input_buffer_we0),
    .input_buffer_d0(grp_copy_input_weight_fu_1620_input_buffer_d0),
    .input_buffer1_address0(grp_copy_input_weight_fu_1620_input_buffer1_address0),
    .input_buffer1_ce0(grp_copy_input_weight_fu_1620_input_buffer1_ce0),
    .input_buffer1_we0(grp_copy_input_weight_fu_1620_input_buffer1_we0),
    .input_buffer1_d0(grp_copy_input_weight_fu_1620_input_buffer1_d0),
    .weight_buffer_address0(grp_copy_input_weight_fu_1620_weight_buffer_address0),
    .weight_buffer_ce0(grp_copy_input_weight_fu_1620_weight_buffer_ce0),
    .weight_buffer_we0(grp_copy_input_weight_fu_1620_weight_buffer_we0),
    .weight_buffer_d0(grp_copy_input_weight_fu_1620_weight_buffer_d0),
    .weight_buffer1_address0(grp_copy_input_weight_fu_1620_weight_buffer1_address0),
    .weight_buffer1_ce0(grp_copy_input_weight_fu_1620_weight_buffer1_ce0),
    .weight_buffer1_we0(grp_copy_input_weight_fu_1620_weight_buffer1_we0),
    .weight_buffer1_d0(grp_copy_input_weight_fu_1620_weight_buffer1_d0),
    .weight_buffer2_address0(grp_copy_input_weight_fu_1620_weight_buffer2_address0),
    .weight_buffer2_ce0(grp_copy_input_weight_fu_1620_weight_buffer2_ce0),
    .weight_buffer2_we0(grp_copy_input_weight_fu_1620_weight_buffer2_we0),
    .weight_buffer2_d0(grp_copy_input_weight_fu_1620_weight_buffer2_d0),
    .weight_buffer22_address0(grp_copy_input_weight_fu_1620_weight_buffer22_address0),
    .weight_buffer22_ce0(grp_copy_input_weight_fu_1620_weight_buffer22_ce0),
    .weight_buffer22_we0(grp_copy_input_weight_fu_1620_weight_buffer22_we0),
    .weight_buffer22_d0(grp_copy_input_weight_fu_1620_weight_buffer22_d0),
    .weight_buffer3_address0(grp_copy_input_weight_fu_1620_weight_buffer3_address0),
    .weight_buffer3_ce0(grp_copy_input_weight_fu_1620_weight_buffer3_ce0),
    .weight_buffer3_we0(grp_copy_input_weight_fu_1620_weight_buffer3_we0),
    .weight_buffer3_d0(grp_copy_input_weight_fu_1620_weight_buffer3_d0),
    .weight_buffer33_address0(grp_copy_input_weight_fu_1620_weight_buffer33_address0),
    .weight_buffer33_ce0(grp_copy_input_weight_fu_1620_weight_buffer33_ce0),
    .weight_buffer33_we0(grp_copy_input_weight_fu_1620_weight_buffer33_we0),
    .weight_buffer33_d0(grp_copy_input_weight_fu_1620_weight_buffer33_d0),
    .weight_buffer4_address0(grp_copy_input_weight_fu_1620_weight_buffer4_address0),
    .weight_buffer4_ce0(grp_copy_input_weight_fu_1620_weight_buffer4_ce0),
    .weight_buffer4_we0(grp_copy_input_weight_fu_1620_weight_buffer4_we0),
    .weight_buffer4_d0(grp_copy_input_weight_fu_1620_weight_buffer4_d0),
    .weight_buffer44_address0(grp_copy_input_weight_fu_1620_weight_buffer44_address0),
    .weight_buffer44_ce0(grp_copy_input_weight_fu_1620_weight_buffer44_ce0),
    .weight_buffer44_we0(grp_copy_input_weight_fu_1620_weight_buffer44_we0),
    .weight_buffer44_d0(grp_copy_input_weight_fu_1620_weight_buffer44_d0),
    .weight_buffer5_address0(grp_copy_input_weight_fu_1620_weight_buffer5_address0),
    .weight_buffer5_ce0(grp_copy_input_weight_fu_1620_weight_buffer5_ce0),
    .weight_buffer5_we0(grp_copy_input_weight_fu_1620_weight_buffer5_we0),
    .weight_buffer5_d0(grp_copy_input_weight_fu_1620_weight_buffer5_d0),
    .weight_buffer55_address0(grp_copy_input_weight_fu_1620_weight_buffer55_address0),
    .weight_buffer55_ce0(grp_copy_input_weight_fu_1620_weight_buffer55_ce0),
    .weight_buffer55_we0(grp_copy_input_weight_fu_1620_weight_buffer55_we0),
    .weight_buffer55_d0(grp_copy_input_weight_fu_1620_weight_buffer55_d0),
    .weight_buffer6_address0(grp_copy_input_weight_fu_1620_weight_buffer6_address0),
    .weight_buffer6_ce0(grp_copy_input_weight_fu_1620_weight_buffer6_ce0),
    .weight_buffer6_we0(grp_copy_input_weight_fu_1620_weight_buffer6_we0),
    .weight_buffer6_d0(grp_copy_input_weight_fu_1620_weight_buffer6_d0),
    .weight_buffer66_address0(grp_copy_input_weight_fu_1620_weight_buffer66_address0),
    .weight_buffer66_ce0(grp_copy_input_weight_fu_1620_weight_buffer66_ce0),
    .weight_buffer66_we0(grp_copy_input_weight_fu_1620_weight_buffer66_we0),
    .weight_buffer66_d0(grp_copy_input_weight_fu_1620_weight_buffer66_d0),
    .weight_buffer7_address0(grp_copy_input_weight_fu_1620_weight_buffer7_address0),
    .weight_buffer7_ce0(grp_copy_input_weight_fu_1620_weight_buffer7_ce0),
    .weight_buffer7_we0(grp_copy_input_weight_fu_1620_weight_buffer7_we0),
    .weight_buffer7_d0(grp_copy_input_weight_fu_1620_weight_buffer7_d0),
    .weight_buffer77_address0(grp_copy_input_weight_fu_1620_weight_buffer77_address0),
    .weight_buffer77_ce0(grp_copy_input_weight_fu_1620_weight_buffer77_ce0),
    .weight_buffer77_we0(grp_copy_input_weight_fu_1620_weight_buffer77_we0),
    .weight_buffer77_d0(grp_copy_input_weight_fu_1620_weight_buffer77_d0),
    .weight_buffer8_address0(grp_copy_input_weight_fu_1620_weight_buffer8_address0),
    .weight_buffer8_ce0(grp_copy_input_weight_fu_1620_weight_buffer8_ce0),
    .weight_buffer8_we0(grp_copy_input_weight_fu_1620_weight_buffer8_we0),
    .weight_buffer8_d0(grp_copy_input_weight_fu_1620_weight_buffer8_d0),
    .weight_buffer88_address0(grp_copy_input_weight_fu_1620_weight_buffer88_address0),
    .weight_buffer88_ce0(grp_copy_input_weight_fu_1620_weight_buffer88_ce0),
    .weight_buffer88_we0(grp_copy_input_weight_fu_1620_weight_buffer88_we0),
    .weight_buffer88_d0(grp_copy_input_weight_fu_1620_weight_buffer88_d0),
    .weight_buffer9_address0(grp_copy_input_weight_fu_1620_weight_buffer9_address0),
    .weight_buffer9_ce0(grp_copy_input_weight_fu_1620_weight_buffer9_ce0),
    .weight_buffer9_we0(grp_copy_input_weight_fu_1620_weight_buffer9_we0),
    .weight_buffer9_d0(grp_copy_input_weight_fu_1620_weight_buffer9_d0),
    .weight_buffer99_address0(grp_copy_input_weight_fu_1620_weight_buffer99_address0),
    .weight_buffer99_ce0(grp_copy_input_weight_fu_1620_weight_buffer99_ce0),
    .weight_buffer99_we0(grp_copy_input_weight_fu_1620_weight_buffer99_we0),
    .weight_buffer99_d0(grp_copy_input_weight_fu_1620_weight_buffer99_d0),
    .weight_buffer10_address0(grp_copy_input_weight_fu_1620_weight_buffer10_address0),
    .weight_buffer10_ce0(grp_copy_input_weight_fu_1620_weight_buffer10_ce0),
    .weight_buffer10_we0(grp_copy_input_weight_fu_1620_weight_buffer10_we0),
    .weight_buffer10_d0(grp_copy_input_weight_fu_1620_weight_buffer10_d0),
    .weight_buffer1010_address0(grp_copy_input_weight_fu_1620_weight_buffer1010_address0),
    .weight_buffer1010_ce0(grp_copy_input_weight_fu_1620_weight_buffer1010_ce0),
    .weight_buffer1010_we0(grp_copy_input_weight_fu_1620_weight_buffer1010_we0),
    .weight_buffer1010_d0(grp_copy_input_weight_fu_1620_weight_buffer1010_d0),
    .weight_buffer11_address0(grp_copy_input_weight_fu_1620_weight_buffer11_address0),
    .weight_buffer11_ce0(grp_copy_input_weight_fu_1620_weight_buffer11_ce0),
    .weight_buffer11_we0(grp_copy_input_weight_fu_1620_weight_buffer11_we0),
    .weight_buffer11_d0(grp_copy_input_weight_fu_1620_weight_buffer11_d0),
    .weight_buffer1111_address0(grp_copy_input_weight_fu_1620_weight_buffer1111_address0),
    .weight_buffer1111_ce0(grp_copy_input_weight_fu_1620_weight_buffer1111_ce0),
    .weight_buffer1111_we0(grp_copy_input_weight_fu_1620_weight_buffer1111_we0),
    .weight_buffer1111_d0(grp_copy_input_weight_fu_1620_weight_buffer1111_d0),
    .weight_buffer12_address0(grp_copy_input_weight_fu_1620_weight_buffer12_address0),
    .weight_buffer12_ce0(grp_copy_input_weight_fu_1620_weight_buffer12_ce0),
    .weight_buffer12_we0(grp_copy_input_weight_fu_1620_weight_buffer12_we0),
    .weight_buffer12_d0(grp_copy_input_weight_fu_1620_weight_buffer12_d0),
    .weight_buffer1212_address0(grp_copy_input_weight_fu_1620_weight_buffer1212_address0),
    .weight_buffer1212_ce0(grp_copy_input_weight_fu_1620_weight_buffer1212_ce0),
    .weight_buffer1212_we0(grp_copy_input_weight_fu_1620_weight_buffer1212_we0),
    .weight_buffer1212_d0(grp_copy_input_weight_fu_1620_weight_buffer1212_d0),
    .weight_buffer13_address0(grp_copy_input_weight_fu_1620_weight_buffer13_address0),
    .weight_buffer13_ce0(grp_copy_input_weight_fu_1620_weight_buffer13_ce0),
    .weight_buffer13_we0(grp_copy_input_weight_fu_1620_weight_buffer13_we0),
    .weight_buffer13_d0(grp_copy_input_weight_fu_1620_weight_buffer13_d0),
    .weight_buffer1313_address0(grp_copy_input_weight_fu_1620_weight_buffer1313_address0),
    .weight_buffer1313_ce0(grp_copy_input_weight_fu_1620_weight_buffer1313_ce0),
    .weight_buffer1313_we0(grp_copy_input_weight_fu_1620_weight_buffer1313_we0),
    .weight_buffer1313_d0(grp_copy_input_weight_fu_1620_weight_buffer1313_d0),
    .weight_buffer14_address0(grp_copy_input_weight_fu_1620_weight_buffer14_address0),
    .weight_buffer14_ce0(grp_copy_input_weight_fu_1620_weight_buffer14_ce0),
    .weight_buffer14_we0(grp_copy_input_weight_fu_1620_weight_buffer14_we0),
    .weight_buffer14_d0(grp_copy_input_weight_fu_1620_weight_buffer14_d0),
    .weight_buffer1414_address0(grp_copy_input_weight_fu_1620_weight_buffer1414_address0),
    .weight_buffer1414_ce0(grp_copy_input_weight_fu_1620_weight_buffer1414_ce0),
    .weight_buffer1414_we0(grp_copy_input_weight_fu_1620_weight_buffer1414_we0),
    .weight_buffer1414_d0(grp_copy_input_weight_fu_1620_weight_buffer1414_d0),
    .weight_buffer15_address0(grp_copy_input_weight_fu_1620_weight_buffer15_address0),
    .weight_buffer15_ce0(grp_copy_input_weight_fu_1620_weight_buffer15_ce0),
    .weight_buffer15_we0(grp_copy_input_weight_fu_1620_weight_buffer15_we0),
    .weight_buffer15_d0(grp_copy_input_weight_fu_1620_weight_buffer15_d0),
    .weight_buffer1515_address0(grp_copy_input_weight_fu_1620_weight_buffer1515_address0),
    .weight_buffer1515_ce0(grp_copy_input_weight_fu_1620_weight_buffer1515_ce0),
    .weight_buffer1515_we0(grp_copy_input_weight_fu_1620_weight_buffer1515_we0),
    .weight_buffer1515_d0(grp_copy_input_weight_fu_1620_weight_buffer1515_d0),
    .weight_buffer16_address0(grp_copy_input_weight_fu_1620_weight_buffer16_address0),
    .weight_buffer16_ce0(grp_copy_input_weight_fu_1620_weight_buffer16_ce0),
    .weight_buffer16_we0(grp_copy_input_weight_fu_1620_weight_buffer16_we0),
    .weight_buffer16_d0(grp_copy_input_weight_fu_1620_weight_buffer16_d0),
    .weight_buffer1616_address0(grp_copy_input_weight_fu_1620_weight_buffer1616_address0),
    .weight_buffer1616_ce0(grp_copy_input_weight_fu_1620_weight_buffer1616_ce0),
    .weight_buffer1616_we0(grp_copy_input_weight_fu_1620_weight_buffer1616_we0),
    .weight_buffer1616_d0(grp_copy_input_weight_fu_1620_weight_buffer1616_d0),
    .weight_buffer17_address0(grp_copy_input_weight_fu_1620_weight_buffer17_address0),
    .weight_buffer17_ce0(grp_copy_input_weight_fu_1620_weight_buffer17_ce0),
    .weight_buffer17_we0(grp_copy_input_weight_fu_1620_weight_buffer17_we0),
    .weight_buffer17_d0(grp_copy_input_weight_fu_1620_weight_buffer17_d0),
    .weight_buffer1717_address0(grp_copy_input_weight_fu_1620_weight_buffer1717_address0),
    .weight_buffer1717_ce0(grp_copy_input_weight_fu_1620_weight_buffer1717_ce0),
    .weight_buffer1717_we0(grp_copy_input_weight_fu_1620_weight_buffer1717_we0),
    .weight_buffer1717_d0(grp_copy_input_weight_fu_1620_weight_buffer1717_d0),
    .weight_buffer18_address0(grp_copy_input_weight_fu_1620_weight_buffer18_address0),
    .weight_buffer18_ce0(grp_copy_input_weight_fu_1620_weight_buffer18_ce0),
    .weight_buffer18_we0(grp_copy_input_weight_fu_1620_weight_buffer18_we0),
    .weight_buffer18_d0(grp_copy_input_weight_fu_1620_weight_buffer18_d0),
    .weight_buffer1818_address0(grp_copy_input_weight_fu_1620_weight_buffer1818_address0),
    .weight_buffer1818_ce0(grp_copy_input_weight_fu_1620_weight_buffer1818_ce0),
    .weight_buffer1818_we0(grp_copy_input_weight_fu_1620_weight_buffer1818_we0),
    .weight_buffer1818_d0(grp_copy_input_weight_fu_1620_weight_buffer1818_d0),
    .weight_buffer19_address0(grp_copy_input_weight_fu_1620_weight_buffer19_address0),
    .weight_buffer19_ce0(grp_copy_input_weight_fu_1620_weight_buffer19_ce0),
    .weight_buffer19_we0(grp_copy_input_weight_fu_1620_weight_buffer19_we0),
    .weight_buffer19_d0(grp_copy_input_weight_fu_1620_weight_buffer19_d0),
    .weight_buffer1919_address0(grp_copy_input_weight_fu_1620_weight_buffer1919_address0),
    .weight_buffer1919_ce0(grp_copy_input_weight_fu_1620_weight_buffer1919_ce0),
    .weight_buffer1919_we0(grp_copy_input_weight_fu_1620_weight_buffer1919_we0),
    .weight_buffer1919_d0(grp_copy_input_weight_fu_1620_weight_buffer1919_d0),
    .weight_buffer20_address0(grp_copy_input_weight_fu_1620_weight_buffer20_address0),
    .weight_buffer20_ce0(grp_copy_input_weight_fu_1620_weight_buffer20_ce0),
    .weight_buffer20_we0(grp_copy_input_weight_fu_1620_weight_buffer20_we0),
    .weight_buffer20_d0(grp_copy_input_weight_fu_1620_weight_buffer20_d0),
    .weight_buffer2020_address0(grp_copy_input_weight_fu_1620_weight_buffer2020_address0),
    .weight_buffer2020_ce0(grp_copy_input_weight_fu_1620_weight_buffer2020_ce0),
    .weight_buffer2020_we0(grp_copy_input_weight_fu_1620_weight_buffer2020_we0),
    .weight_buffer2020_d0(grp_copy_input_weight_fu_1620_weight_buffer2020_d0),
    .weight_buffer21_address0(grp_copy_input_weight_fu_1620_weight_buffer21_address0),
    .weight_buffer21_ce0(grp_copy_input_weight_fu_1620_weight_buffer21_ce0),
    .weight_buffer21_we0(grp_copy_input_weight_fu_1620_weight_buffer21_we0),
    .weight_buffer21_d0(grp_copy_input_weight_fu_1620_weight_buffer21_d0),
    .weight_buffer2121_address0(grp_copy_input_weight_fu_1620_weight_buffer2121_address0),
    .weight_buffer2121_ce0(grp_copy_input_weight_fu_1620_weight_buffer2121_ce0),
    .weight_buffer2121_we0(grp_copy_input_weight_fu_1620_weight_buffer2121_we0),
    .weight_buffer2121_d0(grp_copy_input_weight_fu_1620_weight_buffer2121_d0),
    .weight_buffer2222_address0(grp_copy_input_weight_fu_1620_weight_buffer2222_address0),
    .weight_buffer2222_ce0(grp_copy_input_weight_fu_1620_weight_buffer2222_ce0),
    .weight_buffer2222_we0(grp_copy_input_weight_fu_1620_weight_buffer2222_we0),
    .weight_buffer2222_d0(grp_copy_input_weight_fu_1620_weight_buffer2222_d0),
    .weight_buffer2223_address0(grp_copy_input_weight_fu_1620_weight_buffer2223_address0),
    .weight_buffer2223_ce0(grp_copy_input_weight_fu_1620_weight_buffer2223_ce0),
    .weight_buffer2223_we0(grp_copy_input_weight_fu_1620_weight_buffer2223_we0),
    .weight_buffer2223_d0(grp_copy_input_weight_fu_1620_weight_buffer2223_d0),
    .weight_buffer23_address0(grp_copy_input_weight_fu_1620_weight_buffer23_address0),
    .weight_buffer23_ce0(grp_copy_input_weight_fu_1620_weight_buffer23_ce0),
    .weight_buffer23_we0(grp_copy_input_weight_fu_1620_weight_buffer23_we0),
    .weight_buffer23_d0(grp_copy_input_weight_fu_1620_weight_buffer23_d0),
    .weight_buffer2324_address0(grp_copy_input_weight_fu_1620_weight_buffer2324_address0),
    .weight_buffer2324_ce0(grp_copy_input_weight_fu_1620_weight_buffer2324_ce0),
    .weight_buffer2324_we0(grp_copy_input_weight_fu_1620_weight_buffer2324_we0),
    .weight_buffer2324_d0(grp_copy_input_weight_fu_1620_weight_buffer2324_d0),
    .weight_buffer24_address0(grp_copy_input_weight_fu_1620_weight_buffer24_address0),
    .weight_buffer24_ce0(grp_copy_input_weight_fu_1620_weight_buffer24_ce0),
    .weight_buffer24_we0(grp_copy_input_weight_fu_1620_weight_buffer24_we0),
    .weight_buffer24_d0(grp_copy_input_weight_fu_1620_weight_buffer24_d0),
    .weight_buffer2425_address0(grp_copy_input_weight_fu_1620_weight_buffer2425_address0),
    .weight_buffer2425_ce0(grp_copy_input_weight_fu_1620_weight_buffer2425_ce0),
    .weight_buffer2425_we0(grp_copy_input_weight_fu_1620_weight_buffer2425_we0),
    .weight_buffer2425_d0(grp_copy_input_weight_fu_1620_weight_buffer2425_d0),
    .weight_buffer25_address0(grp_copy_input_weight_fu_1620_weight_buffer25_address0),
    .weight_buffer25_ce0(grp_copy_input_weight_fu_1620_weight_buffer25_ce0),
    .weight_buffer25_we0(grp_copy_input_weight_fu_1620_weight_buffer25_we0),
    .weight_buffer25_d0(grp_copy_input_weight_fu_1620_weight_buffer25_d0),
    .weight_buffer2526_address0(grp_copy_input_weight_fu_1620_weight_buffer2526_address0),
    .weight_buffer2526_ce0(grp_copy_input_weight_fu_1620_weight_buffer2526_ce0),
    .weight_buffer2526_we0(grp_copy_input_weight_fu_1620_weight_buffer2526_we0),
    .weight_buffer2526_d0(grp_copy_input_weight_fu_1620_weight_buffer2526_d0),
    .weight_buffer26_address0(grp_copy_input_weight_fu_1620_weight_buffer26_address0),
    .weight_buffer26_ce0(grp_copy_input_weight_fu_1620_weight_buffer26_ce0),
    .weight_buffer26_we0(grp_copy_input_weight_fu_1620_weight_buffer26_we0),
    .weight_buffer26_d0(grp_copy_input_weight_fu_1620_weight_buffer26_d0),
    .weight_buffer2627_address0(grp_copy_input_weight_fu_1620_weight_buffer2627_address0),
    .weight_buffer2627_ce0(grp_copy_input_weight_fu_1620_weight_buffer2627_ce0),
    .weight_buffer2627_we0(grp_copy_input_weight_fu_1620_weight_buffer2627_we0),
    .weight_buffer2627_d0(grp_copy_input_weight_fu_1620_weight_buffer2627_d0),
    .weight_buffer27_address0(grp_copy_input_weight_fu_1620_weight_buffer27_address0),
    .weight_buffer27_ce0(grp_copy_input_weight_fu_1620_weight_buffer27_ce0),
    .weight_buffer27_we0(grp_copy_input_weight_fu_1620_weight_buffer27_we0),
    .weight_buffer27_d0(grp_copy_input_weight_fu_1620_weight_buffer27_d0),
    .weight_buffer2728_address0(grp_copy_input_weight_fu_1620_weight_buffer2728_address0),
    .weight_buffer2728_ce0(grp_copy_input_weight_fu_1620_weight_buffer2728_ce0),
    .weight_buffer2728_we0(grp_copy_input_weight_fu_1620_weight_buffer2728_we0),
    .weight_buffer2728_d0(grp_copy_input_weight_fu_1620_weight_buffer2728_d0),
    .weight_buffer28_address0(grp_copy_input_weight_fu_1620_weight_buffer28_address0),
    .weight_buffer28_ce0(grp_copy_input_weight_fu_1620_weight_buffer28_ce0),
    .weight_buffer28_we0(grp_copy_input_weight_fu_1620_weight_buffer28_we0),
    .weight_buffer28_d0(grp_copy_input_weight_fu_1620_weight_buffer28_d0),
    .weight_buffer2829_address0(grp_copy_input_weight_fu_1620_weight_buffer2829_address0),
    .weight_buffer2829_ce0(grp_copy_input_weight_fu_1620_weight_buffer2829_ce0),
    .weight_buffer2829_we0(grp_copy_input_weight_fu_1620_weight_buffer2829_we0),
    .weight_buffer2829_d0(grp_copy_input_weight_fu_1620_weight_buffer2829_d0),
    .weight_buffer29_address0(grp_copy_input_weight_fu_1620_weight_buffer29_address0),
    .weight_buffer29_ce0(grp_copy_input_weight_fu_1620_weight_buffer29_ce0),
    .weight_buffer29_we0(grp_copy_input_weight_fu_1620_weight_buffer29_we0),
    .weight_buffer29_d0(grp_copy_input_weight_fu_1620_weight_buffer29_d0),
    .weight_buffer2930_address0(grp_copy_input_weight_fu_1620_weight_buffer2930_address0),
    .weight_buffer2930_ce0(grp_copy_input_weight_fu_1620_weight_buffer2930_ce0),
    .weight_buffer2930_we0(grp_copy_input_weight_fu_1620_weight_buffer2930_we0),
    .weight_buffer2930_d0(grp_copy_input_weight_fu_1620_weight_buffer2930_d0),
    .weight_buffer30_address0(grp_copy_input_weight_fu_1620_weight_buffer30_address0),
    .weight_buffer30_ce0(grp_copy_input_weight_fu_1620_weight_buffer30_ce0),
    .weight_buffer30_we0(grp_copy_input_weight_fu_1620_weight_buffer30_we0),
    .weight_buffer30_d0(grp_copy_input_weight_fu_1620_weight_buffer30_d0),
    .weight_buffer3031_address0(grp_copy_input_weight_fu_1620_weight_buffer3031_address0),
    .weight_buffer3031_ce0(grp_copy_input_weight_fu_1620_weight_buffer3031_ce0),
    .weight_buffer3031_we0(grp_copy_input_weight_fu_1620_weight_buffer3031_we0),
    .weight_buffer3031_d0(grp_copy_input_weight_fu_1620_weight_buffer3031_d0),
    .weight_buffer31_address0(grp_copy_input_weight_fu_1620_weight_buffer31_address0),
    .weight_buffer31_ce0(grp_copy_input_weight_fu_1620_weight_buffer31_ce0),
    .weight_buffer31_we0(grp_copy_input_weight_fu_1620_weight_buffer31_we0),
    .weight_buffer31_d0(grp_copy_input_weight_fu_1620_weight_buffer31_d0),
    .weight_buffer3132_address0(grp_copy_input_weight_fu_1620_weight_buffer3132_address0),
    .weight_buffer3132_ce0(grp_copy_input_weight_fu_1620_weight_buffer3132_ce0),
    .weight_buffer3132_we0(grp_copy_input_weight_fu_1620_weight_buffer3132_we0),
    .weight_buffer3132_d0(grp_copy_input_weight_fu_1620_weight_buffer3132_d0),
    .weight_buffer32_address0(grp_copy_input_weight_fu_1620_weight_buffer32_address0),
    .weight_buffer32_ce0(grp_copy_input_weight_fu_1620_weight_buffer32_ce0),
    .weight_buffer32_we0(grp_copy_input_weight_fu_1620_weight_buffer32_we0),
    .weight_buffer32_d0(grp_copy_input_weight_fu_1620_weight_buffer32_d0),
    .weight_buffer3233_address0(grp_copy_input_weight_fu_1620_weight_buffer3233_address0),
    .weight_buffer3233_ce0(grp_copy_input_weight_fu_1620_weight_buffer3233_ce0),
    .weight_buffer3233_we0(grp_copy_input_weight_fu_1620_weight_buffer3233_we0),
    .weight_buffer3233_d0(grp_copy_input_weight_fu_1620_weight_buffer3233_d0),
    .p_read(grp_copy_input_weight_fu_1620_p_read),
    .enable(grp_copy_input_weight_fu_1620_enable),
    .weight_load_enable_offset(grp_copy_input_weight_fu_1620_weight_load_enable_offset),
    .IHxIW(IHxIW),
    .KxK(KxK),
    .ap_return(grp_copy_input_weight_fu_1620_ap_return)
);

YOLO2_FPGA_pool_yolo24 grp_pool_yolo24_fu_1874(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pool_yolo24_fu_1874_ap_start),
    .ap_done(grp_pool_yolo24_fu_1874_ap_done),
    .ap_idle(grp_pool_yolo24_fu_1874_ap_idle),
    .ap_ready(grp_pool_yolo24_fu_1874_ap_ready),
    .Input_r_address0(grp_pool_yolo24_fu_1874_Input_r_address0),
    .Input_r_ce0(grp_pool_yolo24_fu_1874_Input_r_ce0),
    .Input_r_q0(grp_pool_yolo24_fu_1874_Input_r_q0),
    .Input1_address0(grp_pool_yolo24_fu_1874_Input1_address0),
    .Input1_ce0(grp_pool_yolo24_fu_1874_Input1_ce0),
    .Input1_q0(grp_pool_yolo24_fu_1874_Input1_q0),
    .Output_r_address0(grp_pool_yolo24_fu_1874_Output_r_address0),
    .Output_r_ce0(grp_pool_yolo24_fu_1874_Output_r_ce0),
    .Output_r_we0(grp_pool_yolo24_fu_1874_Output_r_we0),
    .Output_r_d0(grp_pool_yolo24_fu_1874_Output_r_d0),
    .Output2_address0(grp_pool_yolo24_fu_1874_Output2_address0),
    .Output2_ce0(grp_pool_yolo24_fu_1874_Output2_ce0),
    .Output2_we0(grp_pool_yolo24_fu_1874_Output2_we0),
    .Output2_d0(grp_pool_yolo24_fu_1874_Output2_d0),
    .TR_MIN(TR_MIN),
    .TC_MIN(TC_MIN),
    .enable(process_flag)
);

YOLO2_FPGA_mul_31ns_34ns_65_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_31ns_34ns_65_5_1_U386(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1984_p0),
    .din1(grp_fu_1984_p1),
    .ce(grp_fu_1984_ce),
    .dout(grp_fu_1984_p2)
);

YOLO2_FPGA_mul_31ns_34ns_65_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_31ns_34ns_65_5_1_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2351_p0),
    .din1(grp_fu_2351_p1),
    .ce(grp_fu_2351_ce),
    .dout(grp_fu_2351_p2)
);

YOLO2_FPGA_mac_muladd_10s_6ns_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_6ns_10ns_10_4_1_U388(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln536_1_reg_3106),
    .din1(grp_fu_2759_p1),
    .din2(select_ln527_6_reg_3164),
    .ce(1'b1),
    .dout(grp_fu_2759_p3)
);

YOLO2_FPGA_mac_muladd_6ns_7ns_8ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
mac_muladd_6ns_7ns_8ns_12_4_1_U389(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2765_p0),
    .din1(grp_fu_2765_p1),
    .din2(grp_fu_2765_p2),
    .ce(1'b1),
    .dout(grp_fu_2765_p3)
);

YOLO2_FPGA_mac_muladd_10s_6ns_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_6ns_10ns_10_4_1_U390(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln536_reg_3306),
    .din1(grp_fu_2773_p1),
    .din2(select_ln527_1_reg_3364),
    .ce(1'b1),
    .dout(grp_fu_2773_p3)
);

YOLO2_FPGA_mac_muladd_6ns_7ns_8ns_12_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
mac_muladd_6ns_7ns_8ns_12_4_1_U391(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2779_p0),
    .din1(grp_fu_2779_p1),
    .din2(grp_fu_2779_p2),
    .ce(1'b1),
    .dout(grp_fu_2779_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state11)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter4_state27)) begin
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_0_preg <= phi_ln642_reg_1162;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_1_preg <= phi_ln642_1_reg_1187;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute3_fu_1212_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38))) begin
            grp_compute3_fu_1212_ap_start_reg <= 1'b1;
        end else if ((grp_compute3_fu_1212_ap_ready == 1'b1)) begin
            grp_compute3_fu_1212_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_input_weight_fu_1620_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2)))) begin
            grp_copy_input_weight_fu_1620_ap_start_reg <= 1'b1;
        end else if ((grp_copy_input_weight_fu_1620_ap_ready == 1'b1)) begin
            grp_copy_input_weight_fu_1620_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pool_yolo24_fu_1874_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)))) begin
            grp_pool_yolo24_fu_1874_ap_start_reg <= 1'b1;
        end else if ((grp_pool_yolo24_fu_1874_ap_ready == 1'b1)) begin
            grp_pool_yolo24_fu_1874_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        TMP_N_reg_1112 <= TMP_N_1_reg_3465;
    end else if (((icmp_ln572_fu_2700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        TMP_N_reg_1112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln526_2_fu_2366_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten119_reg_1035 <= add_ln526_2_fu_2360_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten119_reg_1035 <= 65'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_3_fu_1999_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten23_reg_969 <= select_ln527_11_fu_2015_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten23_reg_969 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_3_fu_1999_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten55_reg_958 <= add_ln526_3_fu_1993_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten55_reg_958 <= 65'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln526_2_reg_3237 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten63_reg_1057 <= select_ln528_2_fu_2418_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten63_reg_1057 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln526_2_fu_2366_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten87_reg_1046 <= select_ln527_10_fu_2382_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten87_reg_1046 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln526_3_reg_3037 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_980 <= select_ln528_3_fu_2051_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_980 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kx_1_reg_1013 <= kx_3_fu_2169_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kx_1_reg_1013 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        kx_reg_1090 <= kx_2_fu_2536_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kx_reg_1090 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ky_1_reg_1002 <= select_ln528_1_fu_2157_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ky_1_reg_1002 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ky_reg_1079 <= select_ln528_fu_2524_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ky_reg_1079 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        n_reg_1124 <= n_1_reg_3422;
    end else if (((icmp_ln572_fu_2700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        n_reg_1124 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln572_1_fu_2716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((icmp_ln572_fu_2700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)))) begin
        phi_ln642_1_reg_1187 <= TM_MIN;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state34) & (1'b0 == ap_block_state34_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done)) | ((1'd0 == and_ln523_1_reg_2993) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'd0 == and_ln523_reg_2997) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        phi_ln642_1_reg_1187 <= tmp_tx_min_load_reg_2978;
    end else if (((~(32'd1 == LayerType_read_read_fu_716_p2) & ~(32'd0 == LayerType_read_read_fu_716_p2) & ~(32'd2 == LayerType_read_read_fu_716_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((32'd0 == LayerType_read_read_fu_716_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (input_flag_read_read_fu_686_p2 == 1'd0)))) begin
        phi_ln642_1_reg_1187 <= p_read1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln572_1_fu_2716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((icmp_ln572_fu_2700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)))) begin
        phi_ln642_reg_1162 <= TMP_M;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state33) | ((1'b1 == ap_CS_fsm_state34) & (1'b0 == ap_block_state34_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done)) | ((1'd0 == and_ln523_1_reg_2993) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'd0 == and_ln523_reg_2997) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        phi_ln642_reg_1162 <= tmp_x_load_reg_2968;
    end else if (((~(32'd1 == LayerType_read_read_fu_716_p2) & ~(32'd0 == LayerType_read_read_fu_716_p2) & ~(32'd2 == LayerType_read_read_fu_716_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((32'd0 == LayerType_read_read_fu_716_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (input_flag_read_read_fu_686_p2 == 1'd0)))) begin
        phi_ln642_reg_1162 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'b0 == ap_block_state39_on_subcall_done))) begin
        if ((pingpong_reg_1135 == 1'd0)) begin
            pingpong_1_reg_1147 <= 1'd1;
        end else if ((pingpong_reg_1135 == 1'd1)) begin
            pingpong_1_reg_1147 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        pingpong_reg_1135 <= pingpong_1_reg_1147;
    end else if (((icmp_ln572_fu_2700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        pingpong_reg_1135 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_1_reg_1024 <= select_ln527_9_fu_2305_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x_1_reg_1024 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_reg_1101 <= select_ln527_4_fu_2672_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x_reg_1101 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_1_reg_991 <= select_ln526_7_reg_3101;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_1_reg_991 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        y_reg_1068 <= select_ln526_1_reg_3301;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        y_reg_1068 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state34) & (1'b0 == ap_block_state34_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done)) | ((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        NOP_0 <= grp_copy_input_weight_fu_1620_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        NOP_0_load_reg_2988 <= NOP_0;
        empty_81_reg_2958 <= empty_81_fu_1938_p1;
        empty_82_reg_2963 <= empty_82_fu_1942_p1;
        empty_reg_2953 <= empty_fu_1934_p1;
        tmp_tx_min_load_reg_2978 <= tmp_tx_min;
        tmp_x_load_reg_2968 <= tmp_x;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        TMP_N_1_reg_3465 <= TMP_N_1_fu_2742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39) & (1'b0 == ap_block_state39_on_subcall_done))) begin
        TMP_N_next0_0_1_fu_658 <= grp_copy_input_weight_fu_1620_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39) & (1'b0 == ap_block_state39_on_subcall_done))) begin
        TMP_N_next1_0_1_fu_654 <= grp_copy_input_weight_fu_1620_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_3_reg_3037_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln536_1_reg_3160 <= add_ln536_1_fu_2241_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln536_1_reg_3160_pp0_iter4_reg <= add_ln536_1_reg_3160;
        add_ln536_1_reg_3160_pp0_iter5_reg <= add_ln536_1_reg_3160_pp0_iter4_reg;
        add_ln536_1_reg_3160_pp0_iter6_reg <= add_ln536_1_reg_3160_pp0_iter5_reg;
        add_ln536_1_reg_3160_pp0_iter7_reg <= add_ln536_1_reg_3160_pp0_iter6_reg;
        add_ln536_1_reg_3160_pp0_iter8_reg <= add_ln536_1_reg_3160_pp0_iter7_reg;
        add_ln536_3_reg_3184_pp0_iter7_reg <= add_ln536_3_reg_3184;
        add_ln536_3_reg_3184_pp0_iter8_reg <= add_ln536_3_reg_3184_pp0_iter7_reg;
        and_ln526_5_reg_3071_pp0_iter2_reg <= and_ln526_5_reg_3071;
        and_ln526_5_reg_3071_pp0_iter3_reg <= and_ln526_5_reg_3071_pp0_iter2_reg;
        empty_84_reg_3090 <= empty_84_fu_2059_p1;
        empty_85_reg_3095 <= empty_85_fu_2063_p1;
        icmp_ln526_3_reg_3037_pp0_iter2_reg <= icmp_ln526_3_reg_3037_pp0_iter1_reg;
        icmp_ln526_3_reg_3037_pp0_iter3_reg <= icmp_ln526_3_reg_3037_pp0_iter2_reg;
        icmp_ln526_3_reg_3037_pp0_iter4_reg <= icmp_ln526_3_reg_3037_pp0_iter3_reg;
        icmp_ln526_3_reg_3037_pp0_iter5_reg <= icmp_ln526_3_reg_3037_pp0_iter4_reg;
        icmp_ln526_3_reg_3037_pp0_iter6_reg <= icmp_ln526_3_reg_3037_pp0_iter5_reg;
        icmp_ln526_3_reg_3037_pp0_iter7_reg <= icmp_ln526_3_reg_3037_pp0_iter6_reg;
        icmp_ln527_1_reg_3041_pp0_iter2_reg <= icmp_ln527_1_reg_3041_pp0_iter1_reg;
        icmp_ln527_1_reg_3041_pp0_iter3_reg <= icmp_ln527_1_reg_3041_pp0_iter2_reg;
        trunc_ln533_5_reg_3144_pp0_iter3_reg <= trunc_ln533_5_reg_3144;
        trunc_ln533_5_reg_3144_pp0_iter4_reg <= trunc_ln533_5_reg_3144_pp0_iter3_reg;
        xor_ln526_1_reg_3060_pp0_iter2_reg <= xor_ln526_1_reg_3060;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln536_2_reg_3389 <= grp_fu_2779_p3;
        add_ln536_reg_3384 <= grp_fu_2773_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln536_3_reg_3184 <= grp_fu_2759_p3;
        add_ln536_4_reg_3189 <= grp_fu_2765_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln536_reg_3384_pp1_iter7_reg <= add_ln536_reg_3384;
        add_ln536_reg_3384_pp1_iter8_reg <= add_ln536_reg_3384_pp1_iter7_reg;
        add_ln_reg_3360_pp1_iter4_reg <= add_ln_reg_3360;
        add_ln_reg_3360_pp1_iter5_reg <= add_ln_reg_3360_pp1_iter4_reg;
        add_ln_reg_3360_pp1_iter6_reg <= add_ln_reg_3360_pp1_iter5_reg;
        add_ln_reg_3360_pp1_iter7_reg <= add_ln_reg_3360_pp1_iter6_reg;
        add_ln_reg_3360_pp1_iter8_reg <= add_ln_reg_3360_pp1_iter7_reg;
        and_ln526_2_reg_3271_pp1_iter2_reg <= and_ln526_2_reg_3271;
        and_ln526_2_reg_3271_pp1_iter3_reg <= and_ln526_2_reg_3271_pp1_iter2_reg;
        empty_88_reg_3290 <= empty_88_fu_2426_p1;
        empty_89_reg_3295 <= empty_89_fu_2430_p1;
        icmp_ln526_2_reg_3237_pp1_iter2_reg <= icmp_ln526_2_reg_3237_pp1_iter1_reg;
        icmp_ln526_2_reg_3237_pp1_iter3_reg <= icmp_ln526_2_reg_3237_pp1_iter2_reg;
        icmp_ln526_2_reg_3237_pp1_iter4_reg <= icmp_ln526_2_reg_3237_pp1_iter3_reg;
        icmp_ln526_2_reg_3237_pp1_iter5_reg <= icmp_ln526_2_reg_3237_pp1_iter4_reg;
        icmp_ln526_2_reg_3237_pp1_iter6_reg <= icmp_ln526_2_reg_3237_pp1_iter5_reg;
        icmp_ln526_2_reg_3237_pp1_iter7_reg <= icmp_ln526_2_reg_3237_pp1_iter6_reg;
        icmp_ln527_reg_3241_pp1_iter2_reg <= icmp_ln527_reg_3241_pp1_iter1_reg;
        icmp_ln527_reg_3241_pp1_iter3_reg <= icmp_ln527_reg_3241_pp1_iter2_reg;
        trunc_ln533_2_reg_3344_pp1_iter3_reg <= trunc_ln533_2_reg_3344;
        trunc_ln533_2_reg_3344_pp1_iter4_reg <= trunc_ln533_2_reg_3344_pp1_iter3_reg;
        xor_ln526_reg_3260_pp1_iter2_reg <= xor_ln526_reg_3260;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_2_reg_3237_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln_reg_3360 <= add_ln_fu_2608_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((32'd0 == LayerType_read_read_fu_716_p2) & (1'b1 == ap_CS_fsm_state1) & (input_flag_read_read_fu_686_p2 == 1'd1))) begin
        add_reg_3001 <= add_fu_1960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2))) begin
        and_ln523_1_reg_2993 <= grp_fu_1912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2))) begin
        and_ln523_reg_2997 <= grp_fu_1912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln526_2_reg_3237 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln526_2_reg_3271 <= and_ln526_2_fu_2401_p2;
        icmp_ln528_reg_3266 <= icmp_ln528_fu_2395_p2;
        or_ln527_reg_3280 <= or_ln527_fu_2407_p2;
        xor_ln526_reg_3260 <= xor_ln526_fu_2390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_3_reg_3037 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln526_5_reg_3071 <= and_ln526_5_fu_2034_p2;
        icmp_ln528_1_reg_3066 <= icmp_ln528_1_fu_2028_p2;
        or_ln527_2_reg_3080 <= or_ln527_2_fu_2040_p2;
        xor_ln526_1_reg_3060 <= xor_ln526_1_fu_2023_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_2_reg_3237_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln527_1_reg_3327 <= and_ln527_1_fu_2490_p2;
        empty_90_reg_3311 <= empty_90_fu_2451_p1;
        empty_91_reg_3333 <= empty_91_fu_2520_p1;
        or_ln527_1_reg_3322 <= or_ln527_1_fu_2485_p2;
        select_ln526_2_reg_3316 <= select_ln526_2_fu_2455_p3;
        trunc_ln533_2_reg_3344 <= trunc_ln533_2_fu_2532_p1;
        trunc_ln536_reg_3306 <= trunc_ln536_fu_2447_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_3_reg_3037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln527_3_reg_3127 <= and_ln527_3_fu_2123_p2;
        empty_86_reg_3111 <= empty_86_fu_2084_p1;
        empty_87_reg_3133 <= empty_87_fu_2153_p1;
        or_ln527_3_reg_3122 <= or_ln527_3_fu_2118_p2;
        select_ln526_8_reg_3116 <= select_ln526_8_fu_2088_p3;
        trunc_ln533_5_reg_3144 <= trunc_ln533_5_fu_2165_p1;
        trunc_ln536_1_reg_3106 <= trunc_ln536_1_fu_2080_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln572_1_fu_2716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        cmp4_reg_3430 <= cmp4_fu_2721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln526_2_reg_3237 <= icmp_ln526_2_fu_2366_p2;
        icmp_ln526_2_reg_3237_pp1_iter1_reg <= icmp_ln526_2_reg_3237;
        icmp_ln527_reg_3241_pp1_iter1_reg <= icmp_ln527_reg_3241;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln526_3_reg_3037 <= icmp_ln526_3_fu_1999_p2;
        icmp_ln526_3_reg_3037_pp0_iter1_reg <= icmp_ln526_3_reg_3037;
        icmp_ln527_1_reg_3041_pp0_iter1_reg <= icmp_ln527_1_reg_3041;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_3_fu_1999_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln527_1_reg_3041 <= icmp_ln527_1_fu_2004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln526_2_fu_2366_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln527_reg_3241 <= icmp_ln527_fu_2371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pingpong_phi_fu_1139_p4 == 1'd1) & (icmp_ln572_1_fu_2716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        icmp_ln578_1_reg_3460 <= grp_fu_1930_p2;
        icmp_ln578_reg_3455 <= grp_fu_1924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_pingpong_phi_fu_1139_p4 == 1'd0) & (icmp_ln572_1_fu_2716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        icmp_ln585_1_reg_3450 <= grp_fu_1930_p2;
        icmp_ln585_reg_3445 <= grp_fu_1924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_2_reg_3237_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_buffer0_0_load_reg_3399 <= input_buffer0_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_3_reg_3037_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer1_0_load_reg_3199 <= input_buffer1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln526_1_reg_3027 <= grp_fu_1984_p2;
        zext_ln526_3_reg_3022[33 : 2] <= zext_ln526_3_fu_1990_p1[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        mul_ln526_reg_3227 <= grp_fu_2351_p2;
        zext_ln526_reg_3222[33 : 2] <= zext_ln526_fu_2357_p1[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        n_1_reg_3422 <= n_1_fu_2705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln526_1_reg_3301 <= select_ln526_1_fu_2440_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln526_7_reg_3101 <= select_ln526_7_fu_2073_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_2_reg_3237_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln527_1_reg_3364 <= select_ln527_1_fu_2654_p3;
        select_ln527_2_reg_3369 <= select_ln527_2_fu_2665_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln526_3_reg_3037_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln527_6_reg_3164 <= select_ln527_6_fu_2287_p3;
        select_ln527_7_reg_3169 <= select_ln527_7_fu_2298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == and_ln523_1_reg_2993))) begin
        tmp_5_reg_3007[33 : 2] <= tmp_5_fu_1969_p3[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == and_ln523_reg_2997))) begin
        tmp_reg_3207[33 : 2] <= tmp_fu_2336_p3[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd2 == LayerType_read_read_fu_716_p2)))) begin
        tmp_tx_min <= TM_MIN;
        tmp_x <= TMP_M;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_pp0_exit_iter4_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln526_3_fu_1999_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_condition_pp1_exit_iter4_state27 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter4_state27 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln526_2_fu_2366_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln526_3_reg_3037_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_y_1_phi_fu_995_p4 = select_ln526_7_reg_3101;
    end else begin
        ap_phi_mux_y_1_phi_fu_995_p4 = y_1_reg_991;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln526_2_reg_3237_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_y_phi_fu_1072_p4 = select_ln526_1_reg_3301;
    end else begin
        ap_phi_mux_y_phi_fu_1072_p4 = y_reg_1068;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return_0 = phi_ln642_reg_1162;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return_1 = phi_ln642_1_reg_1187;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        beta_buffer_ce0 = grp_compute3_fu_1212_beta_buffer_ce0;
    end else begin
        beta_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_enable = icmp_ln578_reg_3455;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_enable = icmp_ln585_reg_3445;
        end else begin
            grp_compute3_fu_1212_enable = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_enable = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_input_buffer1_q0 = input_buffer0_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_input_buffer1_q0 = input_buffer1_1_q0;
        end else begin
            grp_compute3_fu_1212_input_buffer1_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_input_buffer1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_input_buffer_q0 = input_buffer0_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_input_buffer_q0 = input_buffer1_0_q0;
        end else begin
            grp_compute3_fu_1212_input_buffer_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_input_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_p_read = TMP_N_next0_0_1_fu_658;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_p_read = TMP_N_next1_0_1_fu_654;
        end else begin
            grp_compute3_fu_1212_p_read = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_reluenable = icmp_ln578_1_reg_3460;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_reluenable = icmp_ln585_1_reg_3450;
        end else begin
            grp_compute3_fu_1212_reluenable = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_reluenable = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer1_q0 = weight_buffer0_0_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer1_q0 = weight_buffer1_0_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer1_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer332_q0 = weight_buffer0_1_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer332_q0 = weight_buffer1_1_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer332_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer332_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer33_q0 = weight_buffer0_1_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer33_q0 = weight_buffer1_1_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer33_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer33_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer343_q0 = weight_buffer0_2_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer343_q0 = weight_buffer1_2_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer343_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer343_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer34_q0 = weight_buffer0_2_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer34_q0 = weight_buffer1_2_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer34_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer34_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer354_q0 = weight_buffer0_3_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer354_q0 = weight_buffer1_3_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer354_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer354_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer35_q0 = weight_buffer0_3_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer35_q0 = weight_buffer1_3_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer35_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer35_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer365_q0 = weight_buffer0_4_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer365_q0 = weight_buffer1_4_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer365_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer365_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer36_q0 = weight_buffer0_4_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer36_q0 = weight_buffer1_4_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer36_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer36_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer376_q0 = weight_buffer0_5_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer376_q0 = weight_buffer1_5_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer376_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer376_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer37_q0 = weight_buffer0_5_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer37_q0 = weight_buffer1_5_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer37_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer37_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer387_q0 = weight_buffer0_6_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer387_q0 = weight_buffer1_6_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer387_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer387_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer38_q0 = weight_buffer0_6_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer38_q0 = weight_buffer1_6_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer38_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer38_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer398_q0 = weight_buffer0_7_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer398_q0 = weight_buffer1_7_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer398_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer398_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer39_q0 = weight_buffer0_7_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer39_q0 = weight_buffer1_7_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer39_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer39_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer409_q0 = weight_buffer0_8_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer409_q0 = weight_buffer1_8_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer409_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer409_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer40_q0 = weight_buffer0_8_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer40_q0 = weight_buffer1_8_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer40_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer40_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4110_q0 = weight_buffer0_9_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4110_q0 = weight_buffer1_9_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4110_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4110_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer41_q0 = weight_buffer0_9_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer41_q0 = weight_buffer1_9_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer41_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer41_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4211_q0 = weight_buffer0_10_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4211_q0 = weight_buffer1_10_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4211_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4211_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer42_q0 = weight_buffer0_10_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer42_q0 = weight_buffer1_10_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer42_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer42_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4312_q0 = weight_buffer0_11_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4312_q0 = weight_buffer1_11_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4312_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4312_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer43_q0 = weight_buffer0_11_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer43_q0 = weight_buffer1_11_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer43_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer43_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4413_q0 = weight_buffer0_12_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4413_q0 = weight_buffer1_12_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4413_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4413_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer44_q0 = weight_buffer0_12_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer44_q0 = weight_buffer1_12_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer44_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer44_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4514_q0 = weight_buffer0_13_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4514_q0 = weight_buffer1_13_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4514_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4514_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer45_q0 = weight_buffer0_13_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer45_q0 = weight_buffer1_13_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer45_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer45_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4615_q0 = weight_buffer0_14_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4615_q0 = weight_buffer1_14_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4615_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4615_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer46_q0 = weight_buffer0_14_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer46_q0 = weight_buffer1_14_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer46_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer46_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4716_q0 = weight_buffer0_15_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4716_q0 = weight_buffer1_15_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4716_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4716_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer47_q0 = weight_buffer0_15_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer47_q0 = weight_buffer1_15_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer47_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer47_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4817_q0 = weight_buffer0_16_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4817_q0 = weight_buffer1_16_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4817_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4817_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer48_q0 = weight_buffer0_16_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer48_q0 = weight_buffer1_16_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer48_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer48_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer4918_q0 = weight_buffer0_17_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer4918_q0 = weight_buffer1_17_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer4918_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer4918_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer49_q0 = weight_buffer0_17_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer49_q0 = weight_buffer1_17_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer49_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer49_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5019_q0 = weight_buffer0_18_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5019_q0 = weight_buffer1_18_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5019_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5019_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer50_q0 = weight_buffer0_18_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer50_q0 = weight_buffer1_18_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer50_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer50_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5120_q0 = weight_buffer0_19_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5120_q0 = weight_buffer1_19_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5120_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5120_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer51_q0 = weight_buffer0_19_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer51_q0 = weight_buffer1_19_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer51_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer51_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5221_q0 = weight_buffer0_20_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5221_q0 = weight_buffer1_20_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5221_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5221_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer52_q0 = weight_buffer0_20_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer52_q0 = weight_buffer1_20_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer52_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer52_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5322_q0 = weight_buffer0_21_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5322_q0 = weight_buffer1_21_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5322_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5322_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer53_q0 = weight_buffer0_21_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer53_q0 = weight_buffer1_21_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer53_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer53_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5423_q0 = weight_buffer0_22_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5423_q0 = weight_buffer1_22_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5423_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5423_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer54_q0 = weight_buffer0_22_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer54_q0 = weight_buffer1_22_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer54_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer54_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5524_q0 = weight_buffer0_23_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5524_q0 = weight_buffer1_23_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5524_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5524_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer55_q0 = weight_buffer0_23_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer55_q0 = weight_buffer1_23_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer55_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer55_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5625_q0 = weight_buffer0_24_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5625_q0 = weight_buffer1_24_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5625_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5625_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer56_q0 = weight_buffer0_24_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer56_q0 = weight_buffer1_24_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer56_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer56_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5726_q0 = weight_buffer0_25_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5726_q0 = weight_buffer1_25_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5726_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5726_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer57_q0 = weight_buffer0_25_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer57_q0 = weight_buffer1_25_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer57_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer57_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5827_q0 = weight_buffer0_26_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5827_q0 = weight_buffer1_26_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5827_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5827_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer58_q0 = weight_buffer0_26_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer58_q0 = weight_buffer1_26_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer58_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer58_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer5928_q0 = weight_buffer0_27_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer5928_q0 = weight_buffer1_27_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer5928_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer5928_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer59_q0 = weight_buffer0_27_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer59_q0 = weight_buffer1_27_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer59_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer59_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer6029_q0 = weight_buffer0_28_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer6029_q0 = weight_buffer1_28_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer6029_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer6029_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer60_q0 = weight_buffer0_28_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer60_q0 = weight_buffer1_28_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer60_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer60_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer6130_q0 = weight_buffer0_29_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer6130_q0 = weight_buffer1_29_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer6130_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer6130_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer61_q0 = weight_buffer0_29_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer61_q0 = weight_buffer1_29_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer61_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer61_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer6231_q0 = weight_buffer0_30_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer6231_q0 = weight_buffer1_30_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer6231_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer6231_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer62_q0 = weight_buffer0_30_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer62_q0 = weight_buffer1_30_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer62_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer62_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer6332_q0 = weight_buffer0_31_1_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer6332_q0 = weight_buffer1_31_1_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer6332_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer6332_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer63_q0 = weight_buffer0_31_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer63_q0 = weight_buffer1_31_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer63_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer63_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            grp_compute3_fu_1212_weight_buffer_q0 = weight_buffer0_0_0_q0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            grp_compute3_fu_1212_weight_buffer_q0 = weight_buffer1_0_0_q0;
        end else begin
            grp_compute3_fu_1212_weight_buffer_q0 = 'bx;
        end
    end else begin
        grp_compute3_fu_1212_weight_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_copy_input_weight_fu_1620_Padding_offset = Padding;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_copy_input_weight_fu_1620_Padding_offset = 1'd0;
    end else begin
        grp_copy_input_weight_fu_1620_Padding_offset = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_copy_input_weight_fu_1620_TN = TN;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_copy_input_weight_fu_1620_TN = TM;
    end else begin
        grp_copy_input_weight_fu_1620_TN = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_copy_input_weight_fu_1620_enable = cmp4_reg_3430;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_copy_input_weight_fu_1620_enable = input_flag;
    end else begin
        grp_copy_input_weight_fu_1620_enable = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_copy_input_weight_fu_1620_n = TMP_N_reg_1112;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_copy_input_weight_fu_1620_n = TMP_M;
    end else begin
        grp_copy_input_weight_fu_1620_n = 'bx;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        grp_copy_input_weight_fu_1620_p_read = TMP_N_next1_0_1_fu_654;
    end else if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        grp_copy_input_weight_fu_1620_p_read = TMP_N_next0_0_1_fu_658;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_copy_input_weight_fu_1620_p_read = NOP_0_load_reg_2988;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_copy_input_weight_fu_1620_p_read = NOP_0;
    end else begin
        grp_copy_input_weight_fu_1620_p_read = 'bx;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_copy_input_weight_fu_1620_weight_load_enable_offset = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_copy_input_weight_fu_1620_weight_load_enable_offset = 1'd0;
    end else begin
        grp_copy_input_weight_fu_1620_weight_load_enable_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | ((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_1984_ce = 1'b1;
    end else begin
        grp_fu_1984_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state22) | ((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_fu_2351_ce = 1'b1;
    end else begin
        grp_fu_2351_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_pool_yolo24_fu_1874_Input1_q0 = input_buffer0_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_pool_yolo24_fu_1874_Input1_q0 = input_buffer1_1_q0;
    end else begin
        grp_pool_yolo24_fu_1874_Input1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_pool_yolo24_fu_1874_Input_r_q0 = input_buffer0_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_pool_yolo24_fu_1874_Input_r_q0 = input_buffer1_0_q0;
    end else begin
        grp_pool_yolo24_fu_1874_Input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        input_buffer0_0_address0 = zext_ln536_3_fu_2689_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        input_buffer0_0_address0 = grp_pool_yolo24_fu_1874_Input_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_0_address0 = grp_copy_input_weight_fu_1620_input_buffer_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer0_0_address0 = grp_compute3_fu_1212_input_buffer_address0;
    end else begin
        input_buffer0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        input_buffer0_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        input_buffer0_0_ce0 = grp_pool_yolo24_fu_1874_Input_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_0_ce0 = grp_copy_input_weight_fu_1620_input_buffer_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer0_0_ce0 = grp_compute3_fu_1212_input_buffer_ce0;
    end else begin
        input_buffer0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_0_we0 = grp_copy_input_weight_fu_1620_input_buffer_we0;
    end else begin
        input_buffer0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        input_buffer0_1_address0 = grp_pool_yolo24_fu_1874_Input1_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_1_address0 = grp_copy_input_weight_fu_1620_input_buffer1_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer0_1_address0 = grp_compute3_fu_1212_input_buffer1_address0;
    end else begin
        input_buffer0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        input_buffer0_1_ce0 = grp_pool_yolo24_fu_1874_Input1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_1_ce0 = grp_copy_input_weight_fu_1620_input_buffer1_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer0_1_ce0 = grp_compute3_fu_1212_input_buffer1_ce0;
    end else begin
        input_buffer0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer0_1_we0 = grp_copy_input_weight_fu_1620_input_buffer1_we0;
    end else begin
        input_buffer0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        input_buffer1_0_address0 = zext_ln536_7_fu_2322_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        input_buffer1_0_address0 = grp_pool_yolo24_fu_1874_Input_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_0_address0 = grp_copy_input_weight_fu_1620_input_buffer_address0;
    end else if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer1_0_address0 = grp_compute3_fu_1212_input_buffer_address0;
    end else begin
        input_buffer1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer1_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        input_buffer1_0_ce0 = grp_pool_yolo24_fu_1874_Input_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_0_ce0 = grp_copy_input_weight_fu_1620_input_buffer_ce0;
    end else if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer1_0_ce0 = grp_compute3_fu_1212_input_buffer_ce0;
    end else begin
        input_buffer1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_0_we0 = grp_copy_input_weight_fu_1620_input_buffer_we0;
    end else begin
        input_buffer1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        input_buffer1_1_address0 = grp_pool_yolo24_fu_1874_Input1_address0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_1_address0 = grp_copy_input_weight_fu_1620_input_buffer1_address0;
    end else if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer1_1_address0 = grp_compute3_fu_1212_input_buffer1_address0;
    end else begin
        input_buffer1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        input_buffer1_1_ce0 = grp_pool_yolo24_fu_1874_Input1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_1_ce0 = grp_copy_input_weight_fu_1620_input_buffer1_ce0;
    end else if (((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        input_buffer1_1_ce0 = grp_compute3_fu_1212_input_buffer1_ce0;
    end else begin
        input_buffer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)))) begin
        input_buffer1_1_we0 = grp_copy_input_weight_fu_1620_input_buffer1_we0;
    end else begin
        input_buffer1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        m_axi_DATA_BUS2_ARVALID = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARVALID;
    end else begin
        m_axi_DATA_BUS2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        m_axi_DATA_BUS2_RREADY = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_RREADY;
    end else begin
        m_axi_DATA_BUS2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        m_axi_DATA_BUS_ARVALID = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARVALID;
    end else begin
        m_axi_DATA_BUS_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2)) | ((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        m_axi_DATA_BUS_RREADY = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_RREADY;
    end else begin
        m_axi_DATA_BUS_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer10_ce0 = grp_compute3_fu_1212_output_buffer11_ce0;
    end else begin
        output_buffer10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer10_we0 = grp_compute3_fu_1212_output_buffer11_we0;
    end else begin
        output_buffer10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer11_ce0 = grp_compute3_fu_1212_output_buffer12_ce0;
    end else begin
        output_buffer11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer11_we0 = grp_compute3_fu_1212_output_buffer12_we0;
    end else begin
        output_buffer11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer12_ce0 = grp_compute3_fu_1212_output_buffer13_ce0;
    end else begin
        output_buffer12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer12_we0 = grp_compute3_fu_1212_output_buffer13_we0;
    end else begin
        output_buffer12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer13_ce0 = grp_compute3_fu_1212_output_buffer14_ce0;
    end else begin
        output_buffer13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer13_we0 = grp_compute3_fu_1212_output_buffer14_we0;
    end else begin
        output_buffer13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer14_ce0 = grp_compute3_fu_1212_output_buffer15_ce0;
    end else begin
        output_buffer14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer14_we0 = grp_compute3_fu_1212_output_buffer15_we0;
    end else begin
        output_buffer14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer15_ce0 = grp_compute3_fu_1212_output_buffer16_ce0;
    end else begin
        output_buffer15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer15_we0 = grp_compute3_fu_1212_output_buffer16_we0;
    end else begin
        output_buffer15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer16_ce0 = grp_compute3_fu_1212_output_buffer17_ce0;
    end else begin
        output_buffer16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer16_we0 = grp_compute3_fu_1212_output_buffer17_we0;
    end else begin
        output_buffer16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer17_ce0 = grp_compute3_fu_1212_output_buffer18_ce0;
    end else begin
        output_buffer17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer17_we0 = grp_compute3_fu_1212_output_buffer18_we0;
    end else begin
        output_buffer17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer18_ce0 = grp_compute3_fu_1212_output_buffer19_ce0;
    end else begin
        output_buffer18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer18_we0 = grp_compute3_fu_1212_output_buffer19_we0;
    end else begin
        output_buffer18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer19_ce0 = grp_compute3_fu_1212_output_buffer20_ce0;
    end else begin
        output_buffer19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer19_we0 = grp_compute3_fu_1212_output_buffer20_we0;
    end else begin
        output_buffer19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer1_address0 = zext_ln536_fu_2693_p1;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer1_address0 = zext_ln536_4_fu_2326_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer1_address0 = grp_pool_yolo24_fu_1874_Output2_address0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer1_address0 = grp_compute3_fu_1212_output_buffer2_address0;
    end else begin
        output_buffer1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer1_ce0 = grp_pool_yolo24_fu_1874_Output2_ce0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer1_ce0 = grp_compute3_fu_1212_output_buffer2_ce0;
    end else begin
        output_buffer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer1_d0 = input_buffer0_0_load_reg_3399;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer1_d0 = input_buffer1_0_load_reg_3199;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer1_d0 = grp_pool_yolo24_fu_1874_Output2_d0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer1_d0 = grp_compute3_fu_1212_output_buffer2_d0;
    end else begin
        output_buffer1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd1 == add_ln_reg_3360_pp1_iter8_reg) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((2'd1 == add_ln536_1_reg_3160_pp0_iter8_reg) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer1_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer1_we0 = grp_pool_yolo24_fu_1874_Output2_we0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer1_we0 = grp_compute3_fu_1212_output_buffer2_we0;
    end else begin
        output_buffer1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer20_ce0 = grp_compute3_fu_1212_output_buffer21_ce0;
    end else begin
        output_buffer20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer20_we0 = grp_compute3_fu_1212_output_buffer21_we0;
    end else begin
        output_buffer20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer21_ce0 = grp_compute3_fu_1212_output_buffer22_ce0;
    end else begin
        output_buffer21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer21_we0 = grp_compute3_fu_1212_output_buffer22_we0;
    end else begin
        output_buffer21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer22_ce0 = grp_compute3_fu_1212_output_buffer23_ce0;
    end else begin
        output_buffer22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer22_we0 = grp_compute3_fu_1212_output_buffer23_we0;
    end else begin
        output_buffer22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer23_ce0 = grp_compute3_fu_1212_output_buffer24_ce0;
    end else begin
        output_buffer23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer23_we0 = grp_compute3_fu_1212_output_buffer24_we0;
    end else begin
        output_buffer23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer24_ce0 = grp_compute3_fu_1212_output_buffer25_ce0;
    end else begin
        output_buffer24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer24_we0 = grp_compute3_fu_1212_output_buffer25_we0;
    end else begin
        output_buffer24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer25_ce0 = grp_compute3_fu_1212_output_buffer26_ce0;
    end else begin
        output_buffer25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer25_we0 = grp_compute3_fu_1212_output_buffer26_we0;
    end else begin
        output_buffer25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer26_ce0 = grp_compute3_fu_1212_output_buffer27_ce0;
    end else begin
        output_buffer26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer26_we0 = grp_compute3_fu_1212_output_buffer27_we0;
    end else begin
        output_buffer26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer27_ce0 = grp_compute3_fu_1212_output_buffer28_ce0;
    end else begin
        output_buffer27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer27_we0 = grp_compute3_fu_1212_output_buffer28_we0;
    end else begin
        output_buffer27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer28_ce0 = grp_compute3_fu_1212_output_buffer29_ce0;
    end else begin
        output_buffer28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer28_we0 = grp_compute3_fu_1212_output_buffer29_we0;
    end else begin
        output_buffer28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer29_ce0 = grp_compute3_fu_1212_output_buffer30_ce0;
    end else begin
        output_buffer29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer29_we0 = grp_compute3_fu_1212_output_buffer30_we0;
    end else begin
        output_buffer29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer2_address0 = zext_ln536_fu_2693_p1;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer2_address0 = zext_ln536_4_fu_2326_p1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer2_address0 = grp_compute3_fu_1212_output_buffer3_address0;
    end else begin
        output_buffer2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer2_ce0 = 1'b1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer2_ce0 = grp_compute3_fu_1212_output_buffer3_ce0;
    end else begin
        output_buffer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer2_d0 = input_buffer0_0_load_reg_3399;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer2_d0 = input_buffer1_0_load_reg_3199;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer2_d0 = grp_compute3_fu_1212_output_buffer3_d0;
    end else begin
        output_buffer2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd2 == add_ln_reg_3360_pp1_iter8_reg) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((2'd2 == add_ln536_1_reg_3160_pp0_iter8_reg) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer2_we0 = 1'b1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer2_we0 = grp_compute3_fu_1212_output_buffer3_we0;
    end else begin
        output_buffer2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer30_ce0 = grp_compute3_fu_1212_output_buffer31_ce0;
    end else begin
        output_buffer30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer30_we0 = grp_compute3_fu_1212_output_buffer31_we0;
    end else begin
        output_buffer30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer31_ce0 = grp_compute3_fu_1212_output_buffer32_ce0;
    end else begin
        output_buffer31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer31_we0 = grp_compute3_fu_1212_output_buffer32_we0;
    end else begin
        output_buffer31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer3_address0 = zext_ln536_fu_2693_p1;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer3_address0 = zext_ln536_4_fu_2326_p1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer3_address0 = grp_compute3_fu_1212_output_buffer4_address0;
    end else begin
        output_buffer3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer3_ce0 = 1'b1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer3_ce0 = grp_compute3_fu_1212_output_buffer4_ce0;
    end else begin
        output_buffer3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer3_d0 = input_buffer0_0_load_reg_3399;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer3_d0 = input_buffer1_0_load_reg_3199;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer3_d0 = grp_compute3_fu_1212_output_buffer4_d0;
    end else begin
        output_buffer3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd3 == add_ln_reg_3360_pp1_iter8_reg) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((2'd3 == add_ln536_1_reg_3160_pp0_iter8_reg) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer3_we0 = 1'b1;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer3_we0 = grp_compute3_fu_1212_output_buffer4_we0;
    end else begin
        output_buffer3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer4_ce0 = grp_compute3_fu_1212_output_buffer5_ce0;
    end else begin
        output_buffer4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer4_we0 = grp_compute3_fu_1212_output_buffer5_we0;
    end else begin
        output_buffer4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer5_ce0 = grp_compute3_fu_1212_output_buffer6_ce0;
    end else begin
        output_buffer5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer5_we0 = grp_compute3_fu_1212_output_buffer6_we0;
    end else begin
        output_buffer5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer6_ce0 = grp_compute3_fu_1212_output_buffer7_ce0;
    end else begin
        output_buffer6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer6_we0 = grp_compute3_fu_1212_output_buffer7_we0;
    end else begin
        output_buffer6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer7_ce0 = grp_compute3_fu_1212_output_buffer8_ce0;
    end else begin
        output_buffer7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer7_we0 = grp_compute3_fu_1212_output_buffer8_we0;
    end else begin
        output_buffer7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer8_ce0 = grp_compute3_fu_1212_output_buffer9_ce0;
    end else begin
        output_buffer8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer8_we0 = grp_compute3_fu_1212_output_buffer9_we0;
    end else begin
        output_buffer8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer9_ce0 = grp_compute3_fu_1212_output_buffer10_ce0;
    end else begin
        output_buffer9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer9_we0 = grp_compute3_fu_1212_output_buffer10_we0;
    end else begin
        output_buffer9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer_address0 = zext_ln536_fu_2693_p1;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_address0 = zext_ln536_4_fu_2326_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer_address0 = grp_pool_yolo24_fu_1874_Output_r_address0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer_address0 = grp_compute3_fu_1212_output_buffer_address0;
    end else begin
        output_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer_ce0 = grp_pool_yolo24_fu_1874_Output_r_ce0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer_ce0 = grp_compute3_fu_1212_output_buffer_ce0;
    end else begin
        output_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_buffer_d0 = input_buffer0_0_load_reg_3399;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_d0 = input_buffer1_0_load_reg_3199;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer_d0 = grp_pool_yolo24_fu_1874_Output_r_d0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer_d0 = grp_compute3_fu_1212_output_buffer_d0;
    end else begin
        output_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((2'd0 == add_ln_reg_3360_pp1_iter8_reg) & (ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((2'd0 == add_ln536_1_reg_3160_pp0_iter8_reg) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        output_buffer_we0 = grp_pool_yolo24_fu_1874_Output_r_we0;
    end else if ((((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39)) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        output_buffer_we0 = grp_compute3_fu_1212_output_buffer_we0;
    end else begin
        output_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_0_0_address0 = grp_compute3_fu_1212_weight_buffer_address0;
    end else begin
        weight_buffer0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_0_0_ce0 = grp_compute3_fu_1212_weight_buffer_ce0;
    end else begin
        weight_buffer0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer_we0;
    end else begin
        weight_buffer0_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_0_1_address0 = grp_compute3_fu_1212_weight_buffer1_address0;
    end else begin
        weight_buffer0_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_0_1_ce0 = grp_compute3_fu_1212_weight_buffer1_ce0;
    end else begin
        weight_buffer0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_0_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1_we0;
    end else begin
        weight_buffer0_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer11_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_10_0_address0 = grp_compute3_fu_1212_weight_buffer42_address0;
    end else begin
        weight_buffer0_10_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer11_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_10_0_ce0 = grp_compute3_fu_1212_weight_buffer42_ce0;
    end else begin
        weight_buffer0_10_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer11_we0;
    end else begin
        weight_buffer0_10_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1111_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_10_1_address0 = grp_compute3_fu_1212_weight_buffer4211_address0;
    end else begin
        weight_buffer0_10_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1111_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_10_1_ce0 = grp_compute3_fu_1212_weight_buffer4211_ce0;
    end else begin
        weight_buffer0_10_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_10_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1111_we0;
    end else begin
        weight_buffer0_10_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer12_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_11_0_address0 = grp_compute3_fu_1212_weight_buffer43_address0;
    end else begin
        weight_buffer0_11_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer12_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_11_0_ce0 = grp_compute3_fu_1212_weight_buffer43_ce0;
    end else begin
        weight_buffer0_11_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer12_we0;
    end else begin
        weight_buffer0_11_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1212_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_11_1_address0 = grp_compute3_fu_1212_weight_buffer4312_address0;
    end else begin
        weight_buffer0_11_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1212_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_11_1_ce0 = grp_compute3_fu_1212_weight_buffer4312_ce0;
    end else begin
        weight_buffer0_11_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_11_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1212_we0;
    end else begin
        weight_buffer0_11_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer13_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_12_0_address0 = grp_compute3_fu_1212_weight_buffer44_address0;
    end else begin
        weight_buffer0_12_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer13_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_12_0_ce0 = grp_compute3_fu_1212_weight_buffer44_ce0;
    end else begin
        weight_buffer0_12_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer13_we0;
    end else begin
        weight_buffer0_12_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1313_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_12_1_address0 = grp_compute3_fu_1212_weight_buffer4413_address0;
    end else begin
        weight_buffer0_12_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1313_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_12_1_ce0 = grp_compute3_fu_1212_weight_buffer4413_ce0;
    end else begin
        weight_buffer0_12_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_12_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1313_we0;
    end else begin
        weight_buffer0_12_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer14_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_13_0_address0 = grp_compute3_fu_1212_weight_buffer45_address0;
    end else begin
        weight_buffer0_13_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer14_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_13_0_ce0 = grp_compute3_fu_1212_weight_buffer45_ce0;
    end else begin
        weight_buffer0_13_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer14_we0;
    end else begin
        weight_buffer0_13_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1414_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_13_1_address0 = grp_compute3_fu_1212_weight_buffer4514_address0;
    end else begin
        weight_buffer0_13_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1414_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_13_1_ce0 = grp_compute3_fu_1212_weight_buffer4514_ce0;
    end else begin
        weight_buffer0_13_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_13_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1414_we0;
    end else begin
        weight_buffer0_13_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer15_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_14_0_address0 = grp_compute3_fu_1212_weight_buffer46_address0;
    end else begin
        weight_buffer0_14_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer15_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_14_0_ce0 = grp_compute3_fu_1212_weight_buffer46_ce0;
    end else begin
        weight_buffer0_14_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer15_we0;
    end else begin
        weight_buffer0_14_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1515_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_14_1_address0 = grp_compute3_fu_1212_weight_buffer4615_address0;
    end else begin
        weight_buffer0_14_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1515_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_14_1_ce0 = grp_compute3_fu_1212_weight_buffer4615_ce0;
    end else begin
        weight_buffer0_14_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_14_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1515_we0;
    end else begin
        weight_buffer0_14_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer16_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_15_0_address0 = grp_compute3_fu_1212_weight_buffer47_address0;
    end else begin
        weight_buffer0_15_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer16_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_15_0_ce0 = grp_compute3_fu_1212_weight_buffer47_ce0;
    end else begin
        weight_buffer0_15_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer16_we0;
    end else begin
        weight_buffer0_15_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1616_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_15_1_address0 = grp_compute3_fu_1212_weight_buffer4716_address0;
    end else begin
        weight_buffer0_15_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1616_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_15_1_ce0 = grp_compute3_fu_1212_weight_buffer4716_ce0;
    end else begin
        weight_buffer0_15_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_15_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1616_we0;
    end else begin
        weight_buffer0_15_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer17_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_16_0_address0 = grp_compute3_fu_1212_weight_buffer48_address0;
    end else begin
        weight_buffer0_16_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer17_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_16_0_ce0 = grp_compute3_fu_1212_weight_buffer48_ce0;
    end else begin
        weight_buffer0_16_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer17_we0;
    end else begin
        weight_buffer0_16_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1717_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_16_1_address0 = grp_compute3_fu_1212_weight_buffer4817_address0;
    end else begin
        weight_buffer0_16_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1717_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_16_1_ce0 = grp_compute3_fu_1212_weight_buffer4817_ce0;
    end else begin
        weight_buffer0_16_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_16_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1717_we0;
    end else begin
        weight_buffer0_16_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer18_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_17_0_address0 = grp_compute3_fu_1212_weight_buffer49_address0;
    end else begin
        weight_buffer0_17_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer18_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_17_0_ce0 = grp_compute3_fu_1212_weight_buffer49_ce0;
    end else begin
        weight_buffer0_17_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer18_we0;
    end else begin
        weight_buffer0_17_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1818_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_17_1_address0 = grp_compute3_fu_1212_weight_buffer4918_address0;
    end else begin
        weight_buffer0_17_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1818_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_17_1_ce0 = grp_compute3_fu_1212_weight_buffer4918_ce0;
    end else begin
        weight_buffer0_17_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_17_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1818_we0;
    end else begin
        weight_buffer0_17_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer19_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_18_0_address0 = grp_compute3_fu_1212_weight_buffer50_address0;
    end else begin
        weight_buffer0_18_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer19_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_18_0_ce0 = grp_compute3_fu_1212_weight_buffer50_ce0;
    end else begin
        weight_buffer0_18_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer19_we0;
    end else begin
        weight_buffer0_18_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1919_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_18_1_address0 = grp_compute3_fu_1212_weight_buffer5019_address0;
    end else begin
        weight_buffer0_18_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1919_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_18_1_ce0 = grp_compute3_fu_1212_weight_buffer5019_ce0;
    end else begin
        weight_buffer0_18_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_18_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1919_we0;
    end else begin
        weight_buffer0_18_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer20_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_19_0_address0 = grp_compute3_fu_1212_weight_buffer51_address0;
    end else begin
        weight_buffer0_19_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer20_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_19_0_ce0 = grp_compute3_fu_1212_weight_buffer51_ce0;
    end else begin
        weight_buffer0_19_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer20_we0;
    end else begin
        weight_buffer0_19_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2020_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_19_1_address0 = grp_compute3_fu_1212_weight_buffer5120_address0;
    end else begin
        weight_buffer0_19_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2020_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_19_1_ce0 = grp_compute3_fu_1212_weight_buffer5120_ce0;
    end else begin
        weight_buffer0_19_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_19_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2020_we0;
    end else begin
        weight_buffer0_19_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer2_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_1_0_address0 = grp_compute3_fu_1212_weight_buffer33_address0;
    end else begin
        weight_buffer0_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_1_0_ce0 = grp_compute3_fu_1212_weight_buffer33_ce0;
    end else begin
        weight_buffer0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer2_we0;
    end else begin
        weight_buffer0_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer22_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_1_1_address0 = grp_compute3_fu_1212_weight_buffer332_address0;
    end else begin
        weight_buffer0_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer22_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_1_1_ce0 = grp_compute3_fu_1212_weight_buffer332_ce0;
    end else begin
        weight_buffer0_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_1_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer22_we0;
    end else begin
        weight_buffer0_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer21_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_20_0_address0 = grp_compute3_fu_1212_weight_buffer52_address0;
    end else begin
        weight_buffer0_20_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer21_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_20_0_ce0 = grp_compute3_fu_1212_weight_buffer52_ce0;
    end else begin
        weight_buffer0_20_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer21_we0;
    end else begin
        weight_buffer0_20_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2121_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_20_1_address0 = grp_compute3_fu_1212_weight_buffer5221_address0;
    end else begin
        weight_buffer0_20_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2121_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_20_1_ce0 = grp_compute3_fu_1212_weight_buffer5221_ce0;
    end else begin
        weight_buffer0_20_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_20_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2121_we0;
    end else begin
        weight_buffer0_20_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer2222_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_21_0_address0 = grp_compute3_fu_1212_weight_buffer53_address0;
    end else begin
        weight_buffer0_21_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2222_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_21_0_ce0 = grp_compute3_fu_1212_weight_buffer53_ce0;
    end else begin
        weight_buffer0_21_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer2222_we0;
    end else begin
        weight_buffer0_21_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2223_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_21_1_address0 = grp_compute3_fu_1212_weight_buffer5322_address0;
    end else begin
        weight_buffer0_21_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2223_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_21_1_ce0 = grp_compute3_fu_1212_weight_buffer5322_ce0;
    end else begin
        weight_buffer0_21_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_21_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2223_we0;
    end else begin
        weight_buffer0_21_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer23_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_22_0_address0 = grp_compute3_fu_1212_weight_buffer54_address0;
    end else begin
        weight_buffer0_22_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer23_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_22_0_ce0 = grp_compute3_fu_1212_weight_buffer54_ce0;
    end else begin
        weight_buffer0_22_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer23_we0;
    end else begin
        weight_buffer0_22_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2324_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_22_1_address0 = grp_compute3_fu_1212_weight_buffer5423_address0;
    end else begin
        weight_buffer0_22_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2324_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_22_1_ce0 = grp_compute3_fu_1212_weight_buffer5423_ce0;
    end else begin
        weight_buffer0_22_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_22_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2324_we0;
    end else begin
        weight_buffer0_22_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer24_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_23_0_address0 = grp_compute3_fu_1212_weight_buffer55_address0;
    end else begin
        weight_buffer0_23_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer24_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_23_0_ce0 = grp_compute3_fu_1212_weight_buffer55_ce0;
    end else begin
        weight_buffer0_23_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer24_we0;
    end else begin
        weight_buffer0_23_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2425_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_23_1_address0 = grp_compute3_fu_1212_weight_buffer5524_address0;
    end else begin
        weight_buffer0_23_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2425_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_23_1_ce0 = grp_compute3_fu_1212_weight_buffer5524_ce0;
    end else begin
        weight_buffer0_23_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_23_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2425_we0;
    end else begin
        weight_buffer0_23_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer25_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_24_0_address0 = grp_compute3_fu_1212_weight_buffer56_address0;
    end else begin
        weight_buffer0_24_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer25_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_24_0_ce0 = grp_compute3_fu_1212_weight_buffer56_ce0;
    end else begin
        weight_buffer0_24_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer25_we0;
    end else begin
        weight_buffer0_24_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2526_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_24_1_address0 = grp_compute3_fu_1212_weight_buffer5625_address0;
    end else begin
        weight_buffer0_24_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2526_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_24_1_ce0 = grp_compute3_fu_1212_weight_buffer5625_ce0;
    end else begin
        weight_buffer0_24_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_24_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2526_we0;
    end else begin
        weight_buffer0_24_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer26_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_25_0_address0 = grp_compute3_fu_1212_weight_buffer57_address0;
    end else begin
        weight_buffer0_25_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer26_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_25_0_ce0 = grp_compute3_fu_1212_weight_buffer57_ce0;
    end else begin
        weight_buffer0_25_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer26_we0;
    end else begin
        weight_buffer0_25_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2627_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_25_1_address0 = grp_compute3_fu_1212_weight_buffer5726_address0;
    end else begin
        weight_buffer0_25_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2627_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_25_1_ce0 = grp_compute3_fu_1212_weight_buffer5726_ce0;
    end else begin
        weight_buffer0_25_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_25_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2627_we0;
    end else begin
        weight_buffer0_25_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer27_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_26_0_address0 = grp_compute3_fu_1212_weight_buffer58_address0;
    end else begin
        weight_buffer0_26_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer27_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_26_0_ce0 = grp_compute3_fu_1212_weight_buffer58_ce0;
    end else begin
        weight_buffer0_26_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer27_we0;
    end else begin
        weight_buffer0_26_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2728_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_26_1_address0 = grp_compute3_fu_1212_weight_buffer5827_address0;
    end else begin
        weight_buffer0_26_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2728_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_26_1_ce0 = grp_compute3_fu_1212_weight_buffer5827_ce0;
    end else begin
        weight_buffer0_26_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_26_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2728_we0;
    end else begin
        weight_buffer0_26_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer28_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_27_0_address0 = grp_compute3_fu_1212_weight_buffer59_address0;
    end else begin
        weight_buffer0_27_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer28_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_27_0_ce0 = grp_compute3_fu_1212_weight_buffer59_ce0;
    end else begin
        weight_buffer0_27_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer28_we0;
    end else begin
        weight_buffer0_27_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2829_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_27_1_address0 = grp_compute3_fu_1212_weight_buffer5928_address0;
    end else begin
        weight_buffer0_27_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2829_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_27_1_ce0 = grp_compute3_fu_1212_weight_buffer5928_ce0;
    end else begin
        weight_buffer0_27_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_27_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2829_we0;
    end else begin
        weight_buffer0_27_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer29_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_28_0_address0 = grp_compute3_fu_1212_weight_buffer60_address0;
    end else begin
        weight_buffer0_28_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer29_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_28_0_ce0 = grp_compute3_fu_1212_weight_buffer60_ce0;
    end else begin
        weight_buffer0_28_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer29_we0;
    end else begin
        weight_buffer0_28_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2930_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_28_1_address0 = grp_compute3_fu_1212_weight_buffer6029_address0;
    end else begin
        weight_buffer0_28_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2930_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_28_1_ce0 = grp_compute3_fu_1212_weight_buffer6029_ce0;
    end else begin
        weight_buffer0_28_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_28_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2930_we0;
    end else begin
        weight_buffer0_28_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer30_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_29_0_address0 = grp_compute3_fu_1212_weight_buffer61_address0;
    end else begin
        weight_buffer0_29_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer30_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_29_0_ce0 = grp_compute3_fu_1212_weight_buffer61_ce0;
    end else begin
        weight_buffer0_29_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer30_we0;
    end else begin
        weight_buffer0_29_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3031_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_29_1_address0 = grp_compute3_fu_1212_weight_buffer6130_address0;
    end else begin
        weight_buffer0_29_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3031_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_29_1_ce0 = grp_compute3_fu_1212_weight_buffer6130_ce0;
    end else begin
        weight_buffer0_29_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_29_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3031_we0;
    end else begin
        weight_buffer0_29_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer3_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_2_0_address0 = grp_compute3_fu_1212_weight_buffer34_address0;
    end else begin
        weight_buffer0_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_2_0_ce0 = grp_compute3_fu_1212_weight_buffer34_ce0;
    end else begin
        weight_buffer0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer3_we0;
    end else begin
        weight_buffer0_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer33_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_2_1_address0 = grp_compute3_fu_1212_weight_buffer343_address0;
    end else begin
        weight_buffer0_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer33_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_2_1_ce0 = grp_compute3_fu_1212_weight_buffer343_ce0;
    end else begin
        weight_buffer0_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_2_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer33_we0;
    end else begin
        weight_buffer0_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer31_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_30_0_address0 = grp_compute3_fu_1212_weight_buffer62_address0;
    end else begin
        weight_buffer0_30_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer31_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_30_0_ce0 = grp_compute3_fu_1212_weight_buffer62_ce0;
    end else begin
        weight_buffer0_30_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer31_we0;
    end else begin
        weight_buffer0_30_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3132_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_30_1_address0 = grp_compute3_fu_1212_weight_buffer6231_address0;
    end else begin
        weight_buffer0_30_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3132_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_30_1_ce0 = grp_compute3_fu_1212_weight_buffer6231_ce0;
    end else begin
        weight_buffer0_30_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_30_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3132_we0;
    end else begin
        weight_buffer0_30_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer32_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_31_0_address0 = grp_compute3_fu_1212_weight_buffer63_address0;
    end else begin
        weight_buffer0_31_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer32_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_31_0_ce0 = grp_compute3_fu_1212_weight_buffer63_ce0;
    end else begin
        weight_buffer0_31_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer32_we0;
    end else begin
        weight_buffer0_31_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3233_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_31_1_address0 = grp_compute3_fu_1212_weight_buffer6332_address0;
    end else begin
        weight_buffer0_31_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3233_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_31_1_ce0 = grp_compute3_fu_1212_weight_buffer6332_ce0;
    end else begin
        weight_buffer0_31_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_31_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3233_we0;
    end else begin
        weight_buffer0_31_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer4_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_3_0_address0 = grp_compute3_fu_1212_weight_buffer35_address0;
    end else begin
        weight_buffer0_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer4_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_3_0_ce0 = grp_compute3_fu_1212_weight_buffer35_ce0;
    end else begin
        weight_buffer0_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer4_we0;
    end else begin
        weight_buffer0_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer44_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_3_1_address0 = grp_compute3_fu_1212_weight_buffer354_address0;
    end else begin
        weight_buffer0_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer44_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_3_1_ce0 = grp_compute3_fu_1212_weight_buffer354_ce0;
    end else begin
        weight_buffer0_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_3_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer44_we0;
    end else begin
        weight_buffer0_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer5_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_4_0_address0 = grp_compute3_fu_1212_weight_buffer36_address0;
    end else begin
        weight_buffer0_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer5_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_4_0_ce0 = grp_compute3_fu_1212_weight_buffer36_ce0;
    end else begin
        weight_buffer0_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer5_we0;
    end else begin
        weight_buffer0_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer55_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_4_1_address0 = grp_compute3_fu_1212_weight_buffer365_address0;
    end else begin
        weight_buffer0_4_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer55_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_4_1_ce0 = grp_compute3_fu_1212_weight_buffer365_ce0;
    end else begin
        weight_buffer0_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_4_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer55_we0;
    end else begin
        weight_buffer0_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer6_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_5_0_address0 = grp_compute3_fu_1212_weight_buffer37_address0;
    end else begin
        weight_buffer0_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer6_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_5_0_ce0 = grp_compute3_fu_1212_weight_buffer37_ce0;
    end else begin
        weight_buffer0_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer6_we0;
    end else begin
        weight_buffer0_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer66_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_5_1_address0 = grp_compute3_fu_1212_weight_buffer376_address0;
    end else begin
        weight_buffer0_5_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer66_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_5_1_ce0 = grp_compute3_fu_1212_weight_buffer376_ce0;
    end else begin
        weight_buffer0_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_5_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer66_we0;
    end else begin
        weight_buffer0_5_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer7_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_6_0_address0 = grp_compute3_fu_1212_weight_buffer38_address0;
    end else begin
        weight_buffer0_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer7_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_6_0_ce0 = grp_compute3_fu_1212_weight_buffer38_ce0;
    end else begin
        weight_buffer0_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer7_we0;
    end else begin
        weight_buffer0_6_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer77_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_6_1_address0 = grp_compute3_fu_1212_weight_buffer387_address0;
    end else begin
        weight_buffer0_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer77_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_6_1_ce0 = grp_compute3_fu_1212_weight_buffer387_ce0;
    end else begin
        weight_buffer0_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_6_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer77_we0;
    end else begin
        weight_buffer0_6_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer8_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_7_0_address0 = grp_compute3_fu_1212_weight_buffer39_address0;
    end else begin
        weight_buffer0_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer8_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_7_0_ce0 = grp_compute3_fu_1212_weight_buffer39_ce0;
    end else begin
        weight_buffer0_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer8_we0;
    end else begin
        weight_buffer0_7_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer88_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_7_1_address0 = grp_compute3_fu_1212_weight_buffer398_address0;
    end else begin
        weight_buffer0_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer88_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_7_1_ce0 = grp_compute3_fu_1212_weight_buffer398_ce0;
    end else begin
        weight_buffer0_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_7_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer88_we0;
    end else begin
        weight_buffer0_7_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer9_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_8_0_address0 = grp_compute3_fu_1212_weight_buffer40_address0;
    end else begin
        weight_buffer0_8_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer9_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_8_0_ce0 = grp_compute3_fu_1212_weight_buffer40_ce0;
    end else begin
        weight_buffer0_8_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer9_we0;
    end else begin
        weight_buffer0_8_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer99_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_8_1_address0 = grp_compute3_fu_1212_weight_buffer409_address0;
    end else begin
        weight_buffer0_8_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer99_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_8_1_ce0 = grp_compute3_fu_1212_weight_buffer409_ce0;
    end else begin
        weight_buffer0_8_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_8_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer99_we0;
    end else begin
        weight_buffer0_8_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer10_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_9_0_address0 = grp_compute3_fu_1212_weight_buffer41_address0;
    end else begin
        weight_buffer0_9_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer10_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_9_0_ce0 = grp_compute3_fu_1212_weight_buffer41_ce0;
    end else begin
        weight_buffer0_9_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer10_we0;
    end else begin
        weight_buffer0_9_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1010_address0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_9_1_address0 = grp_compute3_fu_1212_weight_buffer4110_address0;
    end else begin
        weight_buffer0_9_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1010_ce0;
    end else if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer0_9_1_ce0 = grp_compute3_fu_1212_weight_buffer4110_ce0;
    end else begin
        weight_buffer0_9_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state2) | ((pingpong_reg_1135 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        weight_buffer0_9_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1010_we0;
    end else begin
        weight_buffer0_9_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_0_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_0_0_address0 = grp_compute3_fu_1212_weight_buffer_address0;
        end else begin
            weight_buffer1_0_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_0_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_0_0_ce0 = grp_compute3_fu_1212_weight_buffer_ce0;
        end else begin
            weight_buffer1_0_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_0_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer_we0;
    end else begin
        weight_buffer1_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_0_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_0_1_address0 = grp_compute3_fu_1212_weight_buffer1_address0;
        end else begin
            weight_buffer1_0_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_0_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_0_1_ce0 = grp_compute3_fu_1212_weight_buffer1_ce0;
        end else begin
            weight_buffer1_0_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_0_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1_we0;
    end else begin
        weight_buffer1_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_10_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer11_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_10_0_address0 = grp_compute3_fu_1212_weight_buffer42_address0;
        end else begin
            weight_buffer1_10_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_10_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_10_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer11_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_10_0_ce0 = grp_compute3_fu_1212_weight_buffer42_ce0;
        end else begin
            weight_buffer1_10_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_10_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_10_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer11_we0;
    end else begin
        weight_buffer1_10_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_10_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1111_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_10_1_address0 = grp_compute3_fu_1212_weight_buffer4211_address0;
        end else begin
            weight_buffer1_10_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_10_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_10_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1111_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_10_1_ce0 = grp_compute3_fu_1212_weight_buffer4211_ce0;
        end else begin
            weight_buffer1_10_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_10_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_10_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1111_we0;
    end else begin
        weight_buffer1_10_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_11_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer12_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_11_0_address0 = grp_compute3_fu_1212_weight_buffer43_address0;
        end else begin
            weight_buffer1_11_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_11_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_11_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer12_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_11_0_ce0 = grp_compute3_fu_1212_weight_buffer43_ce0;
        end else begin
            weight_buffer1_11_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_11_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_11_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer12_we0;
    end else begin
        weight_buffer1_11_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_11_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1212_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_11_1_address0 = grp_compute3_fu_1212_weight_buffer4312_address0;
        end else begin
            weight_buffer1_11_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_11_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_11_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1212_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_11_1_ce0 = grp_compute3_fu_1212_weight_buffer4312_ce0;
        end else begin
            weight_buffer1_11_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_11_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_11_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1212_we0;
    end else begin
        weight_buffer1_11_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_12_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer13_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_12_0_address0 = grp_compute3_fu_1212_weight_buffer44_address0;
        end else begin
            weight_buffer1_12_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_12_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_12_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer13_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_12_0_ce0 = grp_compute3_fu_1212_weight_buffer44_ce0;
        end else begin
            weight_buffer1_12_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_12_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_12_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer13_we0;
    end else begin
        weight_buffer1_12_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_12_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1313_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_12_1_address0 = grp_compute3_fu_1212_weight_buffer4413_address0;
        end else begin
            weight_buffer1_12_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_12_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_12_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1313_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_12_1_ce0 = grp_compute3_fu_1212_weight_buffer4413_ce0;
        end else begin
            weight_buffer1_12_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_12_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_12_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1313_we0;
    end else begin
        weight_buffer1_12_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_13_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer14_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_13_0_address0 = grp_compute3_fu_1212_weight_buffer45_address0;
        end else begin
            weight_buffer1_13_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_13_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_13_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer14_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_13_0_ce0 = grp_compute3_fu_1212_weight_buffer45_ce0;
        end else begin
            weight_buffer1_13_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_13_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_13_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer14_we0;
    end else begin
        weight_buffer1_13_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_13_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1414_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_13_1_address0 = grp_compute3_fu_1212_weight_buffer4514_address0;
        end else begin
            weight_buffer1_13_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_13_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_13_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1414_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_13_1_ce0 = grp_compute3_fu_1212_weight_buffer4514_ce0;
        end else begin
            weight_buffer1_13_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_13_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_13_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1414_we0;
    end else begin
        weight_buffer1_13_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_14_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer15_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_14_0_address0 = grp_compute3_fu_1212_weight_buffer46_address0;
        end else begin
            weight_buffer1_14_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_14_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_14_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer15_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_14_0_ce0 = grp_compute3_fu_1212_weight_buffer46_ce0;
        end else begin
            weight_buffer1_14_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_14_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_14_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer15_we0;
    end else begin
        weight_buffer1_14_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_14_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1515_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_14_1_address0 = grp_compute3_fu_1212_weight_buffer4615_address0;
        end else begin
            weight_buffer1_14_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_14_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_14_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1515_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_14_1_ce0 = grp_compute3_fu_1212_weight_buffer4615_ce0;
        end else begin
            weight_buffer1_14_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_14_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_14_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1515_we0;
    end else begin
        weight_buffer1_14_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_15_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer16_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_15_0_address0 = grp_compute3_fu_1212_weight_buffer47_address0;
        end else begin
            weight_buffer1_15_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_15_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_15_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer16_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_15_0_ce0 = grp_compute3_fu_1212_weight_buffer47_ce0;
        end else begin
            weight_buffer1_15_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_15_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_15_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer16_we0;
    end else begin
        weight_buffer1_15_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_15_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1616_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_15_1_address0 = grp_compute3_fu_1212_weight_buffer4716_address0;
        end else begin
            weight_buffer1_15_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_15_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_15_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1616_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_15_1_ce0 = grp_compute3_fu_1212_weight_buffer4716_ce0;
        end else begin
            weight_buffer1_15_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_15_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_15_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1616_we0;
    end else begin
        weight_buffer1_15_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_16_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer17_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_16_0_address0 = grp_compute3_fu_1212_weight_buffer48_address0;
        end else begin
            weight_buffer1_16_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_16_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_16_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer17_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_16_0_ce0 = grp_compute3_fu_1212_weight_buffer48_ce0;
        end else begin
            weight_buffer1_16_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_16_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_16_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer17_we0;
    end else begin
        weight_buffer1_16_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_16_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1717_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_16_1_address0 = grp_compute3_fu_1212_weight_buffer4817_address0;
        end else begin
            weight_buffer1_16_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_16_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_16_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1717_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_16_1_ce0 = grp_compute3_fu_1212_weight_buffer4817_ce0;
        end else begin
            weight_buffer1_16_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_16_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_16_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1717_we0;
    end else begin
        weight_buffer1_16_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_17_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer18_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_17_0_address0 = grp_compute3_fu_1212_weight_buffer49_address0;
        end else begin
            weight_buffer1_17_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_17_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_17_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer18_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_17_0_ce0 = grp_compute3_fu_1212_weight_buffer49_ce0;
        end else begin
            weight_buffer1_17_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_17_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_17_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer18_we0;
    end else begin
        weight_buffer1_17_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_17_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1818_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_17_1_address0 = grp_compute3_fu_1212_weight_buffer4918_address0;
        end else begin
            weight_buffer1_17_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_17_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_17_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1818_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_17_1_ce0 = grp_compute3_fu_1212_weight_buffer4918_ce0;
        end else begin
            weight_buffer1_17_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_17_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_17_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1818_we0;
    end else begin
        weight_buffer1_17_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_18_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer19_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_18_0_address0 = grp_compute3_fu_1212_weight_buffer50_address0;
        end else begin
            weight_buffer1_18_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_18_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_18_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer19_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_18_0_ce0 = grp_compute3_fu_1212_weight_buffer50_ce0;
        end else begin
            weight_buffer1_18_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_18_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_18_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer19_we0;
    end else begin
        weight_buffer1_18_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_18_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1919_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_18_1_address0 = grp_compute3_fu_1212_weight_buffer5019_address0;
        end else begin
            weight_buffer1_18_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_18_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_18_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1919_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_18_1_ce0 = grp_compute3_fu_1212_weight_buffer5019_ce0;
        end else begin
            weight_buffer1_18_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_18_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_18_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1919_we0;
    end else begin
        weight_buffer1_18_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_19_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer20_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_19_0_address0 = grp_compute3_fu_1212_weight_buffer51_address0;
        end else begin
            weight_buffer1_19_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_19_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_19_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer20_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_19_0_ce0 = grp_compute3_fu_1212_weight_buffer51_ce0;
        end else begin
            weight_buffer1_19_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_19_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_19_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer20_we0;
    end else begin
        weight_buffer1_19_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_19_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2020_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_19_1_address0 = grp_compute3_fu_1212_weight_buffer5120_address0;
        end else begin
            weight_buffer1_19_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_19_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_19_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2020_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_19_1_ce0 = grp_compute3_fu_1212_weight_buffer5120_ce0;
        end else begin
            weight_buffer1_19_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_19_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_19_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2020_we0;
    end else begin
        weight_buffer1_19_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_1_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer2_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_1_0_address0 = grp_compute3_fu_1212_weight_buffer33_address0;
        end else begin
            weight_buffer1_1_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_1_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_1_0_ce0 = grp_compute3_fu_1212_weight_buffer33_ce0;
        end else begin
            weight_buffer1_1_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_1_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer2_we0;
    end else begin
        weight_buffer1_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_1_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer22_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_1_1_address0 = grp_compute3_fu_1212_weight_buffer332_address0;
        end else begin
            weight_buffer1_1_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_1_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer22_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_1_1_ce0 = grp_compute3_fu_1212_weight_buffer332_ce0;
        end else begin
            weight_buffer1_1_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_1_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer22_we0;
    end else begin
        weight_buffer1_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_20_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer21_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_20_0_address0 = grp_compute3_fu_1212_weight_buffer52_address0;
        end else begin
            weight_buffer1_20_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_20_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_20_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer21_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_20_0_ce0 = grp_compute3_fu_1212_weight_buffer52_ce0;
        end else begin
            weight_buffer1_20_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_20_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_20_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer21_we0;
    end else begin
        weight_buffer1_20_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_20_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2121_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_20_1_address0 = grp_compute3_fu_1212_weight_buffer5221_address0;
        end else begin
            weight_buffer1_20_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_20_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_20_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2121_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_20_1_ce0 = grp_compute3_fu_1212_weight_buffer5221_ce0;
        end else begin
            weight_buffer1_20_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_20_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_20_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2121_we0;
    end else begin
        weight_buffer1_20_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_21_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer2222_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_21_0_address0 = grp_compute3_fu_1212_weight_buffer53_address0;
        end else begin
            weight_buffer1_21_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_21_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_21_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2222_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_21_0_ce0 = grp_compute3_fu_1212_weight_buffer53_ce0;
        end else begin
            weight_buffer1_21_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_21_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_21_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer2222_we0;
    end else begin
        weight_buffer1_21_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_21_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2223_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_21_1_address0 = grp_compute3_fu_1212_weight_buffer5322_address0;
        end else begin
            weight_buffer1_21_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_21_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_21_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2223_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_21_1_ce0 = grp_compute3_fu_1212_weight_buffer5322_ce0;
        end else begin
            weight_buffer1_21_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_21_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_21_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2223_we0;
    end else begin
        weight_buffer1_21_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_22_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer23_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_22_0_address0 = grp_compute3_fu_1212_weight_buffer54_address0;
        end else begin
            weight_buffer1_22_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_22_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_22_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer23_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_22_0_ce0 = grp_compute3_fu_1212_weight_buffer54_ce0;
        end else begin
            weight_buffer1_22_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_22_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_22_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer23_we0;
    end else begin
        weight_buffer1_22_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_22_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2324_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_22_1_address0 = grp_compute3_fu_1212_weight_buffer5423_address0;
        end else begin
            weight_buffer1_22_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_22_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_22_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2324_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_22_1_ce0 = grp_compute3_fu_1212_weight_buffer5423_ce0;
        end else begin
            weight_buffer1_22_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_22_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_22_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2324_we0;
    end else begin
        weight_buffer1_22_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_23_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer24_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_23_0_address0 = grp_compute3_fu_1212_weight_buffer55_address0;
        end else begin
            weight_buffer1_23_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_23_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_23_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer24_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_23_0_ce0 = grp_compute3_fu_1212_weight_buffer55_ce0;
        end else begin
            weight_buffer1_23_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_23_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_23_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer24_we0;
    end else begin
        weight_buffer1_23_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_23_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2425_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_23_1_address0 = grp_compute3_fu_1212_weight_buffer5524_address0;
        end else begin
            weight_buffer1_23_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_23_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_23_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2425_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_23_1_ce0 = grp_compute3_fu_1212_weight_buffer5524_ce0;
        end else begin
            weight_buffer1_23_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_23_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_23_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2425_we0;
    end else begin
        weight_buffer1_23_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_24_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer25_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_24_0_address0 = grp_compute3_fu_1212_weight_buffer56_address0;
        end else begin
            weight_buffer1_24_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_24_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_24_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer25_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_24_0_ce0 = grp_compute3_fu_1212_weight_buffer56_ce0;
        end else begin
            weight_buffer1_24_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_24_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_24_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer25_we0;
    end else begin
        weight_buffer1_24_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_24_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2526_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_24_1_address0 = grp_compute3_fu_1212_weight_buffer5625_address0;
        end else begin
            weight_buffer1_24_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_24_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_24_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2526_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_24_1_ce0 = grp_compute3_fu_1212_weight_buffer5625_ce0;
        end else begin
            weight_buffer1_24_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_24_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_24_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2526_we0;
    end else begin
        weight_buffer1_24_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_25_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer26_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_25_0_address0 = grp_compute3_fu_1212_weight_buffer57_address0;
        end else begin
            weight_buffer1_25_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_25_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_25_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer26_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_25_0_ce0 = grp_compute3_fu_1212_weight_buffer57_ce0;
        end else begin
            weight_buffer1_25_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_25_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_25_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer26_we0;
    end else begin
        weight_buffer1_25_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_25_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2627_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_25_1_address0 = grp_compute3_fu_1212_weight_buffer5726_address0;
        end else begin
            weight_buffer1_25_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_25_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_25_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2627_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_25_1_ce0 = grp_compute3_fu_1212_weight_buffer5726_ce0;
        end else begin
            weight_buffer1_25_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_25_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_25_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2627_we0;
    end else begin
        weight_buffer1_25_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_26_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer27_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_26_0_address0 = grp_compute3_fu_1212_weight_buffer58_address0;
        end else begin
            weight_buffer1_26_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_26_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_26_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer27_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_26_0_ce0 = grp_compute3_fu_1212_weight_buffer58_ce0;
        end else begin
            weight_buffer1_26_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_26_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_26_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer27_we0;
    end else begin
        weight_buffer1_26_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_26_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2728_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_26_1_address0 = grp_compute3_fu_1212_weight_buffer5827_address0;
        end else begin
            weight_buffer1_26_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_26_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_26_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2728_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_26_1_ce0 = grp_compute3_fu_1212_weight_buffer5827_ce0;
        end else begin
            weight_buffer1_26_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_26_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_26_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2728_we0;
    end else begin
        weight_buffer1_26_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_27_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer28_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_27_0_address0 = grp_compute3_fu_1212_weight_buffer59_address0;
        end else begin
            weight_buffer1_27_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_27_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_27_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer28_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_27_0_ce0 = grp_compute3_fu_1212_weight_buffer59_ce0;
        end else begin
            weight_buffer1_27_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_27_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_27_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer28_we0;
    end else begin
        weight_buffer1_27_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_27_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2829_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_27_1_address0 = grp_compute3_fu_1212_weight_buffer5928_address0;
        end else begin
            weight_buffer1_27_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_27_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_27_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2829_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_27_1_ce0 = grp_compute3_fu_1212_weight_buffer5928_ce0;
        end else begin
            weight_buffer1_27_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_27_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_27_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2829_we0;
    end else begin
        weight_buffer1_27_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_28_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer29_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_28_0_address0 = grp_compute3_fu_1212_weight_buffer60_address0;
        end else begin
            weight_buffer1_28_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_28_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_28_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer29_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_28_0_ce0 = grp_compute3_fu_1212_weight_buffer60_ce0;
        end else begin
            weight_buffer1_28_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_28_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_28_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer29_we0;
    end else begin
        weight_buffer1_28_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_28_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer2930_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_28_1_address0 = grp_compute3_fu_1212_weight_buffer6029_address0;
        end else begin
            weight_buffer1_28_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_28_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_28_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer2930_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_28_1_ce0 = grp_compute3_fu_1212_weight_buffer6029_ce0;
        end else begin
            weight_buffer1_28_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_28_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_28_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer2930_we0;
    end else begin
        weight_buffer1_28_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_29_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer30_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_29_0_address0 = grp_compute3_fu_1212_weight_buffer61_address0;
        end else begin
            weight_buffer1_29_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_29_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_29_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer30_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_29_0_ce0 = grp_compute3_fu_1212_weight_buffer61_ce0;
        end else begin
            weight_buffer1_29_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_29_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_29_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer30_we0;
    end else begin
        weight_buffer1_29_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_29_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3031_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_29_1_address0 = grp_compute3_fu_1212_weight_buffer6130_address0;
        end else begin
            weight_buffer1_29_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_29_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_29_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3031_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_29_1_ce0 = grp_compute3_fu_1212_weight_buffer6130_ce0;
        end else begin
            weight_buffer1_29_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_29_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_29_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3031_we0;
    end else begin
        weight_buffer1_29_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_2_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer3_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_2_0_address0 = grp_compute3_fu_1212_weight_buffer34_address0;
        end else begin
            weight_buffer1_2_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_2_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_2_0_ce0 = grp_compute3_fu_1212_weight_buffer34_ce0;
        end else begin
            weight_buffer1_2_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_2_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer3_we0;
    end else begin
        weight_buffer1_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_2_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer33_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_2_1_address0 = grp_compute3_fu_1212_weight_buffer343_address0;
        end else begin
            weight_buffer1_2_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_2_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer33_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_2_1_ce0 = grp_compute3_fu_1212_weight_buffer343_ce0;
        end else begin
            weight_buffer1_2_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_2_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer33_we0;
    end else begin
        weight_buffer1_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_30_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer31_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_30_0_address0 = grp_compute3_fu_1212_weight_buffer62_address0;
        end else begin
            weight_buffer1_30_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_30_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_30_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer31_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_30_0_ce0 = grp_compute3_fu_1212_weight_buffer62_ce0;
        end else begin
            weight_buffer1_30_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_30_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_30_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer31_we0;
    end else begin
        weight_buffer1_30_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_30_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3132_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_30_1_address0 = grp_compute3_fu_1212_weight_buffer6231_address0;
        end else begin
            weight_buffer1_30_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_30_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_30_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3132_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_30_1_ce0 = grp_compute3_fu_1212_weight_buffer6231_ce0;
        end else begin
            weight_buffer1_30_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_30_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_30_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3132_we0;
    end else begin
        weight_buffer1_30_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_31_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer32_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_31_0_address0 = grp_compute3_fu_1212_weight_buffer63_address0;
        end else begin
            weight_buffer1_31_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_31_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_31_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer32_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_31_0_ce0 = grp_compute3_fu_1212_weight_buffer63_ce0;
        end else begin
            weight_buffer1_31_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_31_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_31_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer32_we0;
    end else begin
        weight_buffer1_31_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_31_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer3233_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_31_1_address0 = grp_compute3_fu_1212_weight_buffer6332_address0;
        end else begin
            weight_buffer1_31_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_31_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_31_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer3233_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_31_1_ce0 = grp_compute3_fu_1212_weight_buffer6332_ce0;
        end else begin
            weight_buffer1_31_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_31_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_31_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer3233_we0;
    end else begin
        weight_buffer1_31_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_3_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer4_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_3_0_address0 = grp_compute3_fu_1212_weight_buffer35_address0;
        end else begin
            weight_buffer1_3_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_3_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer4_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_3_0_ce0 = grp_compute3_fu_1212_weight_buffer35_ce0;
        end else begin
            weight_buffer1_3_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_3_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer4_we0;
    end else begin
        weight_buffer1_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_3_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer44_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_3_1_address0 = grp_compute3_fu_1212_weight_buffer354_address0;
        end else begin
            weight_buffer1_3_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_3_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer44_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_3_1_ce0 = grp_compute3_fu_1212_weight_buffer354_ce0;
        end else begin
            weight_buffer1_3_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_3_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer44_we0;
    end else begin
        weight_buffer1_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_4_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer5_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_4_0_address0 = grp_compute3_fu_1212_weight_buffer36_address0;
        end else begin
            weight_buffer1_4_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_4_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer5_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_4_0_ce0 = grp_compute3_fu_1212_weight_buffer36_ce0;
        end else begin
            weight_buffer1_4_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_4_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer5_we0;
    end else begin
        weight_buffer1_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_4_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer55_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_4_1_address0 = grp_compute3_fu_1212_weight_buffer365_address0;
        end else begin
            weight_buffer1_4_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_4_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_4_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer55_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_4_1_ce0 = grp_compute3_fu_1212_weight_buffer365_ce0;
        end else begin
            weight_buffer1_4_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_4_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer55_we0;
    end else begin
        weight_buffer1_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_5_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer6_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_5_0_address0 = grp_compute3_fu_1212_weight_buffer37_address0;
        end else begin
            weight_buffer1_5_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_5_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer6_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_5_0_ce0 = grp_compute3_fu_1212_weight_buffer37_ce0;
        end else begin
            weight_buffer1_5_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_5_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer6_we0;
    end else begin
        weight_buffer1_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_5_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer66_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_5_1_address0 = grp_compute3_fu_1212_weight_buffer376_address0;
        end else begin
            weight_buffer1_5_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_5_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_5_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer66_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_5_1_ce0 = grp_compute3_fu_1212_weight_buffer376_ce0;
        end else begin
            weight_buffer1_5_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_5_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer66_we0;
    end else begin
        weight_buffer1_5_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_6_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer7_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_6_0_address0 = grp_compute3_fu_1212_weight_buffer38_address0;
        end else begin
            weight_buffer1_6_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_6_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer7_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_6_0_ce0 = grp_compute3_fu_1212_weight_buffer38_ce0;
        end else begin
            weight_buffer1_6_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_6_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer7_we0;
    end else begin
        weight_buffer1_6_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_6_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer77_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_6_1_address0 = grp_compute3_fu_1212_weight_buffer387_address0;
        end else begin
            weight_buffer1_6_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_6_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer77_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_6_1_ce0 = grp_compute3_fu_1212_weight_buffer387_ce0;
        end else begin
            weight_buffer1_6_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_6_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer77_we0;
    end else begin
        weight_buffer1_6_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_7_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer8_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_7_0_address0 = grp_compute3_fu_1212_weight_buffer39_address0;
        end else begin
            weight_buffer1_7_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_7_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer8_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_7_0_ce0 = grp_compute3_fu_1212_weight_buffer39_ce0;
        end else begin
            weight_buffer1_7_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_7_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer8_we0;
    end else begin
        weight_buffer1_7_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_7_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer88_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_7_1_address0 = grp_compute3_fu_1212_weight_buffer398_address0;
        end else begin
            weight_buffer1_7_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_7_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer88_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_7_1_ce0 = grp_compute3_fu_1212_weight_buffer398_ce0;
        end else begin
            weight_buffer1_7_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_7_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer88_we0;
    end else begin
        weight_buffer1_7_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_8_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer9_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_8_0_address0 = grp_compute3_fu_1212_weight_buffer40_address0;
        end else begin
            weight_buffer1_8_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_8_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_8_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer9_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_8_0_ce0 = grp_compute3_fu_1212_weight_buffer40_ce0;
        end else begin
            weight_buffer1_8_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_8_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_8_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer9_we0;
    end else begin
        weight_buffer1_8_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_8_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer99_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_8_1_address0 = grp_compute3_fu_1212_weight_buffer409_address0;
        end else begin
            weight_buffer1_8_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_8_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_8_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer99_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_8_1_ce0 = grp_compute3_fu_1212_weight_buffer409_ce0;
        end else begin
            weight_buffer1_8_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_8_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_8_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer99_we0;
    end else begin
        weight_buffer1_8_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_9_0_address0 = grp_copy_input_weight_fu_1620_weight_buffer10_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_9_0_address0 = grp_compute3_fu_1212_weight_buffer41_address0;
        end else begin
            weight_buffer1_9_0_address0 = 'bx;
        end
    end else begin
        weight_buffer1_9_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_9_0_ce0 = grp_copy_input_weight_fu_1620_weight_buffer10_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_9_0_ce0 = grp_compute3_fu_1212_weight_buffer41_ce0;
        end else begin
            weight_buffer1_9_0_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_9_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_9_0_we0 = grp_copy_input_weight_fu_1620_weight_buffer10_we0;
    end else begin
        weight_buffer1_9_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_9_1_address0 = grp_copy_input_weight_fu_1620_weight_buffer1010_address0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_9_1_address0 = grp_compute3_fu_1212_weight_buffer4110_address0;
        end else begin
            weight_buffer1_9_1_address0 = 'bx;
        end
    end else begin
        weight_buffer1_9_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        if ((pingpong_reg_1135 == 1'd1)) begin
            weight_buffer1_9_1_ce0 = grp_copy_input_weight_fu_1620_weight_buffer1010_ce0;
        end else if ((pingpong_reg_1135 == 1'd0)) begin
            weight_buffer1_9_1_ce0 = grp_compute3_fu_1212_weight_buffer4110_ce0;
        end else begin
            weight_buffer1_9_1_ce0 = 1'b0;
        end
    end else begin
        weight_buffer1_9_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pingpong_reg_1135 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        weight_buffer1_9_1_we0 = grp_copy_input_weight_fu_1620_weight_buffer1010_we0;
    end else begin
        weight_buffer1_9_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((32'd0 == LayerType_read_read_fu_716_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (input_flag_read_read_fu_686_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (32'd1 == LayerType_read_read_fu_716_p2) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd1) & (32'd2 == LayerType_read_read_fu_716_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (pingpongx_offset_read_read_fu_692_p2 == 1'd0) & (32'd2 == LayerType_read_read_fu_716_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((~(32'd1 == LayerType_read_read_fu_716_p2) & ~(32'd0 == LayerType_read_read_fu_716_p2) & ~(32'd2 == LayerType_read_read_fu_716_p2)) | ((32'd0 == LayerType_read_read_fu_716_p2) & (input_flag_read_read_fu_686_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'd0 == and_ln523_1_reg_2993) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'd1 == and_ln523_1_reg_2993))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter9 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state18 : begin
            if (((1'd0 == and_ln523_reg_2997) & (grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((grp_copy_input_weight_fu_1620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18) & (1'd1 == and_ln523_reg_2997))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter9 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter9 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (1'b0 == ap_block_state34_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln572_fu_2700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln572_1_fu_2716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((ap_phi_mux_pingpong_phi_fu_1139_p4 == 1'd1) & (icmp_ln572_1_fu_2716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (1'b0 == ap_block_state39_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LayerType_read_read_fu_716_p2 = LayerType;

assign TMP_N_1_fu_2742_p2 = (TMP_N_reg_1112 + TN);

assign Xoffset_1_fu_2312_p3 = {{select_ln527_7_reg_3169}, {trunc_ln533_5_reg_3144_pp0_iter4_reg}};

assign Xoffset_fu_2679_p3 = {{select_ln527_2_reg_3369}, {trunc_ln533_2_reg_3344_pp1_iter4_reg}};

assign Yoffset_1_fu_2175_p3 = {{empty_84_reg_3090}, {empty_85_reg_3095}};

assign Yoffset_1_mid1_fu_2218_p3 = {{select_ln526_8_reg_3116}, {empty_87_reg_3133}};

assign Yoffset_1_mid2_fu_2199_p3 = {{select_ln526_8_reg_3116}, {1'd0}};

assign Yoffset_1_mid_fu_2181_p3 = {{empty_86_reg_3111}, {1'd0}};

assign Yoffset_fu_2542_p3 = {{empty_88_reg_3290}, {empty_89_reg_3295}};

assign Yoffset_mid1_fu_2585_p3 = {{select_ln526_2_reg_3316}, {empty_91_reg_3333}};

assign Yoffset_mid2_fu_2566_p3 = {{select_ln526_2_reg_3316}, {1'd0}};

assign Yoffset_mid_fu_2548_p3 = {{empty_90_reg_3311}, {1'd0}};

assign add_fu_1960_p2 = (nLoops + 32'd1);

assign add_ln526_1_fu_2067_p2 = (ap_phi_mux_y_1_phi_fu_995_p4 + 31'd1);

assign add_ln526_2_fu_2360_p2 = (indvar_flatten119_reg_1035 + 65'd1);

assign add_ln526_3_fu_1993_p2 = (indvar_flatten55_reg_958 + 65'd1);

assign add_ln526_fu_2434_p2 = (ap_phi_mux_y_phi_fu_1072_p4 + 31'd1);

assign add_ln527_1_fu_2277_p2 = (select_ln526_6_fu_2248_p3 + 32'd1);

assign add_ln527_2_fu_2376_p2 = (indvar_flatten87_reg_1046 + 35'd1);

assign add_ln527_3_fu_2009_p2 = (indvar_flatten23_reg_969 + 35'd1);

assign add_ln527_fu_2644_p2 = (select_ln526_fu_2615_p3 + 32'd1);

assign add_ln528_2_fu_2412_p2 = (indvar_flatten63_reg_1057 + 4'd1);

assign add_ln528_3_fu_2045_p2 = (indvar_flatten_reg_980 + 4'd1);

assign add_ln536_1_fu_2241_p3 = {{select_ln519_4_fu_2224_p3}, {trunc_ln533_5_reg_3144}};

assign add_ln_fu_2608_p3 = {{select_ln519_1_fu_2591_p3}, {trunc_ln533_2_reg_3344}};

assign and_ln526_1_fu_2468_p2 = (xor_ln526_reg_3260 & icmp_ln529_fu_2462_p2);

assign and_ln526_2_fu_2401_p2 = (xor_ln526_fu_2390_p2 & icmp_ln528_fu_2395_p2);

assign and_ln526_3_fu_2188_p2 = (xor_ln526_1_reg_3060_pp0_iter2_reg & empty_85_reg_3095);

assign and_ln526_4_fu_2101_p2 = (xor_ln526_1_reg_3060 & icmp_ln529_1_fu_2095_p2);

assign and_ln526_5_fu_2034_p2 = (xor_ln526_1_fu_2023_p2 & icmp_ln528_1_fu_2028_p2);

assign and_ln526_fu_2555_p2 = (xor_ln526_reg_3260_pp1_iter2_reg & empty_89_reg_3295);

assign and_ln527_1_fu_2490_p2 = (or_ln527_1_fu_2485_p2 & and_ln526_1_fu_2468_p2);

assign and_ln527_2_fu_2206_p2 = (or_ln527_3_reg_3122 & and_ln526_3_fu_2188_p2);

assign and_ln527_3_fu_2123_p2 = (or_ln527_3_fu_2118_p2 & and_ln526_4_fu_2101_p2);

assign and_ln527_fu_2573_p2 = (or_ln527_1_reg_3322 & and_ln526_fu_2555_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_on_subcall_done = ((grp_pool_yolo24_fu_1874_ap_done == 1'b0) | (grp_copy_input_weight_fu_1620_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state35_on_subcall_done = ((grp_pool_yolo24_fu_1874_ap_done == 1'b0) | (grp_copy_input_weight_fu_1620_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state39_on_subcall_done = (((pingpong_reg_1135 == 1'd1) & (grp_compute3_fu_1212_ap_done == 1'b0)) | ((pingpong_reg_1135 == 1'd1) & (grp_copy_input_weight_fu_1620_ap_done == 1'b0)) | ((pingpong_reg_1135 == 1'd0) & (grp_compute3_fu_1212_ap_done == 1'b0)) | ((pingpong_reg_1135 == 1'd0) & (grp_copy_input_weight_fu_1620_ap_done == 1'b0)));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_pingpong_phi_fu_1139_p4 = pingpong_reg_1135;

assign beta_buffer_address0 = grp_compute3_fu_1212_beta_buffer_address0;

assign cmp4_fu_2721_p2 = ((zext_ln572_fu_2711_p1 != nLoops) ? 1'b1 : 1'b0);

assign empty_81_fu_1938_p1 = TR_MIN[5:0];

assign empty_82_fu_1942_p1 = TM_MIN[5:0];

assign empty_84_fu_2059_p1 = ap_phi_mux_y_1_phi_fu_995_p4[4:0];

assign empty_85_fu_2063_p1 = ky_1_reg_1002[0:0];

assign empty_86_fu_2084_p1 = add_ln526_1_fu_2067_p2[4:0];

assign empty_87_fu_2153_p1 = ky_4_fu_2129_p2[0:0];

assign empty_88_fu_2426_p1 = ap_phi_mux_y_phi_fu_1072_p4[4:0];

assign empty_89_fu_2430_p1 = ky_reg_1079[0:0];

assign empty_90_fu_2451_p1 = add_ln526_fu_2434_p2[4:0];

assign empty_91_fu_2520_p1 = ky_5_fu_2496_p2[0:0];

assign empty_fu_1934_p1 = TC_MIN[5:0];

assign grp_compute3_fu_1212_ap_start = grp_compute3_fu_1212_ap_start_reg;

assign grp_copy_input_weight_fu_1620_ap_start = grp_copy_input_weight_fu_1620_ap_start_reg;

assign grp_fu_1906_p2 = (($signed(TR_MIN) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_1912_p2 = (process_flag & grp_fu_1906_p2);

assign grp_fu_1924_p2 = ((n_reg_1124 != 31'd0) ? 1'b1 : 1'b0);

assign grp_fu_1930_p2 = ((zext_ln572_fu_2711_p1 == nLoops) ? 1'b1 : 1'b0);

assign grp_fu_1984_p0 = grp_fu_1984_p00;

assign grp_fu_1984_p00 = trunc_ln526_1_fu_1966_p1;

assign grp_fu_1984_p1 = grp_fu_1984_p10;

assign grp_fu_1984_p10 = tmp_5_fu_1969_p3;

assign grp_fu_2351_p0 = grp_fu_2351_p00;

assign grp_fu_2351_p00 = trunc_ln526_fu_2333_p1;

assign grp_fu_2351_p1 = grp_fu_2351_p10;

assign grp_fu_2351_p10 = tmp_fu_2336_p3;

assign grp_fu_2759_p1 = 10'd26;

assign grp_fu_2765_p0 = grp_fu_2765_p00;

assign grp_fu_2765_p00 = select_ln519_5_fu_2230_p3;

assign grp_fu_2765_p1 = 12'd53;

assign grp_fu_2765_p2 = grp_fu_2765_p20;

assign grp_fu_2765_p20 = Xoffset_1_fu_2312_p3;

assign grp_fu_2773_p1 = 10'd26;

assign grp_fu_2779_p0 = grp_fu_2779_p00;

assign grp_fu_2779_p00 = select_ln519_2_fu_2597_p3;

assign grp_fu_2779_p1 = 12'd53;

assign grp_fu_2779_p2 = grp_fu_2779_p20;

assign grp_fu_2779_p20 = Xoffset_fu_2679_p3;

assign grp_pool_yolo24_fu_1874_ap_start = grp_pool_yolo24_fu_1874_ap_start_reg;

assign icmp_ln526_2_fu_2366_p2 = ((indvar_flatten119_reg_1035 == mul_ln526_reg_3227) ? 1'b1 : 1'b0);

assign icmp_ln526_3_fu_1999_p2 = ((indvar_flatten55_reg_958 == mul_ln526_1_reg_3027) ? 1'b1 : 1'b0);

assign icmp_ln527_1_fu_2004_p2 = ((indvar_flatten23_reg_969 == zext_ln526_3_reg_3022) ? 1'b1 : 1'b0);

assign icmp_ln527_fu_2371_p2 = ((indvar_flatten87_reg_1046 == zext_ln526_reg_3222) ? 1'b1 : 1'b0);

assign icmp_ln528_1_fu_2028_p2 = ((indvar_flatten_reg_980 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln528_fu_2395_p2 = ((indvar_flatten63_reg_1057 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln529_1_fu_2095_p2 = ((kx_1_reg_1013 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln529_fu_2462_p2 = ((kx_reg_1090 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln572_1_fu_2716_p2 = ((zext_ln572_fu_2711_p1 == add_reg_3001) ? 1'b1 : 1'b0);

assign icmp_ln572_fu_2700_p2 = (($signed(add_reg_3001) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign input_flag_read_read_fu_686_p2 = input_flag;

assign kx_2_fu_2536_p2 = (select_ln519_fu_2512_p3 + 2'd1);

assign kx_3_fu_2169_p2 = (select_ln519_3_fu_2145_p3 + 2'd1);

assign ky_4_fu_2129_p2 = (select_ln527_5_fu_2106_p3 + 2'd1);

assign ky_5_fu_2496_p2 = (select_ln527_fu_2473_p3 + 2'd1);

assign m_axi_DATA_BUS2_ARADDR = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARADDR;

assign m_axi_DATA_BUS2_ARBURST = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARBURST;

assign m_axi_DATA_BUS2_ARCACHE = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARCACHE;

assign m_axi_DATA_BUS2_ARID = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARID;

assign m_axi_DATA_BUS2_ARLEN = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLEN;

assign m_axi_DATA_BUS2_ARLOCK = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARLOCK;

assign m_axi_DATA_BUS2_ARPROT = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARPROT;

assign m_axi_DATA_BUS2_ARQOS = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARQOS;

assign m_axi_DATA_BUS2_ARREGION = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARREGION;

assign m_axi_DATA_BUS2_ARSIZE = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARSIZE;

assign m_axi_DATA_BUS2_ARUSER = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS2_ARUSER;

assign m_axi_DATA_BUS2_AWADDR = 64'd0;

assign m_axi_DATA_BUS2_AWBURST = 2'd0;

assign m_axi_DATA_BUS2_AWCACHE = 4'd0;

assign m_axi_DATA_BUS2_AWID = 1'd0;

assign m_axi_DATA_BUS2_AWLEN = 32'd0;

assign m_axi_DATA_BUS2_AWLOCK = 2'd0;

assign m_axi_DATA_BUS2_AWPROT = 3'd0;

assign m_axi_DATA_BUS2_AWQOS = 4'd0;

assign m_axi_DATA_BUS2_AWREGION = 4'd0;

assign m_axi_DATA_BUS2_AWSIZE = 3'd0;

assign m_axi_DATA_BUS2_AWUSER = 1'd0;

assign m_axi_DATA_BUS2_AWVALID = 1'b0;

assign m_axi_DATA_BUS2_BREADY = 1'b0;

assign m_axi_DATA_BUS2_WDATA = 32'd0;

assign m_axi_DATA_BUS2_WID = 1'd0;

assign m_axi_DATA_BUS2_WLAST = 1'b0;

assign m_axi_DATA_BUS2_WSTRB = 4'd0;

assign m_axi_DATA_BUS2_WUSER = 1'd0;

assign m_axi_DATA_BUS2_WVALID = 1'b0;

assign m_axi_DATA_BUS_ARADDR = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARADDR;

assign m_axi_DATA_BUS_ARBURST = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARBURST;

assign m_axi_DATA_BUS_ARCACHE = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARCACHE;

assign m_axi_DATA_BUS_ARID = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARID;

assign m_axi_DATA_BUS_ARLEN = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLEN;

assign m_axi_DATA_BUS_ARLOCK = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARLOCK;

assign m_axi_DATA_BUS_ARPROT = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARPROT;

assign m_axi_DATA_BUS_ARQOS = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARQOS;

assign m_axi_DATA_BUS_ARREGION = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARREGION;

assign m_axi_DATA_BUS_ARSIZE = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARSIZE;

assign m_axi_DATA_BUS_ARUSER = grp_copy_input_weight_fu_1620_m_axi_DATA_BUS_ARUSER;

assign m_axi_DATA_BUS_AWADDR = 64'd0;

assign m_axi_DATA_BUS_AWBURST = 2'd0;

assign m_axi_DATA_BUS_AWCACHE = 4'd0;

assign m_axi_DATA_BUS_AWID = 1'd0;

assign m_axi_DATA_BUS_AWLEN = 32'd0;

assign m_axi_DATA_BUS_AWLOCK = 2'd0;

assign m_axi_DATA_BUS_AWPROT = 3'd0;

assign m_axi_DATA_BUS_AWQOS = 4'd0;

assign m_axi_DATA_BUS_AWREGION = 4'd0;

assign m_axi_DATA_BUS_AWSIZE = 3'd0;

assign m_axi_DATA_BUS_AWUSER = 1'd0;

assign m_axi_DATA_BUS_AWVALID = 1'b0;

assign m_axi_DATA_BUS_BREADY = 1'b0;

assign m_axi_DATA_BUS_WDATA = 32'd0;

assign m_axi_DATA_BUS_WID = 1'd0;

assign m_axi_DATA_BUS_WLAST = 1'b0;

assign m_axi_DATA_BUS_WSTRB = 4'd0;

assign m_axi_DATA_BUS_WUSER = 1'd0;

assign m_axi_DATA_BUS_WVALID = 1'b0;

assign n_1_fu_2705_p2 = (n_reg_1124 + 31'd1);

assign or_ln519_1_fu_2135_p2 = (and_ln527_3_fu_2123_p2 | and_ln526_5_reg_3071);

assign or_ln519_2_fu_2507_p2 = (or_ln519_fu_2502_p2 | icmp_ln527_reg_3241_pp1_iter1_reg);

assign or_ln519_3_fu_2140_p2 = (or_ln519_1_fu_2135_p2 | icmp_ln527_1_reg_3041_pp0_iter1_reg);

assign or_ln519_fu_2502_p2 = (and_ln527_1_fu_2490_p2 | and_ln526_2_reg_3271);

assign or_ln527_1_fu_2485_p2 = (xor_ln527_fu_2480_p2 | icmp_ln527_reg_3241_pp1_iter1_reg);

assign or_ln527_2_fu_2040_p2 = (icmp_ln527_1_reg_3041 | and_ln526_5_fu_2034_p2);

assign or_ln527_3_fu_2118_p2 = (xor_ln527_1_fu_2113_p2 | icmp_ln527_1_reg_3041_pp0_iter1_reg);

assign or_ln527_fu_2407_p2 = (icmp_ln527_reg_3241 | and_ln526_2_fu_2401_p2);

assign output_buffer10_address0 = grp_compute3_fu_1212_output_buffer11_address0;

assign output_buffer10_d0 = grp_compute3_fu_1212_output_buffer11_d0;

assign output_buffer11_address0 = grp_compute3_fu_1212_output_buffer12_address0;

assign output_buffer11_d0 = grp_compute3_fu_1212_output_buffer12_d0;

assign output_buffer12_address0 = grp_compute3_fu_1212_output_buffer13_address0;

assign output_buffer12_d0 = grp_compute3_fu_1212_output_buffer13_d0;

assign output_buffer13_address0 = grp_compute3_fu_1212_output_buffer14_address0;

assign output_buffer13_d0 = grp_compute3_fu_1212_output_buffer14_d0;

assign output_buffer14_address0 = grp_compute3_fu_1212_output_buffer15_address0;

assign output_buffer14_d0 = grp_compute3_fu_1212_output_buffer15_d0;

assign output_buffer15_address0 = grp_compute3_fu_1212_output_buffer16_address0;

assign output_buffer15_d0 = grp_compute3_fu_1212_output_buffer16_d0;

assign output_buffer16_address0 = grp_compute3_fu_1212_output_buffer17_address0;

assign output_buffer16_d0 = grp_compute3_fu_1212_output_buffer17_d0;

assign output_buffer17_address0 = grp_compute3_fu_1212_output_buffer18_address0;

assign output_buffer17_d0 = grp_compute3_fu_1212_output_buffer18_d0;

assign output_buffer18_address0 = grp_compute3_fu_1212_output_buffer19_address0;

assign output_buffer18_d0 = grp_compute3_fu_1212_output_buffer19_d0;

assign output_buffer19_address0 = grp_compute3_fu_1212_output_buffer20_address0;

assign output_buffer19_d0 = grp_compute3_fu_1212_output_buffer20_d0;

assign output_buffer20_address0 = grp_compute3_fu_1212_output_buffer21_address0;

assign output_buffer20_d0 = grp_compute3_fu_1212_output_buffer21_d0;

assign output_buffer21_address0 = grp_compute3_fu_1212_output_buffer22_address0;

assign output_buffer21_d0 = grp_compute3_fu_1212_output_buffer22_d0;

assign output_buffer22_address0 = grp_compute3_fu_1212_output_buffer23_address0;

assign output_buffer22_d0 = grp_compute3_fu_1212_output_buffer23_d0;

assign output_buffer23_address0 = grp_compute3_fu_1212_output_buffer24_address0;

assign output_buffer23_d0 = grp_compute3_fu_1212_output_buffer24_d0;

assign output_buffer24_address0 = grp_compute3_fu_1212_output_buffer25_address0;

assign output_buffer24_d0 = grp_compute3_fu_1212_output_buffer25_d0;

assign output_buffer25_address0 = grp_compute3_fu_1212_output_buffer26_address0;

assign output_buffer25_d0 = grp_compute3_fu_1212_output_buffer26_d0;

assign output_buffer26_address0 = grp_compute3_fu_1212_output_buffer27_address0;

assign output_buffer26_d0 = grp_compute3_fu_1212_output_buffer27_d0;

assign output_buffer27_address0 = grp_compute3_fu_1212_output_buffer28_address0;

assign output_buffer27_d0 = grp_compute3_fu_1212_output_buffer28_d0;

assign output_buffer28_address0 = grp_compute3_fu_1212_output_buffer29_address0;

assign output_buffer28_d0 = grp_compute3_fu_1212_output_buffer29_d0;

assign output_buffer29_address0 = grp_compute3_fu_1212_output_buffer30_address0;

assign output_buffer29_d0 = grp_compute3_fu_1212_output_buffer30_d0;

assign output_buffer30_address0 = grp_compute3_fu_1212_output_buffer31_address0;

assign output_buffer30_d0 = grp_compute3_fu_1212_output_buffer31_d0;

assign output_buffer31_address0 = grp_compute3_fu_1212_output_buffer32_address0;

assign output_buffer31_d0 = grp_compute3_fu_1212_output_buffer32_d0;

assign output_buffer4_address0 = grp_compute3_fu_1212_output_buffer5_address0;

assign output_buffer4_d0 = grp_compute3_fu_1212_output_buffer5_d0;

assign output_buffer5_address0 = grp_compute3_fu_1212_output_buffer6_address0;

assign output_buffer5_d0 = grp_compute3_fu_1212_output_buffer6_d0;

assign output_buffer6_address0 = grp_compute3_fu_1212_output_buffer7_address0;

assign output_buffer6_d0 = grp_compute3_fu_1212_output_buffer7_d0;

assign output_buffer7_address0 = grp_compute3_fu_1212_output_buffer8_address0;

assign output_buffer7_d0 = grp_compute3_fu_1212_output_buffer8_d0;

assign output_buffer8_address0 = grp_compute3_fu_1212_output_buffer9_address0;

assign output_buffer8_d0 = grp_compute3_fu_1212_output_buffer9_d0;

assign output_buffer9_address0 = grp_compute3_fu_1212_output_buffer10_address0;

assign output_buffer9_d0 = grp_compute3_fu_1212_output_buffer10_d0;

assign pingpongx_offset_read_read_fu_692_p2 = pingpongx_offset;

assign select_ln519_1_fu_2591_p3 = ((and_ln527_1_reg_3327[0:0] == 1'b1) ? empty_91_reg_3333 : and_ln527_fu_2573_p2);

assign select_ln519_2_fu_2597_p3 = ((and_ln527_1_reg_3327[0:0] == 1'b1) ? Yoffset_mid1_fu_2585_p3 : select_ln527_3_fu_2578_p3);

assign select_ln519_3_fu_2145_p3 = ((or_ln519_3_fu_2140_p2[0:0] == 1'b1) ? 2'd0 : kx_1_reg_1013);

assign select_ln519_4_fu_2224_p3 = ((and_ln527_3_reg_3127[0:0] == 1'b1) ? empty_87_reg_3133 : and_ln527_2_fu_2206_p2);

assign select_ln519_5_fu_2230_p3 = ((and_ln527_3_reg_3127[0:0] == 1'b1) ? Yoffset_1_mid1_fu_2218_p3 : select_ln527_8_fu_2211_p3);

assign select_ln519_fu_2512_p3 = ((or_ln519_2_fu_2507_p2[0:0] == 1'b1) ? 2'd0 : kx_reg_1090);

assign select_ln526_10_fu_2270_p3 = ((icmp_ln527_1_reg_3041_pp0_iter3_reg[0:0] == 1'b1) ? 7'd0 : trunc_ln533_3_fu_2266_p1);

assign select_ln526_11_fu_2192_p3 = ((icmp_ln527_1_reg_3041_pp0_iter2_reg[0:0] == 1'b1) ? Yoffset_1_mid_fu_2181_p3 : Yoffset_1_fu_2175_p3);

assign select_ln526_1_fu_2440_p3 = ((icmp_ln527_reg_3241_pp1_iter1_reg[0:0] == 1'b1) ? add_ln526_fu_2434_p2 : ap_phi_mux_y_phi_fu_1072_p4);

assign select_ln526_2_fu_2455_p3 = ((icmp_ln527_reg_3241_pp1_iter1_reg[0:0] == 1'b1) ? empty_90_fu_2451_p1 : empty_88_fu_2426_p1);

assign select_ln526_3_fu_2626_p3 = ((icmp_ln527_reg_3241_pp1_iter3_reg[0:0] == 1'b1) ? 10'd0 : trunc_ln526_2_fu_2622_p1);

assign select_ln526_4_fu_2637_p3 = ((icmp_ln527_reg_3241_pp1_iter3_reg[0:0] == 1'b1) ? 7'd0 : trunc_ln533_fu_2633_p1);

assign select_ln526_5_fu_2559_p3 = ((icmp_ln527_reg_3241_pp1_iter2_reg[0:0] == 1'b1) ? Yoffset_mid_fu_2548_p3 : Yoffset_fu_2542_p3);

assign select_ln526_6_fu_2248_p3 = ((icmp_ln527_1_reg_3041_pp0_iter3_reg[0:0] == 1'b1) ? 32'd0 : x_1_reg_1024);

assign select_ln526_7_fu_2073_p3 = ((icmp_ln527_1_reg_3041_pp0_iter1_reg[0:0] == 1'b1) ? add_ln526_1_fu_2067_p2 : ap_phi_mux_y_1_phi_fu_995_p4);

assign select_ln526_8_fu_2088_p3 = ((icmp_ln527_1_reg_3041_pp0_iter1_reg[0:0] == 1'b1) ? empty_86_fu_2084_p1 : empty_84_fu_2059_p1);

assign select_ln526_9_fu_2259_p3 = ((icmp_ln527_1_reg_3041_pp0_iter3_reg[0:0] == 1'b1) ? 10'd0 : trunc_ln526_3_fu_2255_p1);

assign select_ln526_fu_2615_p3 = ((icmp_ln527_reg_3241_pp1_iter3_reg[0:0] == 1'b1) ? 32'd0 : x_reg_1101);

assign select_ln527_10_fu_2382_p3 = ((icmp_ln527_fu_2371_p2[0:0] == 1'b1) ? 35'd1 : add_ln527_2_fu_2376_p2);

assign select_ln527_11_fu_2015_p3 = ((icmp_ln527_1_fu_2004_p2[0:0] == 1'b1) ? 35'd1 : add_ln527_3_fu_2009_p2);

assign select_ln527_1_fu_2654_p3 = ((and_ln526_2_reg_3271_pp1_iter3_reg[0:0] == 1'b1) ? trunc_ln527_fu_2650_p1 : select_ln526_3_fu_2626_p3);

assign select_ln527_2_fu_2665_p3 = ((and_ln526_2_reg_3271_pp1_iter3_reg[0:0] == 1'b1) ? trunc_ln533_1_fu_2661_p1 : select_ln526_4_fu_2637_p3);

assign select_ln527_3_fu_2578_p3 = ((and_ln526_2_reg_3271_pp1_iter2_reg[0:0] == 1'b1) ? Yoffset_mid2_fu_2566_p3 : select_ln526_5_fu_2559_p3);

assign select_ln527_4_fu_2672_p3 = ((and_ln526_2_reg_3271_pp1_iter3_reg[0:0] == 1'b1) ? add_ln527_fu_2644_p2 : select_ln526_fu_2615_p3);

assign select_ln527_5_fu_2106_p3 = ((or_ln527_2_reg_3080[0:0] == 1'b1) ? 2'd0 : ky_1_reg_1002);

assign select_ln527_6_fu_2287_p3 = ((and_ln526_5_reg_3071_pp0_iter3_reg[0:0] == 1'b1) ? trunc_ln527_1_fu_2283_p1 : select_ln526_9_fu_2259_p3);

assign select_ln527_7_fu_2298_p3 = ((and_ln526_5_reg_3071_pp0_iter3_reg[0:0] == 1'b1) ? trunc_ln533_4_fu_2294_p1 : select_ln526_10_fu_2270_p3);

assign select_ln527_8_fu_2211_p3 = ((and_ln526_5_reg_3071_pp0_iter2_reg[0:0] == 1'b1) ? Yoffset_1_mid2_fu_2199_p3 : select_ln526_11_fu_2192_p3);

assign select_ln527_9_fu_2305_p3 = ((and_ln526_5_reg_3071_pp0_iter3_reg[0:0] == 1'b1) ? add_ln527_1_fu_2277_p2 : select_ln526_6_fu_2248_p3);

assign select_ln527_fu_2473_p3 = ((or_ln527_reg_3280[0:0] == 1'b1) ? 2'd0 : ky_reg_1079);

assign select_ln528_1_fu_2157_p3 = ((and_ln527_3_fu_2123_p2[0:0] == 1'b1) ? ky_4_fu_2129_p2 : select_ln527_5_fu_2106_p3);

assign select_ln528_2_fu_2418_p3 = ((or_ln527_fu_2407_p2[0:0] == 1'b1) ? 4'd1 : add_ln528_2_fu_2412_p2);

assign select_ln528_3_fu_2051_p3 = ((or_ln527_2_fu_2040_p2[0:0] == 1'b1) ? 4'd1 : add_ln528_3_fu_2045_p2);

assign select_ln528_fu_2524_p3 = ((and_ln527_1_fu_2490_p2[0:0] == 1'b1) ? ky_5_fu_2496_p2 : select_ln527_fu_2473_p3);

assign tmp_5_fu_1969_p3 = {{TC_MIN}, {2'd0}};

assign tmp_fu_2336_p3 = {{TC_MIN}, {2'd0}};

assign trunc_ln526_1_fu_1966_p1 = TR_MIN[30:0];

assign trunc_ln526_2_fu_2622_p1 = x_reg_1101[9:0];

assign trunc_ln526_3_fu_2255_p1 = x_1_reg_1024[9:0];

assign trunc_ln526_fu_2333_p1 = TR_MIN[30:0];

assign trunc_ln527_1_fu_2283_p1 = add_ln527_1_fu_2277_p2[9:0];

assign trunc_ln527_fu_2650_p1 = add_ln527_fu_2644_p2[9:0];

assign trunc_ln533_1_fu_2661_p1 = add_ln527_fu_2644_p2[6:0];

assign trunc_ln533_2_fu_2532_p1 = select_ln519_fu_2512_p3[0:0];

assign trunc_ln533_3_fu_2266_p1 = x_1_reg_1024[6:0];

assign trunc_ln533_4_fu_2294_p1 = add_ln527_1_fu_2277_p2[6:0];

assign trunc_ln533_5_fu_2165_p1 = select_ln519_3_fu_2145_p3[0:0];

assign trunc_ln533_fu_2633_p1 = x_reg_1101[6:0];

assign trunc_ln536_1_fu_2080_p1 = select_ln526_7_fu_2073_p3[9:0];

assign trunc_ln536_fu_2447_p1 = select_ln526_1_fu_2440_p3[9:0];

assign xor_ln526_1_fu_2023_p2 = (icmp_ln527_1_reg_3041 ^ 1'd1);

assign xor_ln526_fu_2390_p2 = (icmp_ln527_reg_3241 ^ 1'd1);

assign xor_ln527_1_fu_2113_p2 = (icmp_ln528_1_reg_3066 ^ 1'd1);

assign xor_ln527_fu_2480_p2 = (icmp_ln528_reg_3266 ^ 1'd1);

assign zext_ln526_3_fu_1990_p1 = tmp_5_reg_3007;

assign zext_ln526_fu_2357_p1 = tmp_reg_3207;

assign zext_ln536_3_fu_2689_p1 = add_ln536_2_reg_3389;

assign zext_ln536_4_fu_2326_p1 = $unsigned(add_ln536_3_reg_3184_pp0_iter8_reg);

assign zext_ln536_7_fu_2322_p1 = add_ln536_4_reg_3189;

assign zext_ln536_fu_2693_p1 = $unsigned(add_ln536_reg_3384_pp1_iter8_reg);

assign zext_ln572_fu_2711_p1 = n_reg_1124;

always @ (posedge ap_clk) begin
    tmp_5_reg_3007[1:0] <= 2'b00;
    zext_ln526_3_reg_3022[1:0] <= 2'b00;
    zext_ln526_3_reg_3022[34] <= 1'b0;
    tmp_reg_3207[1:0] <= 2'b00;
    zext_ln526_reg_3222[1:0] <= 2'b00;
    zext_ln526_reg_3222[34] <= 1'b0;
end

endmodule //YOLO2_FPGA_intra_pingpong_wrapper
